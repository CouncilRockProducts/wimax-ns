
/****************************************************************************
*
* Auto generated file
* Version XXX
* Compliant with XXX.bm version XXX
* 3/22/2009 10:33:51 AM
*
*****************************************************************************/

#ifndef _L4BUFMAN_DLL_L3L4STRUCTS_H
#define _L4BUFMAN_DLL_L3L4STRUCTS_H


#include "L3L4Structs.h"
#include "L4BufMan_dll_L4Common.h"



L4BUFMANDLL_API void L4BUFMANDLL_BM_GetL4MVersion_Header_Version_GET( UINT8* base_ptr, UINT16* version );
L4BUFMANDLL_API void L4BUFMANDLL_BM_GetL4MVersion_Header_Accessibility_GET( UINT8* base_ptr, UINT16* accessibility );
L4BUFMANDLL_API void L4BUFMANDLL_BM_GetL4MVersion_Header_Status_GET( UINT8* base_ptr, UINT16* status );
L4BUFMANDLL_API void L4BUFMANDLL_BM_GetL4MVersion_Header_Length_GET( UINT8* base_ptr, UINT32* listSize );
L4BUFMANDLL_API void L4BUFMANDLL_BM_GetL4MVersion_List_GET_FIRST( UINT8* base_ptr, UINT32* out_diff, UINT32* out_cur_bitoff );
L4BUFMANDLL_API void L4BUFMANDLL_BM_GetL4MVersion_List_GET_TYPE( UINT8* base_ptr, UINT32 diff, UINT32 cur_bitoff, UINT32* type );
L4BUFMANDLL_API void L4BUFMANDLL_BM_GetL4MVersion_List_GET_LENGTH( UINT8* base_ptr, UINT32 diff, UINT32 cur_bitoff, UINT32* out_length, UINT32 err );
L4BUFMANDLL_API void L4BUFMANDLL_BM_GetL4MVersion_List_CURRENT_L4MVersion_VersionMajor_GET( UINT8* base_ptr, UINT32 diff, UINT32 cur_bitoff, UINT16* VersionMajor );
L4BUFMANDLL_API void L4BUFMANDLL_BM_GetL4MVersion_List_CURRENT_L4MVersion_VersionMinor_GET( UINT8* base_ptr, UINT32 diff, UINT32 cur_bitoff, UINT16* VersionMinor );
L4BUFMANDLL_API void L4BUFMANDLL_BM_GetL4MVersion_List_CURRENT_L4MVersion_VersionBranch_GET( UINT8* base_ptr, UINT32 diff, UINT32 cur_bitoff, UINT16* VersionBranch );
L4BUFMANDLL_API void L4BUFMANDLL_BM_GetL4MVersion_List_CURRENT_L4MVersion_Reserved2_GET( UINT8* base_ptr, UINT32 diff, UINT32 cur_bitoff, UINT16* Reserved2 );
L4BUFMANDLL_API void L4BUFMANDLL_BM_GetL4MVersion_List_CURRENT_L4MProductionVersion_VersionMajor_GET( UINT8* base_ptr, UINT32 diff, UINT32 cur_bitoff, UINT16* VersionMajor );
L4BUFMANDLL_API void L4BUFMANDLL_BM_GetL4MVersion_List_CURRENT_L4MProductionVersion_VersionMinor_GET( UINT8* base_ptr, UINT32 diff, UINT32 cur_bitoff, UINT16* VersionMinor );
L4BUFMANDLL_API void L4BUFMANDLL_BM_GetL4MVersion_List_CURRENT_L4MProductionVersion_VersionBranch_GET( UINT8* base_ptr, UINT32 diff, UINT32 cur_bitoff, UINT16* VersionBranch );
L4BUFMANDLL_API void L4BUFMANDLL_BM_GetL4MVersion_List_CURRENT_L4MProductionVersion_Reserved2_GET( UINT8* base_ptr, UINT32 diff, UINT32 cur_bitoff, UINT16* Reserved2 );
L4BUFMANDLL_API void L4BUFMANDLL_BM_GetL4MVersion_List_CURRENT_L4MDnDVersion_VersionMajor_GET( UINT8* base_ptr, UINT32 diff, UINT32 cur_bitoff, UINT16* VersionMajor );
L4BUFMANDLL_API void L4BUFMANDLL_BM_GetL4MVersion_List_CURRENT_L4MDnDVersion_VersionMinor_GET( UINT8* base_ptr, UINT32 diff, UINT32 cur_bitoff, UINT16* VersionMinor );
L4BUFMANDLL_API void L4BUFMANDLL_BM_GetL4MVersion_List_CURRENT_L4MDnDVersion_VersionBranch_GET( UINT8* base_ptr, UINT32 diff, UINT32 cur_bitoff, UINT16* VersionBranch );
L4BUFMANDLL_API void L4BUFMANDLL_BM_GetL4MVersion_List_CURRENT_L4MDnDVersion_Reserved2_GET( UINT8* base_ptr, UINT32 diff, UINT32 cur_bitoff, UINT16* Reserved2 );
L4BUFMANDLL_API void L4BUFMANDLL_BM_GetL4MVersion_List_GET_NEXT( UINT8* base_ptr, UINT32 diff, UINT32 cur_bitoff, UINT32* out_diff, UINT32* out_cur_bitoff, UINT32 err );
L4BUFMANDLL_API void L4BUFMANDLL_BM_GetL4MVersion_List_SET_TYPE( UINT8* base_ptr, UINT32 diff, UINT32 cur_bitoff, UINT32 type );
L4BUFMANDLL_API void L4BUFMANDLL_BM_GetL4MVersion_List_SET_LENGTH( UINT8* base_ptr, UINT32 diff, UINT32 cur_bitoff, UINT32 lenOfLen, UINT32 length );
L4BUFMANDLL_API void L4BUFMANDLL_BM_GetL4MVersion_List_CURRENT_L4MVersion_VersionMajor_SET( UINT8* base_ptr, UINT32 diff, UINT32 cur_bitoff, UINT16 VersionMajor );
L4BUFMANDLL_API void L4BUFMANDLL_BM_GetL4MVersion_List_CURRENT_L4MVersion_VersionMinor_SET( UINT8* base_ptr, UINT32 diff, UINT32 cur_bitoff, UINT16 VersionMinor );
L4BUFMANDLL_API void L4BUFMANDLL_BM_GetL4MVersion_List_CURRENT_L4MVersion_VersionBranch_SET( UINT8* base_ptr, UINT32 diff, UINT32 cur_bitoff, UINT16 VersionBranch );
L4BUFMANDLL_API void L4BUFMANDLL_BM_GetL4MVersion_List_CURRENT_L4MVersion_Reserved2_SET( UINT8* base_ptr, UINT32 diff, UINT32 cur_bitoff, UINT16 Reserved2 );
L4BUFMANDLL_API void L4BUFMANDLL_BM_GetL4MVersion_List_CURRENT_L4MProductionVersion_VersionMajor_SET( UINT8* base_ptr, UINT32 diff, UINT32 cur_bitoff, UINT16 VersionMajor );
L4BUFMANDLL_API void L4BUFMANDLL_BM_GetL4MVersion_List_CURRENT_L4MProductionVersion_VersionMinor_SET( UINT8* base_ptr, UINT32 diff, UINT32 cur_bitoff, UINT16 VersionMinor );
L4BUFMANDLL_API void L4BUFMANDLL_BM_GetL4MVersion_List_CURRENT_L4MProductionVersion_VersionBranch_SET( UINT8* base_ptr, UINT32 diff, UINT32 cur_bitoff, UINT16 VersionBranch );
L4BUFMANDLL_API void L4BUFMANDLL_BM_GetL4MVersion_List_CURRENT_L4MProductionVersion_Reserved2_SET( UINT8* base_ptr, UINT32 diff, UINT32 cur_bitoff, UINT16 Reserved2 );
L4BUFMANDLL_API void L4BUFMANDLL_BM_GetL4MVersion_List_CURRENT_L4MDnDVersion_VersionMajor_SET( UINT8* base_ptr, UINT32 diff, UINT32 cur_bitoff, UINT16 VersionMajor );
L4BUFMANDLL_API void L4BUFMANDLL_BM_GetL4MVersion_List_CURRENT_L4MDnDVersion_VersionMinor_SET( UINT8* base_ptr, UINT32 diff, UINT32 cur_bitoff, UINT16 VersionMinor );
L4BUFMANDLL_API void L4BUFMANDLL_BM_GetL4MVersion_List_CURRENT_L4MDnDVersion_VersionBranch_SET( UINT8* base_ptr, UINT32 diff, UINT32 cur_bitoff, UINT16 VersionBranch );
L4BUFMANDLL_API void L4BUFMANDLL_BM_GetL4MVersion_List_CURRENT_L4MDnDVersion_Reserved2_SET( UINT8* base_ptr, UINT32 diff, UINT32 cur_bitoff, UINT16 Reserved2 );
L4BUFMANDLL_API void L4BUFMANDLL_BM_GetL4MVersion_Header_Type_SET( UINT8* base_ptr, UINT32 opcode );
L4BUFMANDLL_API void L4BUFMANDLL_BM_GetL4MVersion_Header_Version_SET( UINT8* base_ptr, UINT16 version );
L4BUFMANDLL_API void L4BUFMANDLL_BM_GetL4MVersion_Header_Accessibility_SET( UINT8* base_ptr, UINT16 accessibility );
L4BUFMANDLL_API void L4BUFMANDLL_BM_GetL4MVersion_Header_Status_SET( UINT8* base_ptr, UINT16 status );
L4BUFMANDLL_API void L4BUFMANDLL_BM_GetL4MVersion_Header_Length_SET( UINT8* base_ptr, UINT32 len );
L4BUFMANDLL_API void L4BUFMANDLL_BM_ReportKeyRequest_Header_Version_GET( UINT8* base_ptr, UINT16* version );
L4BUFMANDLL_API void L4BUFMANDLL_BM_ReportKeyRequest_Header_Accessibility_GET( UINT8* base_ptr, UINT16* accessibility );
L4BUFMANDLL_API void L4BUFMANDLL_BM_ReportKeyRequest_Header_Status_GET( UINT8* base_ptr, UINT16* status );
L4BUFMANDLL_API void L4BUFMANDLL_BM_ReportKeyRequest_Header_Type_SET( UINT8* base_ptr, UINT32 opcode );
L4BUFMANDLL_API void L4BUFMANDLL_BM_ReportKeyRequest_Header_Version_SET( UINT8* base_ptr, UINT16 version );
L4BUFMANDLL_API void L4BUFMANDLL_BM_ReportKeyRequest_Header_Accessibility_SET( UINT8* base_ptr, UINT16 accessibility );
L4BUFMANDLL_API void L4BUFMANDLL_BM_ReportKeyRequest_Header_Status_SET( UINT8* base_ptr, UINT16 status );
L4BUFMANDLL_API void L4BUFMANDLL_BM_ReportKeyRequest_Header_Length_SET( UINT8* base_ptr, UINT32 len );
L4BUFMANDLL_API void L4BUFMANDLL_BM_SetScanParameters_Header_Version_GET( UINT8* base_ptr, UINT16* version );
L4BUFMANDLL_API void L4BUFMANDLL_BM_SetScanParameters_Header_Accessibility_GET( UINT8* base_ptr, UINT16* accessibility );
L4BUFMANDLL_API void L4BUFMANDLL_BM_SetScanParameters_Header_Status_GET( UINT8* base_ptr, UINT16* status );
L4BUFMANDLL_API void L4BUFMANDLL_BM_SetScanParameters_Header_Length_GET( UINT8* base_ptr, UINT32* listSize );
L4BUFMANDLL_API void L4BUFMANDLL_BM_SetScanParameters_List_GET_FIRST( UINT8* base_ptr, UINT32* out_diff, UINT32* out_cur_bitoff );
L4BUFMANDLL_API void L4BUFMANDLL_BM_SetScanParameters_List_GET_TYPE( UINT8* base_ptr, UINT32 diff, UINT32 cur_bitoff, UINT32* type );
L4BUFMANDLL_API void L4BUFMANDLL_BM_SetScanParameters_List_GET_LENGTH( UINT8* base_ptr, UINT32 diff, UINT32 cur_bitoff, UINT32* out_length, UINT32 err );
L4BUFMANDLL_API void L4BUFMANDLL_BM_SetScanParameters_List_CURRENT_ChannelInfoArray_Frequency_GET( UINT8* base_ptr, UINT32 diff, UINT32 cur_bitoff, UINT32* Frequency );
L4BUFMANDLL_API void L4BUFMANDLL_BM_SetScanParameters_List_CURRENT_ChannelInfoArray_ChannelId_GET( UINT8* base_ptr, UINT32 diff, UINT32 cur_bitoff, UINT16* ChannelId );
L4BUFMANDLL_API void L4BUFMANDLL_BM_SetScanParameters_List_CURRENT_ChannelInfoArray_Bandwidth_GET( UINT8* base_ptr, UINT32 diff, UINT32 cur_bitoff, UINT8* Bandwidth );
L4BUFMANDLL_API void L4BUFMANDLL_BM_SetScanParameters_List_CURRENT_ChannelInfoArray_Fft_GET( UINT8* base_ptr, UINT32 diff, UINT32 cur_bitoff, UINT8* Fft );
L4BUFMANDLL_API void L4BUFMANDLL_BM_SetScanParameters_List_CURRENT_ChannelInfoArray_Preambles_value_GET( UINT8* base_ptr, UINT32 i0, UINT32 diff, UINT32 cur_bitoff, UINT8* value );
L4BUFMANDLL_API void L4BUFMANDLL_BM_SetScanParameters_List_CURRENT_ChannelInfoArray_Reserved_GET( UINT8* base_ptr, UINT32 diff, UINT32 cur_bitoff, UINT8* Reserved );
L4BUFMANDLL_API void L4BUFMANDLL_BM_SetScanParameters_List_CURRENT_ScanPolicy_value_GET( UINT8* base_ptr, UINT32 diff, UINT32 cur_bitoff, UINT32* value );
L4BUFMANDLL_API void L4BUFMANDLL_BM_SetScanParameters_List_GET_NEXT( UINT8* base_ptr, UINT32 diff, UINT32 cur_bitoff, UINT32* out_diff, UINT32* out_cur_bitoff, UINT32 err );
L4BUFMANDLL_API void L4BUFMANDLL_BM_SetScanParameters_List_SET_TYPE( UINT8* base_ptr, UINT32 diff, UINT32 cur_bitoff, UINT32 type );
L4BUFMANDLL_API void L4BUFMANDLL_BM_SetScanParameters_List_SET_LENGTH( UINT8* base_ptr, UINT32 diff, UINT32 cur_bitoff, UINT32 lenOfLen, UINT32 length );
L4BUFMANDLL_API void L4BUFMANDLL_BM_SetScanParameters_List_CURRENT_ChannelInfoArray_Frequency_SET( UINT8* base_ptr, UINT32 diff, UINT32 cur_bitoff, UINT32 Frequency );
L4BUFMANDLL_API void L4BUFMANDLL_BM_SetScanParameters_List_CURRENT_ChannelInfoArray_ChannelId_SET( UINT8* base_ptr, UINT32 diff, UINT32 cur_bitoff, UINT16 ChannelId );
L4BUFMANDLL_API void L4BUFMANDLL_BM_SetScanParameters_List_CURRENT_ChannelInfoArray_Bandwidth_SET( UINT8* base_ptr, UINT32 diff, UINT32 cur_bitoff, UINT8 Bandwidth );
L4BUFMANDLL_API void L4BUFMANDLL_BM_SetScanParameters_List_CURRENT_ChannelInfoArray_Fft_SET( UINT8* base_ptr, UINT32 diff, UINT32 cur_bitoff, UINT8 Fft );
L4BUFMANDLL_API void L4BUFMANDLL_BM_SetScanParameters_List_CURRENT_ChannelInfoArray_Preambles_value_SET( UINT8* base_ptr, UINT32 i0, UINT32 diff, UINT32 cur_bitoff, UINT8 value );
L4BUFMANDLL_API void L4BUFMANDLL_BM_SetScanParameters_List_CURRENT_ChannelInfoArray_Reserved_SET( UINT8* base_ptr, UINT32 diff, UINT32 cur_bitoff, UINT8 Reserved );
L4BUFMANDLL_API void L4BUFMANDLL_BM_SetScanParameters_List_CURRENT_ScanPolicy_value_SET( UINT8* base_ptr, UINT32 diff, UINT32 cur_bitoff, UINT32 value );
L4BUFMANDLL_API void L4BUFMANDLL_BM_SetScanParameters_Header_Type_SET( UINT8* base_ptr, UINT32 opcode );
L4BUFMANDLL_API void L4BUFMANDLL_BM_SetScanParameters_Header_Version_SET( UINT8* base_ptr, UINT16 version );
L4BUFMANDLL_API void L4BUFMANDLL_BM_SetScanParameters_Header_Accessibility_SET( UINT8* base_ptr, UINT16 accessibility );
L4BUFMANDLL_API void L4BUFMANDLL_BM_SetScanParameters_Header_Status_SET( UINT8* base_ptr, UINT16 status );
L4BUFMANDLL_API void L4BUFMANDLL_BM_SetScanParameters_Header_Length_SET( UINT8* base_ptr, UINT32 len );
L4BUFMANDLL_API void L4BUFMANDLL_BM_EnterPowerSaveCommand_Header_Version_GET( UINT8* base_ptr, UINT16* version );
L4BUFMANDLL_API void L4BUFMANDLL_BM_EnterPowerSaveCommand_Header_Accessibility_GET( UINT8* base_ptr, UINT16* accessibility );
L4BUFMANDLL_API void L4BUFMANDLL_BM_EnterPowerSaveCommand_Header_Status_GET( UINT8* base_ptr, UINT16* status );
L4BUFMANDLL_API void L4BUFMANDLL_BM_EnterPowerSaveCommand_Header_Length_GET( UINT8* base_ptr, UINT32* listSize );
L4BUFMANDLL_API void L4BUFMANDLL_BM_EnterPowerSaveCommand_List_GET_FIRST( UINT8* base_ptr, UINT32* out_diff, UINT32* out_cur_bitoff );
L4BUFMANDLL_API void L4BUFMANDLL_BM_EnterPowerSaveCommand_List_GET_TYPE( UINT8* base_ptr, UINT32 diff, UINT32 cur_bitoff, UINT32* type );
L4BUFMANDLL_API void L4BUFMANDLL_BM_EnterPowerSaveCommand_List_GET_LENGTH( UINT8* base_ptr, UINT32 diff, UINT32 cur_bitoff, UINT32* out_length, UINT32 err );
L4BUFMANDLL_API void L4BUFMANDLL_BM_EnterPowerSaveCommand_List_CURRENT_WakeupMode_value_GET( UINT8* base_ptr, UINT32 diff, UINT32 cur_bitoff, UINT32* value );
L4BUFMANDLL_API void L4BUFMANDLL_BM_EnterPowerSaveCommand_List_GET_NEXT( UINT8* base_ptr, UINT32 diff, UINT32 cur_bitoff, UINT32* out_diff, UINT32* out_cur_bitoff, UINT32 err );
L4BUFMANDLL_API void L4BUFMANDLL_BM_EnterPowerSaveCommand_List_SET_TYPE( UINT8* base_ptr, UINT32 diff, UINT32 cur_bitoff, UINT32 type );
L4BUFMANDLL_API void L4BUFMANDLL_BM_EnterPowerSaveCommand_List_SET_LENGTH( UINT8* base_ptr, UINT32 diff, UINT32 cur_bitoff, UINT32 lenOfLen, UINT32 length );
L4BUFMANDLL_API void L4BUFMANDLL_BM_EnterPowerSaveCommand_List_CURRENT_WakeupMode_value_SET( UINT8* base_ptr, UINT32 diff, UINT32 cur_bitoff, UINT32 value );
L4BUFMANDLL_API void L4BUFMANDLL_BM_EnterPowerSaveCommand_Header_Type_SET( UINT8* base_ptr, UINT32 opcode );
L4BUFMANDLL_API void L4BUFMANDLL_BM_EnterPowerSaveCommand_Header_Version_SET( UINT8* base_ptr, UINT16 version );
L4BUFMANDLL_API void L4BUFMANDLL_BM_EnterPowerSaveCommand_Header_Accessibility_SET( UINT8* base_ptr, UINT16 accessibility );
L4BUFMANDLL_API void L4BUFMANDLL_BM_EnterPowerSaveCommand_Header_Status_SET( UINT8* base_ptr, UINT16 status );
L4BUFMANDLL_API void L4BUFMANDLL_BM_EnterPowerSaveCommand_Header_Length_SET( UINT8* base_ptr, UINT32 len );
L4BUFMANDLL_API void L4BUFMANDLL_BM_TLSOperationRequest_Header_Version_GET( UINT8* base_ptr, UINT16* version );
L4BUFMANDLL_API void L4BUFMANDLL_BM_TLSOperationRequest_Header_Accessibility_GET( UINT8* base_ptr, UINT16* accessibility );
L4BUFMANDLL_API void L4BUFMANDLL_BM_TLSOperationRequest_Header_Status_GET( UINT8* base_ptr, UINT16* status );
L4BUFMANDLL_API void L4BUFMANDLL_BM_TLSOperationRequest_Header_Length_GET( UINT8* base_ptr, UINT32* listSize );
L4BUFMANDLL_API void L4BUFMANDLL_BM_TLSOperationRequest_List_GET_FIRST( UINT8* base_ptr, UINT32* out_diff, UINT32* out_cur_bitoff );
L4BUFMANDLL_API void L4BUFMANDLL_BM_TLSOperationRequest_List_GET_TYPE( UINT8* base_ptr, UINT32 diff, UINT32 cur_bitoff, UINT32* type );
L4BUFMANDLL_API void L4BUFMANDLL_BM_TLSOperationRequest_List_GET_LENGTH( UINT8* base_ptr, UINT32 diff, UINT32 cur_bitoff, UINT32* out_length, UINT32 err );
L4BUFMANDLL_API void L4BUFMANDLL_BM_TLSOperationRequest_List_CURRENT_Common_Operation_GET( UINT8* base_ptr, UINT32 diff, UINT32 cur_bitoff, UINT32* Operation );
L4BUFMANDLL_API void L4BUFMANDLL_BM_TLSOperationRequest_List_CURRENT_Common_LParameter1_GET( UINT8* base_ptr, UINT32 diff, UINT32 cur_bitoff, UINT32* LParameter1 );
L4BUFMANDLL_API void L4BUFMANDLL_BM_TLSOperationRequest_List_CURRENT_Common_LParameter2_GET( UINT8* base_ptr, UINT32 diff, UINT32 cur_bitoff, UINT32* LParameter2 );
L4BUFMANDLL_API void L4BUFMANDLL_BM_TLSOperationRequest_List_CURRENT_Common_Context_GET( UINT8* base_ptr, UINT32 diff, UINT32 cur_bitoff, UINT32* Context );
L4BUFMANDLL_API void L4BUFMANDLL_BM_TLSOperationRequest_List_CURRENT_Common_Connection_GET( UINT8* base_ptr, UINT32 diff, UINT32 cur_bitoff, UINT32* Connection );
L4BUFMANDLL_API void L4BUFMANDLL_BM_TLSOperationRequest_List_CURRENT_ExchangeBuffer_ActualLen_GET( UINT8* base_ptr, UINT32 diff, UINT32 cur_bitoff, UINT16* ActualLen );
L4BUFMANDLL_API void L4BUFMANDLL_BM_TLSOperationRequest_List_CURRENT_ExchangeBuffer_BufferArr_value_GET( UINT8* base_ptr, UINT32 i0, UINT32 diff, UINT32 cur_bitoff, UINT8* value );
L4BUFMANDLL_API void L4BUFMANDLL_BM_TLSOperationRequest_List_CURRENT_AppOutputBuffer_ActualLen_GET( UINT8* base_ptr, UINT32 diff, UINT32 cur_bitoff, UINT16* ActualLen );
L4BUFMANDLL_API void L4BUFMANDLL_BM_TLSOperationRequest_List_CURRENT_AppOutputBuffer_BufferArr_value_GET( UINT8* base_ptr, UINT32 i0, UINT32 diff, UINT32 cur_bitoff, UINT8* value );
L4BUFMANDLL_API void L4BUFMANDLL_BM_TLSOperationRequest_List_GET_NEXT( UINT8* base_ptr, UINT32 diff, UINT32 cur_bitoff, UINT32* out_diff, UINT32* out_cur_bitoff, UINT32 err );
L4BUFMANDLL_API void L4BUFMANDLL_BM_TLSOperationRequest_List_SET_TYPE( UINT8* base_ptr, UINT32 diff, UINT32 cur_bitoff, UINT32 type );
L4BUFMANDLL_API void L4BUFMANDLL_BM_TLSOperationRequest_List_SET_LENGTH( UINT8* base_ptr, UINT32 diff, UINT32 cur_bitoff, UINT32 lenOfLen, UINT32 length );
L4BUFMANDLL_API void L4BUFMANDLL_BM_TLSOperationRequest_List_CURRENT_Common_Operation_SET( UINT8* base_ptr, UINT32 diff, UINT32 cur_bitoff, UINT32 Operation );
L4BUFMANDLL_API void L4BUFMANDLL_BM_TLSOperationRequest_List_CURRENT_Common_LParameter1_SET( UINT8* base_ptr, UINT32 diff, UINT32 cur_bitoff, UINT32 LParameter1 );
L4BUFMANDLL_API void L4BUFMANDLL_BM_TLSOperationRequest_List_CURRENT_Common_LParameter2_SET( UINT8* base_ptr, UINT32 diff, UINT32 cur_bitoff, UINT32 LParameter2 );
L4BUFMANDLL_API void L4BUFMANDLL_BM_TLSOperationRequest_List_CURRENT_Common_Context_SET( UINT8* base_ptr, UINT32 diff, UINT32 cur_bitoff, UINT32 Context );
L4BUFMANDLL_API void L4BUFMANDLL_BM_TLSOperationRequest_List_CURRENT_Common_Connection_SET( UINT8* base_ptr, UINT32 diff, UINT32 cur_bitoff, UINT32 Connection );
L4BUFMANDLL_API void L4BUFMANDLL_BM_TLSOperationRequest_List_CURRENT_ExchangeBuffer_ActualLen_SET( UINT8* base_ptr, UINT32 diff, UINT32 cur_bitoff, UINT16 ActualLen );
L4BUFMANDLL_API void L4BUFMANDLL_BM_TLSOperationRequest_List_CURRENT_ExchangeBuffer_BufferArr_value_SET( UINT8* base_ptr, UINT32 i0, UINT32 diff, UINT32 cur_bitoff, UINT8 value );
L4BUFMANDLL_API void L4BUFMANDLL_BM_TLSOperationRequest_List_CURRENT_AppOutputBuffer_ActualLen_SET( UINT8* base_ptr, UINT32 diff, UINT32 cur_bitoff, UINT16 ActualLen );
L4BUFMANDLL_API void L4BUFMANDLL_BM_TLSOperationRequest_List_CURRENT_AppOutputBuffer_BufferArr_value_SET( UINT8* base_ptr, UINT32 i0, UINT32 diff, UINT32 cur_bitoff, UINT8 value );
L4BUFMANDLL_API void L4BUFMANDLL_BM_TLSOperationRequest_Header_Type_SET( UINT8* base_ptr, UINT32 opcode );
L4BUFMANDLL_API void L4BUFMANDLL_BM_TLSOperationRequest_Header_Version_SET( UINT8* base_ptr, UINT16 version );
L4BUFMANDLL_API void L4BUFMANDLL_BM_TLSOperationRequest_Header_Accessibility_SET( UINT8* base_ptr, UINT16 accessibility );
L4BUFMANDLL_API void L4BUFMANDLL_BM_TLSOperationRequest_Header_Status_SET( UINT8* base_ptr, UINT16 status );
L4BUFMANDLL_API void L4BUFMANDLL_BM_TLSOperationRequest_Header_Length_SET( UINT8* base_ptr, UINT32 len );
L4BUFMANDLL_API void L4BUFMANDLL_BM_RfControl_Header_Version_GET( UINT8* base_ptr, UINT16* version );
L4BUFMANDLL_API void L4BUFMANDLL_BM_RfControl_Header_Accessibility_GET( UINT8* base_ptr, UINT16* accessibility );
L4BUFMANDLL_API void L4BUFMANDLL_BM_RfControl_Header_Status_GET( UINT8* base_ptr, UINT16* status );
L4BUFMANDLL_API void L4BUFMANDLL_BM_RfControl_Header_Length_GET( UINT8* base_ptr, UINT32* listSize );
L4BUFMANDLL_API void L4BUFMANDLL_BM_RfControl_List_GET_FIRST( UINT8* base_ptr, UINT32* out_diff, UINT32* out_cur_bitoff );
L4BUFMANDLL_API void L4BUFMANDLL_BM_RfControl_List_GET_TYPE( UINT8* base_ptr, UINT32 diff, UINT32 cur_bitoff, UINT32* type );
L4BUFMANDLL_API void L4BUFMANDLL_BM_RfControl_List_GET_LENGTH( UINT8* base_ptr, UINT32 diff, UINT32 cur_bitoff, UINT32* out_length, UINT32 err );
L4BUFMANDLL_API void L4BUFMANDLL_BM_RfControl_List_CURRENT_RfOperation_value_GET( UINT8* base_ptr, UINT32 diff, UINT32 cur_bitoff, UINT32* value );
L4BUFMANDLL_API void L4BUFMANDLL_BM_RfControl_List_GET_NEXT( UINT8* base_ptr, UINT32 diff, UINT32 cur_bitoff, UINT32* out_diff, UINT32* out_cur_bitoff, UINT32 err );
L4BUFMANDLL_API void L4BUFMANDLL_BM_RfControl_List_SET_TYPE( UINT8* base_ptr, UINT32 diff, UINT32 cur_bitoff, UINT32 type );
L4BUFMANDLL_API void L4BUFMANDLL_BM_RfControl_List_SET_LENGTH( UINT8* base_ptr, UINT32 diff, UINT32 cur_bitoff, UINT32 lenOfLen, UINT32 length );
L4BUFMANDLL_API void L4BUFMANDLL_BM_RfControl_List_CURRENT_RfOperation_value_SET( UINT8* base_ptr, UINT32 diff, UINT32 cur_bitoff, UINT32 value );
L4BUFMANDLL_API void L4BUFMANDLL_BM_RfControl_Header_Type_SET( UINT8* base_ptr, UINT32 opcode );
L4BUFMANDLL_API void L4BUFMANDLL_BM_RfControl_Header_Version_SET( UINT8* base_ptr, UINT16 version );
L4BUFMANDLL_API void L4BUFMANDLL_BM_RfControl_Header_Accessibility_SET( UINT8* base_ptr, UINT16 accessibility );
L4BUFMANDLL_API void L4BUFMANDLL_BM_RfControl_Header_Status_SET( UINT8* base_ptr, UINT16 status );
L4BUFMANDLL_API void L4BUFMANDLL_BM_RfControl_Header_Length_SET( UINT8* base_ptr, UINT32 len );
L4BUFMANDLL_API void L4BUFMANDLL_BM_ReportEapRestart_Header_Version_GET( UINT8* base_ptr, UINT16* version );
L4BUFMANDLL_API void L4BUFMANDLL_BM_ReportEapRestart_Header_Accessibility_GET( UINT8* base_ptr, UINT16* accessibility );
L4BUFMANDLL_API void L4BUFMANDLL_BM_ReportEapRestart_Header_Status_GET( UINT8* base_ptr, UINT16* status );
L4BUFMANDLL_API void L4BUFMANDLL_BM_ReportEapRestart_Header_Type_SET( UINT8* base_ptr, UINT32 opcode );
L4BUFMANDLL_API void L4BUFMANDLL_BM_ReportEapRestart_Header_Version_SET( UINT8* base_ptr, UINT16 version );
L4BUFMANDLL_API void L4BUFMANDLL_BM_ReportEapRestart_Header_Accessibility_SET( UINT8* base_ptr, UINT16 accessibility );
L4BUFMANDLL_API void L4BUFMANDLL_BM_ReportEapRestart_Header_Status_SET( UINT8* base_ptr, UINT16 status );
L4BUFMANDLL_API void L4BUFMANDLL_BM_ReportEapRestart_Header_Length_SET( UINT8* base_ptr, UINT32 len );
L4BUFMANDLL_API void L4BUFMANDLL_BM_ReportEapRequest_Header_Version_GET( UINT8* base_ptr, UINT16* version );
L4BUFMANDLL_API void L4BUFMANDLL_BM_ReportEapRequest_Header_Accessibility_GET( UINT8* base_ptr, UINT16* accessibility );
L4BUFMANDLL_API void L4BUFMANDLL_BM_ReportEapRequest_Header_Status_GET( UINT8* base_ptr, UINT16* status );
L4BUFMANDLL_API void L4BUFMANDLL_BM_ReportEapRequest_Header_Length_GET( UINT8* base_ptr, UINT32* listSize );
L4BUFMANDLL_API void L4BUFMANDLL_BM_ReportEapRequest_List_GET_FIRST( UINT8* base_ptr, UINT32* out_diff, UINT32* out_cur_bitoff );
L4BUFMANDLL_API void L4BUFMANDLL_BM_ReportEapRequest_List_GET_TYPE( UINT8* base_ptr, UINT32 diff, UINT32 cur_bitoff, UINT32* type );
L4BUFMANDLL_API void L4BUFMANDLL_BM_ReportEapRequest_List_GET_LENGTH( UINT8* base_ptr, UINT32 diff, UINT32 cur_bitoff, UINT32* out_length, UINT32 err );
L4BUFMANDLL_API void L4BUFMANDLL_BM_ReportEapRequest_List_CURRENT_EapRequestMessage_ActualLen_GET( UINT8* base_ptr, UINT32 diff, UINT32 cur_bitoff, UINT16* ActualLen );
L4BUFMANDLL_API void L4BUFMANDLL_BM_ReportEapRequest_List_CURRENT_EapRequestMessage_BufferArr_value_GET( UINT8* base_ptr, UINT32 i0, UINT32 diff, UINT32 cur_bitoff, UINT8* value );
L4BUFMANDLL_API void L4BUFMANDLL_BM_ReportEapRequest_List_GET_NEXT( UINT8* base_ptr, UINT32 diff, UINT32 cur_bitoff, UINT32* out_diff, UINT32* out_cur_bitoff, UINT32 err );
L4BUFMANDLL_API void L4BUFMANDLL_BM_ReportEapRequest_List_SET_TYPE( UINT8* base_ptr, UINT32 diff, UINT32 cur_bitoff, UINT32 type );
L4BUFMANDLL_API void L4BUFMANDLL_BM_ReportEapRequest_List_SET_LENGTH( UINT8* base_ptr, UINT32 diff, UINT32 cur_bitoff, UINT32 lenOfLen, UINT32 length );
L4BUFMANDLL_API void L4BUFMANDLL_BM_ReportEapRequest_List_CURRENT_EapRequestMessage_ActualLen_SET( UINT8* base_ptr, UINT32 diff, UINT32 cur_bitoff, UINT16 ActualLen );
L4BUFMANDLL_API void L4BUFMANDLL_BM_ReportEapRequest_List_CURRENT_EapRequestMessage_BufferArr_value_SET( UINT8* base_ptr, UINT32 i0, UINT32 diff, UINT32 cur_bitoff, UINT8 value );
L4BUFMANDLL_API void L4BUFMANDLL_BM_ReportEapRequest_Header_Type_SET( UINT8* base_ptr, UINT32 opcode );
L4BUFMANDLL_API void L4BUFMANDLL_BM_ReportEapRequest_Header_Version_SET( UINT8* base_ptr, UINT16 version );
L4BUFMANDLL_API void L4BUFMANDLL_BM_ReportEapRequest_Header_Accessibility_SET( UINT8* base_ptr, UINT16 accessibility );
L4BUFMANDLL_API void L4BUFMANDLL_BM_ReportEapRequest_Header_Status_SET( UINT8* base_ptr, UINT16 status );
L4BUFMANDLL_API void L4BUFMANDLL_BM_ReportEapRequest_Header_Length_SET( UINT8* base_ptr, UINT32 len );
L4BUFMANDLL_API void L4BUFMANDLL_BM_ReportRecentNbrHood_Header_Version_GET( UINT8* base_ptr, UINT16* version );
L4BUFMANDLL_API void L4BUFMANDLL_BM_ReportRecentNbrHood_Header_Accessibility_GET( UINT8* base_ptr, UINT16* accessibility );
L4BUFMANDLL_API void L4BUFMANDLL_BM_ReportRecentNbrHood_Header_Status_GET( UINT8* base_ptr, UINT16* status );
L4BUFMANDLL_API void L4BUFMANDLL_BM_ReportRecentNbrHood_Header_Length_GET( UINT8* base_ptr, UINT32* listSize );
L4BUFMANDLL_API void L4BUFMANDLL_BM_ReportRecentNbrHood_List_GET_FIRST( UINT8* base_ptr, UINT32* out_diff, UINT32* out_cur_bitoff );
L4BUFMANDLL_API void L4BUFMANDLL_BM_ReportRecentNbrHood_List_GET_TYPE( UINT8* base_ptr, UINT32 diff, UINT32 cur_bitoff, UINT32* type );
L4BUFMANDLL_API void L4BUFMANDLL_BM_ReportRecentNbrHood_List_GET_LENGTH( UINT8* base_ptr, UINT32 diff, UINT32 cur_bitoff, UINT32* out_length, UINT32 err );
L4BUFMANDLL_API void L4BUFMANDLL_BM_ReportRecentNbrHood_List_CURRENT_ChannelInfoArray_Frequency_GET( UINT8* base_ptr, UINT32 diff, UINT32 cur_bitoff, UINT32* Frequency );
L4BUFMANDLL_API void L4BUFMANDLL_BM_ReportRecentNbrHood_List_CURRENT_ChannelInfoArray_ChannelId_GET( UINT8* base_ptr, UINT32 diff, UINT32 cur_bitoff, UINT16* ChannelId );
L4BUFMANDLL_API void L4BUFMANDLL_BM_ReportRecentNbrHood_List_CURRENT_ChannelInfoArray_Bandwidth_GET( UINT8* base_ptr, UINT32 diff, UINT32 cur_bitoff, UINT8* Bandwidth );
L4BUFMANDLL_API void L4BUFMANDLL_BM_ReportRecentNbrHood_List_CURRENT_ChannelInfoArray_Fft_GET( UINT8* base_ptr, UINT32 diff, UINT32 cur_bitoff, UINT8* Fft );
L4BUFMANDLL_API void L4BUFMANDLL_BM_ReportRecentNbrHood_List_CURRENT_ChannelInfoArray_Preambles_value_GET( UINT8* base_ptr, UINT32 i0, UINT32 diff, UINT32 cur_bitoff, UINT8* value );
L4BUFMANDLL_API void L4BUFMANDLL_BM_ReportRecentNbrHood_List_CURRENT_ChannelInfoArray_Reserved_GET( UINT8* base_ptr, UINT32 diff, UINT32 cur_bitoff, UINT8* Reserved );
L4BUFMANDLL_API void L4BUFMANDLL_BM_ReportRecentNbrHood_List_GET_NEXT( UINT8* base_ptr, UINT32 diff, UINT32 cur_bitoff, UINT32* out_diff, UINT32* out_cur_bitoff, UINT32 err );
L4BUFMANDLL_API void L4BUFMANDLL_BM_ReportRecentNbrHood_List_SET_TYPE( UINT8* base_ptr, UINT32 diff, UINT32 cur_bitoff, UINT32 type );
L4BUFMANDLL_API void L4BUFMANDLL_BM_ReportRecentNbrHood_List_SET_LENGTH( UINT8* base_ptr, UINT32 diff, UINT32 cur_bitoff, UINT32 lenOfLen, UINT32 length );
L4BUFMANDLL_API void L4BUFMANDLL_BM_ReportRecentNbrHood_List_CURRENT_ChannelInfoArray_Frequency_SET( UINT8* base_ptr, UINT32 diff, UINT32 cur_bitoff, UINT32 Frequency );
L4BUFMANDLL_API void L4BUFMANDLL_BM_ReportRecentNbrHood_List_CURRENT_ChannelInfoArray_ChannelId_SET( UINT8* base_ptr, UINT32 diff, UINT32 cur_bitoff, UINT16 ChannelId );
L4BUFMANDLL_API void L4BUFMANDLL_BM_ReportRecentNbrHood_List_CURRENT_ChannelInfoArray_Bandwidth_SET( UINT8* base_ptr, UINT32 diff, UINT32 cur_bitoff, UINT8 Bandwidth );
L4BUFMANDLL_API void L4BUFMANDLL_BM_ReportRecentNbrHood_List_CURRENT_ChannelInfoArray_Fft_SET( UINT8* base_ptr, UINT32 diff, UINT32 cur_bitoff, UINT8 Fft );
L4BUFMANDLL_API void L4BUFMANDLL_BM_ReportRecentNbrHood_List_CURRENT_ChannelInfoArray_Preambles_value_SET( UINT8* base_ptr, UINT32 i0, UINT32 diff, UINT32 cur_bitoff, UINT8 value );
L4BUFMANDLL_API void L4BUFMANDLL_BM_ReportRecentNbrHood_List_CURRENT_ChannelInfoArray_Reserved_SET( UINT8* base_ptr, UINT32 diff, UINT32 cur_bitoff, UINT8 Reserved );
L4BUFMANDLL_API void L4BUFMANDLL_BM_ReportRecentNbrHood_Header_Type_SET( UINT8* base_ptr, UINT32 opcode );
L4BUFMANDLL_API void L4BUFMANDLL_BM_ReportRecentNbrHood_Header_Version_SET( UINT8* base_ptr, UINT16 version );
L4BUFMANDLL_API void L4BUFMANDLL_BM_ReportRecentNbrHood_Header_Accessibility_SET( UINT8* base_ptr, UINT16 accessibility );
L4BUFMANDLL_API void L4BUFMANDLL_BM_ReportRecentNbrHood_Header_Status_SET( UINT8* base_ptr, UINT16 status );
L4BUFMANDLL_API void L4BUFMANDLL_BM_ReportRecentNbrHood_Header_Length_SET( UINT8* base_ptr, UINT32 len );
L4BUFMANDLL_API void L4BUFMANDLL_BM_GetLinkStatus_Header_Version_GET( UINT8* base_ptr, UINT16* version );
L4BUFMANDLL_API void L4BUFMANDLL_BM_GetLinkStatus_Header_Accessibility_GET( UINT8* base_ptr, UINT16* accessibility );
L4BUFMANDLL_API void L4BUFMANDLL_BM_GetLinkStatus_Header_Status_GET( UINT8* base_ptr, UINT16* status );
L4BUFMANDLL_API void L4BUFMANDLL_BM_GetLinkStatus_Header_Length_GET( UINT8* base_ptr, UINT32* listSize );
L4BUFMANDLL_API void L4BUFMANDLL_BM_GetLinkStatus_List_GET_FIRST( UINT8* base_ptr, UINT32* out_diff, UINT32* out_cur_bitoff );
L4BUFMANDLL_API void L4BUFMANDLL_BM_GetLinkStatus_List_GET_TYPE( UINT8* base_ptr, UINT32 diff, UINT32 cur_bitoff, UINT32* type );
L4BUFMANDLL_API void L4BUFMANDLL_BM_GetLinkStatus_List_GET_LENGTH( UINT8* base_ptr, UINT32 diff, UINT32 cur_bitoff, UINT32* out_length, UINT32 err );
L4BUFMANDLL_API void L4BUFMANDLL_BM_GetLinkStatus_List_CURRENT_LinkStatus_UpLinkSpeed_GET( UINT8* base_ptr, UINT32 diff, UINT32 cur_bitoff, UINT32* UpLinkSpeed );
L4BUFMANDLL_API void L4BUFMANDLL_BM_GetLinkStatus_List_CURRENT_LinkStatus_DownLinkSpeed_GET( UINT8* base_ptr, UINT32 diff, UINT32 cur_bitoff, UINT32* DownLinkSpeed );
L4BUFMANDLL_API void L4BUFMANDLL_BM_GetLinkStatus_List_CURRENT_LinkStatus_CenterFrequency_GET( UINT8* base_ptr, UINT32 diff, UINT32 cur_bitoff, UINT32* CenterFrequency );
L4BUFMANDLL_API void L4BUFMANDLL_BM_GetLinkStatus_List_CURRENT_LinkStatus_TxPower_GET( UINT8* base_ptr, UINT32 diff, UINT32 cur_bitoff, UINT8* TxPower );
L4BUFMANDLL_API void L4BUFMANDLL_BM_GetLinkStatus_List_CURRENT_LinkStatus_RxRssi_GET( UINT8* base_ptr, UINT32 diff, UINT32 cur_bitoff, UINT8* RxRssi );
L4BUFMANDLL_API void L4BUFMANDLL_BM_GetLinkStatus_List_CURRENT_LinkStatus_RxCinr_GET( UINT8* base_ptr, UINT32 diff, UINT32 cur_bitoff, UINT8* RxCinr );
L4BUFMANDLL_API void L4BUFMANDLL_BM_GetLinkStatus_List_CURRENT_LinkStatus_BSID_value_GET( UINT8* base_ptr, UINT32 i0, UINT32 diff, UINT32 cur_bitoff, UINT8* value );
L4BUFMANDLL_API void L4BUFMANDLL_BM_GetLinkStatus_List_CURRENT_LinkStatus_LinkQuality_GET( UINT8* base_ptr, UINT32 diff, UINT32 cur_bitoff, UINT8* LinkQuality );
L4BUFMANDLL_API void L4BUFMANDLL_BM_GetLinkStatus_List_CURRENT_LinkStatus_Reserved_GET( UINT8* base_ptr, UINT32 diff, UINT32 cur_bitoff, UINT16* Reserved );
L4BUFMANDLL_API void L4BUFMANDLL_BM_GetLinkStatus_List_CURRENT_ChannelInfo_Frequency_GET( UINT8* base_ptr, UINT32 diff, UINT32 cur_bitoff, UINT32* Frequency );
L4BUFMANDLL_API void L4BUFMANDLL_BM_GetLinkStatus_List_CURRENT_ChannelInfo_ChannelId_GET( UINT8* base_ptr, UINT32 diff, UINT32 cur_bitoff, UINT16* ChannelId );
L4BUFMANDLL_API void L4BUFMANDLL_BM_GetLinkStatus_List_CURRENT_ChannelInfo_Bandwidth_GET( UINT8* base_ptr, UINT32 diff, UINT32 cur_bitoff, UINT8* Bandwidth );
L4BUFMANDLL_API void L4BUFMANDLL_BM_GetLinkStatus_List_CURRENT_ChannelInfo_Fft_GET( UINT8* base_ptr, UINT32 diff, UINT32 cur_bitoff, UINT8* Fft );
L4BUFMANDLL_API void L4BUFMANDLL_BM_GetLinkStatus_List_CURRENT_ChannelInfo_Preambles_value_GET( UINT8* base_ptr, UINT32 i0, UINT32 diff, UINT32 cur_bitoff, UINT8* value );
L4BUFMANDLL_API void L4BUFMANDLL_BM_GetLinkStatus_List_CURRENT_ChannelInfo_Reserved_GET( UINT8* base_ptr, UINT32 diff, UINT32 cur_bitoff, UINT8* Reserved );
L4BUFMANDLL_API void L4BUFMANDLL_BM_GetLinkStatus_List_GET_NEXT( UINT8* base_ptr, UINT32 diff, UINT32 cur_bitoff, UINT32* out_diff, UINT32* out_cur_bitoff, UINT32 err );
L4BUFMANDLL_API void L4BUFMANDLL_BM_GetLinkStatus_List_SET_TYPE( UINT8* base_ptr, UINT32 diff, UINT32 cur_bitoff, UINT32 type );
L4BUFMANDLL_API void L4BUFMANDLL_BM_GetLinkStatus_List_SET_LENGTH( UINT8* base_ptr, UINT32 diff, UINT32 cur_bitoff, UINT32 lenOfLen, UINT32 length );
L4BUFMANDLL_API void L4BUFMANDLL_BM_GetLinkStatus_List_CURRENT_LinkStatus_UpLinkSpeed_SET( UINT8* base_ptr, UINT32 diff, UINT32 cur_bitoff, UINT32 UpLinkSpeed );
L4BUFMANDLL_API void L4BUFMANDLL_BM_GetLinkStatus_List_CURRENT_LinkStatus_DownLinkSpeed_SET( UINT8* base_ptr, UINT32 diff, UINT32 cur_bitoff, UINT32 DownLinkSpeed );
L4BUFMANDLL_API void L4BUFMANDLL_BM_GetLinkStatus_List_CURRENT_LinkStatus_CenterFrequency_SET( UINT8* base_ptr, UINT32 diff, UINT32 cur_bitoff, UINT32 CenterFrequency );
L4BUFMANDLL_API void L4BUFMANDLL_BM_GetLinkStatus_List_CURRENT_LinkStatus_TxPower_SET( UINT8* base_ptr, UINT32 diff, UINT32 cur_bitoff, UINT8 TxPower );
L4BUFMANDLL_API void L4BUFMANDLL_BM_GetLinkStatus_List_CURRENT_LinkStatus_RxRssi_SET( UINT8* base_ptr, UINT32 diff, UINT32 cur_bitoff, UINT8 RxRssi );
L4BUFMANDLL_API void L4BUFMANDLL_BM_GetLinkStatus_List_CURRENT_LinkStatus_RxCinr_SET( UINT8* base_ptr, UINT32 diff, UINT32 cur_bitoff, UINT8 RxCinr );
L4BUFMANDLL_API void L4BUFMANDLL_BM_GetLinkStatus_List_CURRENT_LinkStatus_BSID_value_SET( UINT8* base_ptr, UINT32 i0, UINT32 diff, UINT32 cur_bitoff, UINT8 value );
L4BUFMANDLL_API void L4BUFMANDLL_BM_GetLinkStatus_List_CURRENT_LinkStatus_LinkQuality_SET( UINT8* base_ptr, UINT32 diff, UINT32 cur_bitoff, UINT8 LinkQuality );
L4BUFMANDLL_API void L4BUFMANDLL_BM_GetLinkStatus_List_CURRENT_LinkStatus_Reserved_SET( UINT8* base_ptr, UINT32 diff, UINT32 cur_bitoff, UINT16 Reserved );
L4BUFMANDLL_API void L4BUFMANDLL_BM_GetLinkStatus_List_CURRENT_ChannelInfo_Frequency_SET( UINT8* base_ptr, UINT32 diff, UINT32 cur_bitoff, UINT32 Frequency );
L4BUFMANDLL_API void L4BUFMANDLL_BM_GetLinkStatus_List_CURRENT_ChannelInfo_ChannelId_SET( UINT8* base_ptr, UINT32 diff, UINT32 cur_bitoff, UINT16 ChannelId );
L4BUFMANDLL_API void L4BUFMANDLL_BM_GetLinkStatus_List_CURRENT_ChannelInfo_Bandwidth_SET( UINT8* base_ptr, UINT32 diff, UINT32 cur_bitoff, UINT8 Bandwidth );
L4BUFMANDLL_API void L4BUFMANDLL_BM_GetLinkStatus_List_CURRENT_ChannelInfo_Fft_SET( UINT8* base_ptr, UINT32 diff, UINT32 cur_bitoff, UINT8 Fft );
L4BUFMANDLL_API void L4BUFMANDLL_BM_GetLinkStatus_List_CURRENT_ChannelInfo_Preambles_value_SET( UINT8* base_ptr, UINT32 i0, UINT32 diff, UINT32 cur_bitoff, UINT8 value );
L4BUFMANDLL_API void L4BUFMANDLL_BM_GetLinkStatus_List_CURRENT_ChannelInfo_Reserved_SET( UINT8* base_ptr, UINT32 diff, UINT32 cur_bitoff, UINT8 Reserved );
L4BUFMANDLL_API void L4BUFMANDLL_BM_GetLinkStatus_Header_Type_SET( UINT8* base_ptr, UINT32 opcode );
L4BUFMANDLL_API void L4BUFMANDLL_BM_GetLinkStatus_Header_Version_SET( UINT8* base_ptr, UINT16 version );
L4BUFMANDLL_API void L4BUFMANDLL_BM_GetLinkStatus_Header_Accessibility_SET( UINT8* base_ptr, UINT16 accessibility );
L4BUFMANDLL_API void L4BUFMANDLL_BM_GetLinkStatus_Header_Status_SET( UINT8* base_ptr, UINT16 status );
L4BUFMANDLL_API void L4BUFMANDLL_BM_GetLinkStatus_Header_Length_SET( UINT8* base_ptr, UINT32 len );
L4BUFMANDLL_API void L4BUFMANDLL_BM_SetD2HChannelMask_Header_Version_GET( UINT8* base_ptr, UINT16* version );
L4BUFMANDLL_API void L4BUFMANDLL_BM_SetD2HChannelMask_Header_Accessibility_GET( UINT8* base_ptr, UINT16* accessibility );
L4BUFMANDLL_API void L4BUFMANDLL_BM_SetD2HChannelMask_Header_Status_GET( UINT8* base_ptr, UINT16* status );
L4BUFMANDLL_API void L4BUFMANDLL_BM_SetD2HChannelMask_Header_Length_GET( UINT8* base_ptr, UINT32* listSize );
L4BUFMANDLL_API void L4BUFMANDLL_BM_SetD2HChannelMask_List_GET_FIRST( UINT8* base_ptr, UINT32* out_diff, UINT32* out_cur_bitoff );
L4BUFMANDLL_API void L4BUFMANDLL_BM_SetD2HChannelMask_List_GET_TYPE( UINT8* base_ptr, UINT32 diff, UINT32 cur_bitoff, UINT32* type );
L4BUFMANDLL_API void L4BUFMANDLL_BM_SetD2HChannelMask_List_GET_LENGTH( UINT8* base_ptr, UINT32 diff, UINT32 cur_bitoff, UINT32* out_length, UINT32 err );
L4BUFMANDLL_API void L4BUFMANDLL_BM_SetD2HChannelMask_List_CURRENT_D2HChannelMask_DataChannelSwitch_GET( UINT8* base_ptr, UINT32 diff, UINT32 cur_bitoff, UINT8* DataChannelSwitch );
L4BUFMANDLL_API void L4BUFMANDLL_BM_SetD2HChannelMask_List_CURRENT_D2HChannelMask_DiagnosticsChannelSwitch_GET( UINT8* base_ptr, UINT32 diff, UINT32 cur_bitoff, UINT8* DiagnosticsChannelSwitch );
L4BUFMANDLL_API void L4BUFMANDLL_BM_SetD2HChannelMask_List_CURRENT_D2HChannelMask_Reserved_GET( UINT8* base_ptr, UINT32 diff, UINT32 cur_bitoff, UINT16* Reserved );
L4BUFMANDLL_API void L4BUFMANDLL_BM_SetD2HChannelMask_List_GET_NEXT( UINT8* base_ptr, UINT32 diff, UINT32 cur_bitoff, UINT32* out_diff, UINT32* out_cur_bitoff, UINT32 err );
L4BUFMANDLL_API void L4BUFMANDLL_BM_SetD2HChannelMask_List_SET_TYPE( UINT8* base_ptr, UINT32 diff, UINT32 cur_bitoff, UINT32 type );
L4BUFMANDLL_API void L4BUFMANDLL_BM_SetD2HChannelMask_List_SET_LENGTH( UINT8* base_ptr, UINT32 diff, UINT32 cur_bitoff, UINT32 lenOfLen, UINT32 length );
L4BUFMANDLL_API void L4BUFMANDLL_BM_SetD2HChannelMask_List_CURRENT_D2HChannelMask_DataChannelSwitch_SET( UINT8* base_ptr, UINT32 diff, UINT32 cur_bitoff, UINT8 DataChannelSwitch );
L4BUFMANDLL_API void L4BUFMANDLL_BM_SetD2HChannelMask_List_CURRENT_D2HChannelMask_DiagnosticsChannelSwitch_SET( UINT8* base_ptr, UINT32 diff, UINT32 cur_bitoff, UINT8 DiagnosticsChannelSwitch );
L4BUFMANDLL_API void L4BUFMANDLL_BM_SetD2HChannelMask_List_CURRENT_D2HChannelMask_Reserved_SET( UINT8* base_ptr, UINT32 diff, UINT32 cur_bitoff, UINT16 Reserved );
L4BUFMANDLL_API void L4BUFMANDLL_BM_SetD2HChannelMask_Header_Type_SET( UINT8* base_ptr, UINT32 opcode );
L4BUFMANDLL_API void L4BUFMANDLL_BM_SetD2HChannelMask_Header_Version_SET( UINT8* base_ptr, UINT16 version );
L4BUFMANDLL_API void L4BUFMANDLL_BM_SetD2HChannelMask_Header_Accessibility_SET( UINT8* base_ptr, UINT16 accessibility );
L4BUFMANDLL_API void L4BUFMANDLL_BM_SetD2HChannelMask_Header_Status_SET( UINT8* base_ptr, UINT16 status );
L4BUFMANDLL_API void L4BUFMANDLL_BM_SetD2HChannelMask_Header_Length_SET( UINT8* base_ptr, UINT32 len );
L4BUFMANDLL_API void L4BUFMANDLL_BM_ScanCommand_Header_Version_GET( UINT8* base_ptr, UINT16* version );
L4BUFMANDLL_API void L4BUFMANDLL_BM_ScanCommand_Header_Accessibility_GET( UINT8* base_ptr, UINT16* accessibility );
L4BUFMANDLL_API void L4BUFMANDLL_BM_ScanCommand_Header_Status_GET( UINT8* base_ptr, UINT16* status );
L4BUFMANDLL_API void L4BUFMANDLL_BM_ScanCommand_Header_Length_GET( UINT8* base_ptr, UINT32* listSize );
L4BUFMANDLL_API void L4BUFMANDLL_BM_ScanCommand_List_GET_FIRST( UINT8* base_ptr, UINT32* out_diff, UINT32* out_cur_bitoff );
L4BUFMANDLL_API void L4BUFMANDLL_BM_ScanCommand_List_GET_TYPE( UINT8* base_ptr, UINT32 diff, UINT32 cur_bitoff, UINT32* type );
L4BUFMANDLL_API void L4BUFMANDLL_BM_ScanCommand_List_GET_LENGTH( UINT8* base_ptr, UINT32 diff, UINT32 cur_bitoff, UINT32* out_length, UINT32 err );
L4BUFMANDLL_API void L4BUFMANDLL_BM_ScanCommand_List_CURRENT_DoScanCommand_value_GET( UINT8* base_ptr, UINT32 diff, UINT32 cur_bitoff, UINT32* value );
L4BUFMANDLL_API void L4BUFMANDLL_BM_ScanCommand_List_CURRENT_CoexPriority_value_GET( UINT8* base_ptr, UINT32 diff, UINT32 cur_bitoff, UINT32* value );
L4BUFMANDLL_API void L4BUFMANDLL_BM_ScanCommand_List_GET_NEXT( UINT8* base_ptr, UINT32 diff, UINT32 cur_bitoff, UINT32* out_diff, UINT32* out_cur_bitoff, UINT32 err );
L4BUFMANDLL_API void L4BUFMANDLL_BM_ScanCommand_List_SET_TYPE( UINT8* base_ptr, UINT32 diff, UINT32 cur_bitoff, UINT32 type );
L4BUFMANDLL_API void L4BUFMANDLL_BM_ScanCommand_List_SET_LENGTH( UINT8* base_ptr, UINT32 diff, UINT32 cur_bitoff, UINT32 lenOfLen, UINT32 length );
L4BUFMANDLL_API void L4BUFMANDLL_BM_ScanCommand_List_CURRENT_DoScanCommand_value_SET( UINT8* base_ptr, UINT32 diff, UINT32 cur_bitoff, UINT32 value );
L4BUFMANDLL_API void L4BUFMANDLL_BM_ScanCommand_List_CURRENT_CoexPriority_value_SET( UINT8* base_ptr, UINT32 diff, UINT32 cur_bitoff, UINT32 value );
L4BUFMANDLL_API void L4BUFMANDLL_BM_ScanCommand_Header_Type_SET( UINT8* base_ptr, UINT32 opcode );
L4BUFMANDLL_API void L4BUFMANDLL_BM_ScanCommand_Header_Version_SET( UINT8* base_ptr, UINT16 version );
L4BUFMANDLL_API void L4BUFMANDLL_BM_ScanCommand_Header_Accessibility_SET( UINT8* base_ptr, UINT16 accessibility );
L4BUFMANDLL_API void L4BUFMANDLL_BM_ScanCommand_Header_Status_SET( UINT8* base_ptr, UINT16 status );
L4BUFMANDLL_API void L4BUFMANDLL_BM_ScanCommand_Header_Length_SET( UINT8* base_ptr, UINT32 len );
L4BUFMANDLL_API void L4BUFMANDLL_BM_SPLockStatusInfo_Header_Version_GET( UINT8* base_ptr, UINT16* version );
L4BUFMANDLL_API void L4BUFMANDLL_BM_SPLockStatusInfo_Header_Accessibility_GET( UINT8* base_ptr, UINT16* accessibility );
L4BUFMANDLL_API void L4BUFMANDLL_BM_SPLockStatusInfo_Header_Status_GET( UINT8* base_ptr, UINT16* status );
L4BUFMANDLL_API void L4BUFMANDLL_BM_SPLockStatusInfo_Header_Length_GET( UINT8* base_ptr, UINT32* listSize );
L4BUFMANDLL_API void L4BUFMANDLL_BM_SPLockStatusInfo_List_GET_FIRST( UINT8* base_ptr, UINT32* out_diff, UINT32* out_cur_bitoff );
L4BUFMANDLL_API void L4BUFMANDLL_BM_SPLockStatusInfo_List_GET_TYPE( UINT8* base_ptr, UINT32 diff, UINT32 cur_bitoff, UINT32* type );
L4BUFMANDLL_API void L4BUFMANDLL_BM_SPLockStatusInfo_List_GET_LENGTH( UINT8* base_ptr, UINT32 diff, UINT32 cur_bitoff, UINT32* out_length, UINT32 err );
L4BUFMANDLL_API void L4BUFMANDLL_BM_SPLockStatusInfo_List_CURRENT_SPLockStatus_value_GET( UINT8* base_ptr, UINT32 diff, UINT32 cur_bitoff, UINT32* value );
L4BUFMANDLL_API void L4BUFMANDLL_BM_SPLockStatusInfo_List_CURRENT_LockedToNSPNameInfo_ActualLen_GET( UINT8* base_ptr, UINT32 diff, UINT32 cur_bitoff, UINT16* ActualLen );
L4BUFMANDLL_API void L4BUFMANDLL_BM_SPLockStatusInfo_List_CURRENT_LockedToNSPNameInfo_BufferArr_value_GET( UINT8* base_ptr, UINT32 i0, UINT32 diff, UINT32 cur_bitoff, UINT8* value );
L4BUFMANDLL_API void L4BUFMANDLL_BM_SPLockStatusInfo_List_GET_NEXT( UINT8* base_ptr, UINT32 diff, UINT32 cur_bitoff, UINT32* out_diff, UINT32* out_cur_bitoff, UINT32 err );
L4BUFMANDLL_API void L4BUFMANDLL_BM_SPLockStatusInfo_List_SET_TYPE( UINT8* base_ptr, UINT32 diff, UINT32 cur_bitoff, UINT32 type );
L4BUFMANDLL_API void L4BUFMANDLL_BM_SPLockStatusInfo_List_SET_LENGTH( UINT8* base_ptr, UINT32 diff, UINT32 cur_bitoff, UINT32 lenOfLen, UINT32 length );
L4BUFMANDLL_API void L4BUFMANDLL_BM_SPLockStatusInfo_List_CURRENT_SPLockStatus_value_SET( UINT8* base_ptr, UINT32 diff, UINT32 cur_bitoff, UINT32 value );
L4BUFMANDLL_API void L4BUFMANDLL_BM_SPLockStatusInfo_List_CURRENT_LockedToNSPNameInfo_ActualLen_SET( UINT8* base_ptr, UINT32 diff, UINT32 cur_bitoff, UINT16 ActualLen );
L4BUFMANDLL_API void L4BUFMANDLL_BM_SPLockStatusInfo_List_CURRENT_LockedToNSPNameInfo_BufferArr_value_SET( UINT8* base_ptr, UINT32 i0, UINT32 diff, UINT32 cur_bitoff, UINT8 value );
L4BUFMANDLL_API void L4BUFMANDLL_BM_SPLockStatusInfo_Header_Type_SET( UINT8* base_ptr, UINT32 opcode );
L4BUFMANDLL_API void L4BUFMANDLL_BM_SPLockStatusInfo_Header_Version_SET( UINT8* base_ptr, UINT16 version );
L4BUFMANDLL_API void L4BUFMANDLL_BM_SPLockStatusInfo_Header_Accessibility_SET( UINT8* base_ptr, UINT16 accessibility );
L4BUFMANDLL_API void L4BUFMANDLL_BM_SPLockStatusInfo_Header_Status_SET( UINT8* base_ptr, UINT16 status );
L4BUFMANDLL_API void L4BUFMANDLL_BM_SPLockStatusInfo_Header_Length_SET( UINT8* base_ptr, UINT32 len );
L4BUFMANDLL_API void L4BUFMANDLL_BM_GetMediaStatus_Header_Version_GET( UINT8* base_ptr, UINT16* version );
L4BUFMANDLL_API void L4BUFMANDLL_BM_GetMediaStatus_Header_Accessibility_GET( UINT8* base_ptr, UINT16* accessibility );
L4BUFMANDLL_API void L4BUFMANDLL_BM_GetMediaStatus_Header_Status_GET( UINT8* base_ptr, UINT16* status );
L4BUFMANDLL_API void L4BUFMANDLL_BM_GetMediaStatus_Header_Length_GET( UINT8* base_ptr, UINT32* listSize );
L4BUFMANDLL_API void L4BUFMANDLL_BM_GetMediaStatus_List_GET_FIRST( UINT8* base_ptr, UINT32* out_diff, UINT32* out_cur_bitoff );
L4BUFMANDLL_API void L4BUFMANDLL_BM_GetMediaStatus_List_GET_TYPE( UINT8* base_ptr, UINT32 diff, UINT32 cur_bitoff, UINT32* type );
L4BUFMANDLL_API void L4BUFMANDLL_BM_GetMediaStatus_List_GET_LENGTH( UINT8* base_ptr, UINT32 diff, UINT32 cur_bitoff, UINT32* out_length, UINT32 err );
L4BUFMANDLL_API void L4BUFMANDLL_BM_GetMediaStatus_List_CURRENT_MediaStatus_value_GET( UINT8* base_ptr, UINT32 diff, UINT32 cur_bitoff, UINT32* value );
L4BUFMANDLL_API void L4BUFMANDLL_BM_GetMediaStatus_List_GET_NEXT( UINT8* base_ptr, UINT32 diff, UINT32 cur_bitoff, UINT32* out_diff, UINT32* out_cur_bitoff, UINT32 err );
L4BUFMANDLL_API void L4BUFMANDLL_BM_GetMediaStatus_List_SET_TYPE( UINT8* base_ptr, UINT32 diff, UINT32 cur_bitoff, UINT32 type );
L4BUFMANDLL_API void L4BUFMANDLL_BM_GetMediaStatus_List_SET_LENGTH( UINT8* base_ptr, UINT32 diff, UINT32 cur_bitoff, UINT32 lenOfLen, UINT32 length );
L4BUFMANDLL_API void L4BUFMANDLL_BM_GetMediaStatus_List_CURRENT_MediaStatus_value_SET( UINT8* base_ptr, UINT32 diff, UINT32 cur_bitoff, UINT32 value );
L4BUFMANDLL_API void L4BUFMANDLL_BM_GetMediaStatus_Header_Type_SET( UINT8* base_ptr, UINT32 opcode );
L4BUFMANDLL_API void L4BUFMANDLL_BM_GetMediaStatus_Header_Version_SET( UINT8* base_ptr, UINT16 version );
L4BUFMANDLL_API void L4BUFMANDLL_BM_GetMediaStatus_Header_Accessibility_SET( UINT8* base_ptr, UINT16 accessibility );
L4BUFMANDLL_API void L4BUFMANDLL_BM_GetMediaStatus_Header_Status_SET( UINT8* base_ptr, UINT16 status );
L4BUFMANDLL_API void L4BUFMANDLL_BM_GetMediaStatus_Header_Length_SET( UINT8* base_ptr, UINT32 len );
L4BUFMANDLL_API void L4BUFMANDLL_BM_GetState_Header_Version_GET( UINT8* base_ptr, UINT16* version );
L4BUFMANDLL_API void L4BUFMANDLL_BM_GetState_Header_Accessibility_GET( UINT8* base_ptr, UINT16* accessibility );
L4BUFMANDLL_API void L4BUFMANDLL_BM_GetState_Header_Status_GET( UINT8* base_ptr, UINT16* status );
L4BUFMANDLL_API void L4BUFMANDLL_BM_GetState_Header_Length_GET( UINT8* base_ptr, UINT32* listSize );
L4BUFMANDLL_API void L4BUFMANDLL_BM_GetState_List_GET_FIRST( UINT8* base_ptr, UINT32* out_diff, UINT32* out_cur_bitoff );
L4BUFMANDLL_API void L4BUFMANDLL_BM_GetState_List_GET_TYPE( UINT8* base_ptr, UINT32 diff, UINT32 cur_bitoff, UINT32* type );
L4BUFMANDLL_API void L4BUFMANDLL_BM_GetState_List_GET_LENGTH( UINT8* base_ptr, UINT32 diff, UINT32 cur_bitoff, UINT32* out_length, UINT32 err );
L4BUFMANDLL_API void L4BUFMANDLL_BM_GetState_List_CURRENT_SystemState_value_GET( UINT8* base_ptr, UINT32 diff, UINT32 cur_bitoff, UINT32* value );
L4BUFMANDLL_API void L4BUFMANDLL_BM_GetState_List_CURRENT_ConnectProgress_value_GET( UINT8* base_ptr, UINT32 diff, UINT32 cur_bitoff, UINT32* value );
L4BUFMANDLL_API void L4BUFMANDLL_BM_GetState_List_CURRENT_RFStatus_SwRFSwitch_GET( UINT8* base_ptr, UINT32 diff, UINT32 cur_bitoff, UINT8* SwRFSwitch );
L4BUFMANDLL_API void L4BUFMANDLL_BM_GetState_List_CURRENT_RFStatus_HwRFSwitch_GET( UINT8* base_ptr, UINT32 diff, UINT32 cur_bitoff, UINT8* HwRFSwitch );
L4BUFMANDLL_API void L4BUFMANDLL_BM_GetState_List_CURRENT_RFStatus_Reserved_GET( UINT8* base_ptr, UINT32 diff, UINT32 cur_bitoff, UINT16* Reserved );
L4BUFMANDLL_API void L4BUFMANDLL_BM_GetState_List_CURRENT_LastReason_value_GET( UINT8* base_ptr, UINT32 diff, UINT32 cur_bitoff, UINT32* value );
L4BUFMANDLL_API void L4BUFMANDLL_BM_GetState_List_GET_NEXT( UINT8* base_ptr, UINT32 diff, UINT32 cur_bitoff, UINT32* out_diff, UINT32* out_cur_bitoff, UINT32 err );
L4BUFMANDLL_API void L4BUFMANDLL_BM_GetState_List_SET_TYPE( UINT8* base_ptr, UINT32 diff, UINT32 cur_bitoff, UINT32 type );
L4BUFMANDLL_API void L4BUFMANDLL_BM_GetState_List_SET_LENGTH( UINT8* base_ptr, UINT32 diff, UINT32 cur_bitoff, UINT32 lenOfLen, UINT32 length );
L4BUFMANDLL_API void L4BUFMANDLL_BM_GetState_List_CURRENT_SystemState_value_SET( UINT8* base_ptr, UINT32 diff, UINT32 cur_bitoff, UINT32 value );
L4BUFMANDLL_API void L4BUFMANDLL_BM_GetState_List_CURRENT_ConnectProgress_value_SET( UINT8* base_ptr, UINT32 diff, UINT32 cur_bitoff, UINT32 value );
L4BUFMANDLL_API void L4BUFMANDLL_BM_GetState_List_CURRENT_RFStatus_SwRFSwitch_SET( UINT8* base_ptr, UINT32 diff, UINT32 cur_bitoff, UINT8 SwRFSwitch );
L4BUFMANDLL_API void L4BUFMANDLL_BM_GetState_List_CURRENT_RFStatus_HwRFSwitch_SET( UINT8* base_ptr, UINT32 diff, UINT32 cur_bitoff, UINT8 HwRFSwitch );
L4BUFMANDLL_API void L4BUFMANDLL_BM_GetState_List_CURRENT_RFStatus_Reserved_SET( UINT8* base_ptr, UINT32 diff, UINT32 cur_bitoff, UINT16 Reserved );
L4BUFMANDLL_API void L4BUFMANDLL_BM_GetState_List_CURRENT_LastReason_value_SET( UINT8* base_ptr, UINT32 diff, UINT32 cur_bitoff, UINT32 value );
L4BUFMANDLL_API void L4BUFMANDLL_BM_GetState_Header_Type_SET( UINT8* base_ptr, UINT32 opcode );
L4BUFMANDLL_API void L4BUFMANDLL_BM_GetState_Header_Version_SET( UINT8* base_ptr, UINT16 version );
L4BUFMANDLL_API void L4BUFMANDLL_BM_GetState_Header_Accessibility_SET( UINT8* base_ptr, UINT16 accessibility );
L4BUFMANDLL_API void L4BUFMANDLL_BM_GetState_Header_Status_SET( UINT8* base_ptr, UINT16 status );
L4BUFMANDLL_API void L4BUFMANDLL_BM_GetState_Header_Length_SET( UINT8* base_ptr, UINT32 len );
L4BUFMANDLL_API void L4BUFMANDLL_BM_GetScanResults_Header_Version_GET( UINT8* base_ptr, UINT16* version );
L4BUFMANDLL_API void L4BUFMANDLL_BM_GetScanResults_Header_Accessibility_GET( UINT8* base_ptr, UINT16* accessibility );
L4BUFMANDLL_API void L4BUFMANDLL_BM_GetScanResults_Header_Status_GET( UINT8* base_ptr, UINT16* status );
L4BUFMANDLL_API void L4BUFMANDLL_BM_GetScanResults_Header_Length_GET( UINT8* base_ptr, UINT32* listSize );
L4BUFMANDLL_API void L4BUFMANDLL_BM_GetScanResults_List_GET_FIRST( UINT8* base_ptr, UINT32* out_diff, UINT32* out_cur_bitoff );
L4BUFMANDLL_API void L4BUFMANDLL_BM_GetScanResults_List_GET_TYPE( UINT8* base_ptr, UINT32 diff, UINT32 cur_bitoff, UINT32* type );
L4BUFMANDLL_API void L4BUFMANDLL_BM_GetScanResults_List_GET_LENGTH( UINT8* base_ptr, UINT32 diff, UINT32 cur_bitoff, UINT32* out_length, UINT32 err );
L4BUFMANDLL_API void L4BUFMANDLL_BM_GetScanResults_List_CURRENT_ScanStatus_value_GET( UINT8* base_ptr, UINT32 diff, UINT32 cur_bitoff, UINT32* value );
L4BUFMANDLL_API void L4BUFMANDLL_BM_GetScanResults_List_CURRENT_ScanResultList_Get_Rssi_GET( UINT8* base_ptr, UINT32 diff, UINT32 cur_bitoff, UINT8* Rssi );
L4BUFMANDLL_API void L4BUFMANDLL_BM_GetScanResults_List_CURRENT_ScanResultList_Get_Cinr_GET( UINT8* base_ptr, UINT32 diff, UINT32 cur_bitoff, UINT8* Cinr );
L4BUFMANDLL_API void L4BUFMANDLL_BM_GetScanResults_List_CURRENT_ScanResultList_Get_BsIdmask_value_GET( UINT8* base_ptr, UINT32 i0, UINT32 diff, UINT32 cur_bitoff, UINT8* value );
L4BUFMANDLL_API void L4BUFMANDLL_BM_GetScanResults_List_CURRENT_ScanResultList_Get_BsId_value_GET( UINT8* base_ptr, UINT32 i0, UINT32 diff, UINT32 cur_bitoff, UINT8* value );
L4BUFMANDLL_API void L4BUFMANDLL_BM_GetScanResults_List_CURRENT_ScanResultList_Get_ChannelId_GET( UINT8* base_ptr, UINT32 diff, UINT32 cur_bitoff, UINT16* ChannelId );
L4BUFMANDLL_API void L4BUFMANDLL_BM_GetScanResults_List_CURRENT_ScanResultList_Get_PreambleId_GET( UINT8* base_ptr, UINT32 diff, UINT32 cur_bitoff, UINT16* PreambleId );
L4BUFMANDLL_API void L4BUFMANDLL_BM_GetScanResults_List_CURRENT_ScanResultList_Get_LinkGrade_GET( UINT8* base_ptr, UINT32 diff, UINT32 cur_bitoff, UINT8* LinkGrade );
L4BUFMANDLL_API void L4BUFMANDLL_BM_GetScanResults_List_CURRENT_ScanResultList_Get_LinkQuality_GET( UINT8* base_ptr, UINT32 diff, UINT32 cur_bitoff, UINT8* LinkQuality );
L4BUFMANDLL_API void L4BUFMANDLL_BM_GetScanResults_List_GET_NEXT( UINT8* base_ptr, UINT32 diff, UINT32 cur_bitoff, UINT32* out_diff, UINT32* out_cur_bitoff, UINT32 err );
L4BUFMANDLL_API void L4BUFMANDLL_BM_GetScanResults_List_SET_TYPE( UINT8* base_ptr, UINT32 diff, UINT32 cur_bitoff, UINT32 type );
L4BUFMANDLL_API void L4BUFMANDLL_BM_GetScanResults_List_SET_LENGTH( UINT8* base_ptr, UINT32 diff, UINT32 cur_bitoff, UINT32 lenOfLen, UINT32 length );
L4BUFMANDLL_API void L4BUFMANDLL_BM_GetScanResults_List_CURRENT_ScanStatus_value_SET( UINT8* base_ptr, UINT32 diff, UINT32 cur_bitoff, UINT32 value );
L4BUFMANDLL_API void L4BUFMANDLL_BM_GetScanResults_List_CURRENT_ScanResultList_Get_Rssi_SET( UINT8* base_ptr, UINT32 diff, UINT32 cur_bitoff, UINT8 Rssi );
L4BUFMANDLL_API void L4BUFMANDLL_BM_GetScanResults_List_CURRENT_ScanResultList_Get_Cinr_SET( UINT8* base_ptr, UINT32 diff, UINT32 cur_bitoff, UINT8 Cinr );
L4BUFMANDLL_API void L4BUFMANDLL_BM_GetScanResults_List_CURRENT_ScanResultList_Get_BsIdmask_value_SET( UINT8* base_ptr, UINT32 i0, UINT32 diff, UINT32 cur_bitoff, UINT8 value );
L4BUFMANDLL_API void L4BUFMANDLL_BM_GetScanResults_List_CURRENT_ScanResultList_Get_BsId_value_SET( UINT8* base_ptr, UINT32 i0, UINT32 diff, UINT32 cur_bitoff, UINT8 value );
L4BUFMANDLL_API void L4BUFMANDLL_BM_GetScanResults_List_CURRENT_ScanResultList_Get_ChannelId_SET( UINT8* base_ptr, UINT32 diff, UINT32 cur_bitoff, UINT16 ChannelId );
L4BUFMANDLL_API void L4BUFMANDLL_BM_GetScanResults_List_CURRENT_ScanResultList_Get_PreambleId_SET( UINT8* base_ptr, UINT32 diff, UINT32 cur_bitoff, UINT16 PreambleId );
L4BUFMANDLL_API void L4BUFMANDLL_BM_GetScanResults_List_CURRENT_ScanResultList_Get_LinkGrade_SET( UINT8* base_ptr, UINT32 diff, UINT32 cur_bitoff, UINT8 LinkGrade );
L4BUFMANDLL_API void L4BUFMANDLL_BM_GetScanResults_List_CURRENT_ScanResultList_Get_LinkQuality_SET( UINT8* base_ptr, UINT32 diff, UINT32 cur_bitoff, UINT8 LinkQuality );
L4BUFMANDLL_API void L4BUFMANDLL_BM_GetScanResults_Header_Type_SET( UINT8* base_ptr, UINT32 opcode );
L4BUFMANDLL_API void L4BUFMANDLL_BM_GetScanResults_Header_Version_SET( UINT8* base_ptr, UINT16 version );
L4BUFMANDLL_API void L4BUFMANDLL_BM_GetScanResults_Header_Accessibility_SET( UINT8* base_ptr, UINT16 accessibility );
L4BUFMANDLL_API void L4BUFMANDLL_BM_GetScanResults_Header_Status_SET( UINT8* base_ptr, UINT16 status );
L4BUFMANDLL_API void L4BUFMANDLL_BM_GetScanResults_Header_Length_SET( UINT8* base_ptr, UINT32 len );
L4BUFMANDLL_API void L4BUFMANDLL_BM_ReportEMSKRelatedKeys_Header_Version_GET( UINT8* base_ptr, UINT16* version );
L4BUFMANDLL_API void L4BUFMANDLL_BM_ReportEMSKRelatedKeys_Header_Accessibility_GET( UINT8* base_ptr, UINT16* accessibility );
L4BUFMANDLL_API void L4BUFMANDLL_BM_ReportEMSKRelatedKeys_Header_Status_GET( UINT8* base_ptr, UINT16* status );
L4BUFMANDLL_API void L4BUFMANDLL_BM_ReportEMSKRelatedKeys_Header_Length_GET( UINT8* base_ptr, UINT32* listSize );
L4BUFMANDLL_API void L4BUFMANDLL_BM_ReportEMSKRelatedKeys_List_GET_FIRST( UINT8* base_ptr, UINT32* out_diff, UINT32* out_cur_bitoff );
L4BUFMANDLL_API void L4BUFMANDLL_BM_ReportEMSKRelatedKeys_List_GET_TYPE( UINT8* base_ptr, UINT32 diff, UINT32 cur_bitoff, UINT32* type );
L4BUFMANDLL_API void L4BUFMANDLL_BM_ReportEMSKRelatedKeys_List_GET_LENGTH( UINT8* base_ptr, UINT32 diff, UINT32 cur_bitoff, UINT32* out_length, UINT32 err );
L4BUFMANDLL_API void L4BUFMANDLL_BM_ReportEMSKRelatedKeys_List_CURRENT_BEK_BEKKeyBufferArr_value_GET( UINT8* base_ptr, UINT32 i0, UINT32 diff, UINT32 cur_bitoff, UINT8* value );
L4BUFMANDLL_API void L4BUFMANDLL_BM_ReportEMSKRelatedKeys_List_GET_NEXT( UINT8* base_ptr, UINT32 diff, UINT32 cur_bitoff, UINT32* out_diff, UINT32* out_cur_bitoff, UINT32 err );
L4BUFMANDLL_API void L4BUFMANDLL_BM_ReportEMSKRelatedKeys_List_SET_TYPE( UINT8* base_ptr, UINT32 diff, UINT32 cur_bitoff, UINT32 type );
L4BUFMANDLL_API void L4BUFMANDLL_BM_ReportEMSKRelatedKeys_List_SET_LENGTH( UINT8* base_ptr, UINT32 diff, UINT32 cur_bitoff, UINT32 lenOfLen, UINT32 length );
L4BUFMANDLL_API void L4BUFMANDLL_BM_ReportEMSKRelatedKeys_List_CURRENT_BEK_BEKKeyBufferArr_value_SET( UINT8* base_ptr, UINT32 i0, UINT32 diff, UINT32 cur_bitoff, UINT8 value );
L4BUFMANDLL_API void L4BUFMANDLL_BM_ReportEMSKRelatedKeys_Header_Type_SET( UINT8* base_ptr, UINT32 opcode );
L4BUFMANDLL_API void L4BUFMANDLL_BM_ReportEMSKRelatedKeys_Header_Version_SET( UINT8* base_ptr, UINT16 version );
L4BUFMANDLL_API void L4BUFMANDLL_BM_ReportEMSKRelatedKeys_Header_Accessibility_SET( UINT8* base_ptr, UINT16 accessibility );
L4BUFMANDLL_API void L4BUFMANDLL_BM_ReportEMSKRelatedKeys_Header_Status_SET( UINT8* base_ptr, UINT16 status );
L4BUFMANDLL_API void L4BUFMANDLL_BM_ReportEMSKRelatedKeys_Header_Length_SET( UINT8* base_ptr, UINT32 len );
L4BUFMANDLL_API void L4BUFMANDLL_BM_ReportScanResults_Header_Version_GET( UINT8* base_ptr, UINT16* version );
L4BUFMANDLL_API void L4BUFMANDLL_BM_ReportScanResults_Header_Accessibility_GET( UINT8* base_ptr, UINT16* accessibility );
L4BUFMANDLL_API void L4BUFMANDLL_BM_ReportScanResults_Header_Status_GET( UINT8* base_ptr, UINT16* status );
L4BUFMANDLL_API void L4BUFMANDLL_BM_ReportScanResults_Header_Length_GET( UINT8* base_ptr, UINT32* listSize );
L4BUFMANDLL_API void L4BUFMANDLL_BM_ReportScanResults_List_GET_FIRST( UINT8* base_ptr, UINT32* out_diff, UINT32* out_cur_bitoff );
L4BUFMANDLL_API void L4BUFMANDLL_BM_ReportScanResults_List_GET_TYPE( UINT8* base_ptr, UINT32 diff, UINT32 cur_bitoff, UINT32* type );
L4BUFMANDLL_API void L4BUFMANDLL_BM_ReportScanResults_List_GET_LENGTH( UINT8* base_ptr, UINT32 diff, UINT32 cur_bitoff, UINT32* out_length, UINT32 err );
L4BUFMANDLL_API void L4BUFMANDLL_BM_ReportScanResults_List_CURRENT_ScanStatus_value_GET( UINT8* base_ptr, UINT32 diff, UINT32 cur_bitoff, UINT32* value );
L4BUFMANDLL_API void L4BUFMANDLL_BM_ReportScanResults_List_CURRENT_ScanResultList_Report_Rssi_GET( UINT8* base_ptr, UINT32 diff, UINT32 cur_bitoff, UINT8* Rssi );
L4BUFMANDLL_API void L4BUFMANDLL_BM_ReportScanResults_List_CURRENT_ScanResultList_Report_Cinr_GET( UINT8* base_ptr, UINT32 diff, UINT32 cur_bitoff, UINT8* Cinr );
L4BUFMANDLL_API void L4BUFMANDLL_BM_ReportScanResults_List_CURRENT_ScanResultList_Report_BsIdmask_value_GET( UINT8* base_ptr, UINT32 i0, UINT32 diff, UINT32 cur_bitoff, UINT8* value );
L4BUFMANDLL_API void L4BUFMANDLL_BM_ReportScanResults_List_CURRENT_ScanResultList_Report_BsId_value_GET( UINT8* base_ptr, UINT32 i0, UINT32 diff, UINT32 cur_bitoff, UINT8* value );
L4BUFMANDLL_API void L4BUFMANDLL_BM_ReportScanResults_List_CURRENT_ScanResultList_Report_ChannelId_GET( UINT8* base_ptr, UINT32 diff, UINT32 cur_bitoff, UINT16* ChannelId );
L4BUFMANDLL_API void L4BUFMANDLL_BM_ReportScanResults_List_CURRENT_ScanResultList_Report_PreambleId_GET( UINT8* base_ptr, UINT32 diff, UINT32 cur_bitoff, UINT16* PreambleId );
L4BUFMANDLL_API void L4BUFMANDLL_BM_ReportScanResults_List_CURRENT_ScanResultList_Report_LinkGrade_GET( UINT8* base_ptr, UINT32 diff, UINT32 cur_bitoff, UINT8* LinkGrade );
L4BUFMANDLL_API void L4BUFMANDLL_BM_ReportScanResults_List_CURRENT_ScanResultList_Report_LinkQuality_GET( UINT8* base_ptr, UINT32 diff, UINT32 cur_bitoff, UINT8* LinkQuality );
L4BUFMANDLL_API void L4BUFMANDLL_BM_ReportScanResults_List_GET_NEXT( UINT8* base_ptr, UINT32 diff, UINT32 cur_bitoff, UINT32* out_diff, UINT32* out_cur_bitoff, UINT32 err );
L4BUFMANDLL_API void L4BUFMANDLL_BM_ReportScanResults_List_SET_TYPE( UINT8* base_ptr, UINT32 diff, UINT32 cur_bitoff, UINT32 type );
L4BUFMANDLL_API void L4BUFMANDLL_BM_ReportScanResults_List_SET_LENGTH( UINT8* base_ptr, UINT32 diff, UINT32 cur_bitoff, UINT32 lenOfLen, UINT32 length );
L4BUFMANDLL_API void L4BUFMANDLL_BM_ReportScanResults_List_CURRENT_ScanStatus_value_SET( UINT8* base_ptr, UINT32 diff, UINT32 cur_bitoff, UINT32 value );
L4BUFMANDLL_API void L4BUFMANDLL_BM_ReportScanResults_List_CURRENT_ScanResultList_Report_Rssi_SET( UINT8* base_ptr, UINT32 diff, UINT32 cur_bitoff, UINT8 Rssi );
L4BUFMANDLL_API void L4BUFMANDLL_BM_ReportScanResults_List_CURRENT_ScanResultList_Report_Cinr_SET( UINT8* base_ptr, UINT32 diff, UINT32 cur_bitoff, UINT8 Cinr );
L4BUFMANDLL_API void L4BUFMANDLL_BM_ReportScanResults_List_CURRENT_ScanResultList_Report_BsIdmask_value_SET( UINT8* base_ptr, UINT32 i0, UINT32 diff, UINT32 cur_bitoff, UINT8 value );
L4BUFMANDLL_API void L4BUFMANDLL_BM_ReportScanResults_List_CURRENT_ScanResultList_Report_BsId_value_SET( UINT8* base_ptr, UINT32 i0, UINT32 diff, UINT32 cur_bitoff, UINT8 value );
L4BUFMANDLL_API void L4BUFMANDLL_BM_ReportScanResults_List_CURRENT_ScanResultList_Report_ChannelId_SET( UINT8* base_ptr, UINT32 diff, UINT32 cur_bitoff, UINT16 ChannelId );
L4BUFMANDLL_API void L4BUFMANDLL_BM_ReportScanResults_List_CURRENT_ScanResultList_Report_PreambleId_SET( UINT8* base_ptr, UINT32 diff, UINT32 cur_bitoff, UINT16 PreambleId );
L4BUFMANDLL_API void L4BUFMANDLL_BM_ReportScanResults_List_CURRENT_ScanResultList_Report_LinkGrade_SET( UINT8* base_ptr, UINT32 diff, UINT32 cur_bitoff, UINT8 LinkGrade );
L4BUFMANDLL_API void L4BUFMANDLL_BM_ReportScanResults_List_CURRENT_ScanResultList_Report_LinkQuality_SET( UINT8* base_ptr, UINT32 diff, UINT32 cur_bitoff, UINT8 LinkQuality );
L4BUFMANDLL_API void L4BUFMANDLL_BM_ReportScanResults_Header_Type_SET( UINT8* base_ptr, UINT32 opcode );
L4BUFMANDLL_API void L4BUFMANDLL_BM_ReportScanResults_Header_Version_SET( UINT8* base_ptr, UINT16 version );
L4BUFMANDLL_API void L4BUFMANDLL_BM_ReportScanResults_Header_Accessibility_SET( UINT8* base_ptr, UINT16 accessibility );
L4BUFMANDLL_API void L4BUFMANDLL_BM_ReportScanResults_Header_Status_SET( UINT8* base_ptr, UINT16 status );
L4BUFMANDLL_API void L4BUFMANDLL_BM_ReportScanResults_Header_Length_SET( UINT8* base_ptr, UINT32 len );
L4BUFMANDLL_API void L4BUFMANDLL_BM_SetMonitorFilterTable_Header_Version_GET( UINT8* base_ptr, UINT16* version );
L4BUFMANDLL_API void L4BUFMANDLL_BM_SetMonitorFilterTable_Header_Accessibility_GET( UINT8* base_ptr, UINT16* accessibility );
L4BUFMANDLL_API void L4BUFMANDLL_BM_SetMonitorFilterTable_Header_Status_GET( UINT8* base_ptr, UINT16* status );
L4BUFMANDLL_API void L4BUFMANDLL_BM_SetMonitorFilterTable_Header_Length_GET( UINT8* base_ptr, UINT32* listSize );
L4BUFMANDLL_API void L4BUFMANDLL_BM_SetMonitorFilterTable_List_GET_FIRST( UINT8* base_ptr, UINT32* out_diff, UINT32* out_cur_bitoff );
L4BUFMANDLL_API void L4BUFMANDLL_BM_SetMonitorFilterTable_List_GET_TYPE( UINT8* base_ptr, UINT32 diff, UINT32 cur_bitoff, UINT32* type );
L4BUFMANDLL_API void L4BUFMANDLL_BM_SetMonitorFilterTable_List_GET_LENGTH( UINT8* base_ptr, UINT32 diff, UINT32 cur_bitoff, UINT32* out_length, UINT32 err );
L4BUFMANDLL_API void L4BUFMANDLL_BM_SetMonitorFilterTable_List_CURRENT_MonitorFilterTable_FilterTable_value_GET( UINT8* base_ptr, UINT32 i0, UINT32 diff, UINT32 cur_bitoff, UINT8* value );
L4BUFMANDLL_API void L4BUFMANDLL_BM_SetMonitorFilterTable_List_GET_NEXT( UINT8* base_ptr, UINT32 diff, UINT32 cur_bitoff, UINT32* out_diff, UINT32* out_cur_bitoff, UINT32 err );
L4BUFMANDLL_API void L4BUFMANDLL_BM_SetMonitorFilterTable_List_SET_TYPE( UINT8* base_ptr, UINT32 diff, UINT32 cur_bitoff, UINT32 type );
L4BUFMANDLL_API void L4BUFMANDLL_BM_SetMonitorFilterTable_List_SET_LENGTH( UINT8* base_ptr, UINT32 diff, UINT32 cur_bitoff, UINT32 lenOfLen, UINT32 length );
L4BUFMANDLL_API void L4BUFMANDLL_BM_SetMonitorFilterTable_List_CURRENT_MonitorFilterTable_FilterTable_value_SET( UINT8* base_ptr, UINT32 i0, UINT32 diff, UINT32 cur_bitoff, UINT8 value );
L4BUFMANDLL_API void L4BUFMANDLL_BM_SetMonitorFilterTable_Header_Type_SET( UINT8* base_ptr, UINT32 opcode );
L4BUFMANDLL_API void L4BUFMANDLL_BM_SetMonitorFilterTable_Header_Version_SET( UINT8* base_ptr, UINT16 version );
L4BUFMANDLL_API void L4BUFMANDLL_BM_SetMonitorFilterTable_Header_Accessibility_SET( UINT8* base_ptr, UINT16 accessibility );
L4BUFMANDLL_API void L4BUFMANDLL_BM_SetMonitorFilterTable_Header_Status_SET( UINT8* base_ptr, UINT16 status );
L4BUFMANDLL_API void L4BUFMANDLL_BM_SetMonitorFilterTable_Header_Length_SET( UINT8* base_ptr, UINT32 len );
L4BUFMANDLL_API void L4BUFMANDLL_BM_SetEapSuccess_Header_Version_GET( UINT8* base_ptr, UINT16* version );
L4BUFMANDLL_API void L4BUFMANDLL_BM_SetEapSuccess_Header_Accessibility_GET( UINT8* base_ptr, UINT16* accessibility );
L4BUFMANDLL_API void L4BUFMANDLL_BM_SetEapSuccess_Header_Status_GET( UINT8* base_ptr, UINT16* status );
L4BUFMANDLL_API void L4BUFMANDLL_BM_SetEapSuccess_Header_Type_SET( UINT8* base_ptr, UINT32 opcode );
L4BUFMANDLL_API void L4BUFMANDLL_BM_SetEapSuccess_Header_Version_SET( UINT8* base_ptr, UINT16 version );
L4BUFMANDLL_API void L4BUFMANDLL_BM_SetEapSuccess_Header_Accessibility_SET( UINT8* base_ptr, UINT16 accessibility );
L4BUFMANDLL_API void L4BUFMANDLL_BM_SetEapSuccess_Header_Status_SET( UINT8* base_ptr, UINT16 status );
L4BUFMANDLL_API void L4BUFMANDLL_BM_SetEapSuccess_Header_Length_SET( UINT8* base_ptr, UINT32 len );
L4BUFMANDLL_API void L4BUFMANDLL_BM_CmdCoexProcessEnd_Header_Version_GET( UINT8* base_ptr, UINT16* version );
L4BUFMANDLL_API void L4BUFMANDLL_BM_CmdCoexProcessEnd_Header_Accessibility_GET( UINT8* base_ptr, UINT16* accessibility );
L4BUFMANDLL_API void L4BUFMANDLL_BM_CmdCoexProcessEnd_Header_Status_GET( UINT8* base_ptr, UINT16* status );
L4BUFMANDLL_API void L4BUFMANDLL_BM_CmdCoexProcessEnd_Header_Type_SET( UINT8* base_ptr, UINT32 opcode );
L4BUFMANDLL_API void L4BUFMANDLL_BM_CmdCoexProcessEnd_Header_Version_SET( UINT8* base_ptr, UINT16 version );
L4BUFMANDLL_API void L4BUFMANDLL_BM_CmdCoexProcessEnd_Header_Accessibility_SET( UINT8* base_ptr, UINT16 accessibility );
L4BUFMANDLL_API void L4BUFMANDLL_BM_CmdCoexProcessEnd_Header_Status_SET( UINT8* base_ptr, UINT16 status );
L4BUFMANDLL_API void L4BUFMANDLL_BM_CmdCoexProcessEnd_Header_Length_SET( UINT8* base_ptr, UINT32 len );
L4BUFMANDLL_API void L4BUFMANDLL_BM_GetD2HChannelMask_Header_Version_GET( UINT8* base_ptr, UINT16* version );
L4BUFMANDLL_API void L4BUFMANDLL_BM_GetD2HChannelMask_Header_Accessibility_GET( UINT8* base_ptr, UINT16* accessibility );
L4BUFMANDLL_API void L4BUFMANDLL_BM_GetD2HChannelMask_Header_Status_GET( UINT8* base_ptr, UINT16* status );
L4BUFMANDLL_API void L4BUFMANDLL_BM_GetD2HChannelMask_Header_Length_GET( UINT8* base_ptr, UINT32* listSize );
L4BUFMANDLL_API void L4BUFMANDLL_BM_GetD2HChannelMask_List_GET_FIRST( UINT8* base_ptr, UINT32* out_diff, UINT32* out_cur_bitoff );
L4BUFMANDLL_API void L4BUFMANDLL_BM_GetD2HChannelMask_List_GET_TYPE( UINT8* base_ptr, UINT32 diff, UINT32 cur_bitoff, UINT32* type );
L4BUFMANDLL_API void L4BUFMANDLL_BM_GetD2HChannelMask_List_GET_LENGTH( UINT8* base_ptr, UINT32 diff, UINT32 cur_bitoff, UINT32* out_length, UINT32 err );
L4BUFMANDLL_API void L4BUFMANDLL_BM_GetD2HChannelMask_List_CURRENT_D2HChannelMask_DataChannelSwitch_GET( UINT8* base_ptr, UINT32 diff, UINT32 cur_bitoff, UINT8* DataChannelSwitch );
L4BUFMANDLL_API void L4BUFMANDLL_BM_GetD2HChannelMask_List_CURRENT_D2HChannelMask_DiagnosticsChannelSwitch_GET( UINT8* base_ptr, UINT32 diff, UINT32 cur_bitoff, UINT8* DiagnosticsChannelSwitch );
L4BUFMANDLL_API void L4BUFMANDLL_BM_GetD2HChannelMask_List_CURRENT_D2HChannelMask_Reserved_GET( UINT8* base_ptr, UINT32 diff, UINT32 cur_bitoff, UINT16* Reserved );
L4BUFMANDLL_API void L4BUFMANDLL_BM_GetD2HChannelMask_List_GET_NEXT( UINT8* base_ptr, UINT32 diff, UINT32 cur_bitoff, UINT32* out_diff, UINT32* out_cur_bitoff, UINT32 err );
L4BUFMANDLL_API void L4BUFMANDLL_BM_GetD2HChannelMask_List_SET_TYPE( UINT8* base_ptr, UINT32 diff, UINT32 cur_bitoff, UINT32 type );
L4BUFMANDLL_API void L4BUFMANDLL_BM_GetD2HChannelMask_List_SET_LENGTH( UINT8* base_ptr, UINT32 diff, UINT32 cur_bitoff, UINT32 lenOfLen, UINT32 length );
L4BUFMANDLL_API void L4BUFMANDLL_BM_GetD2HChannelMask_List_CURRENT_D2HChannelMask_DataChannelSwitch_SET( UINT8* base_ptr, UINT32 diff, UINT32 cur_bitoff, UINT8 DataChannelSwitch );
L4BUFMANDLL_API void L4BUFMANDLL_BM_GetD2HChannelMask_List_CURRENT_D2HChannelMask_DiagnosticsChannelSwitch_SET( UINT8* base_ptr, UINT32 diff, UINT32 cur_bitoff, UINT8 DiagnosticsChannelSwitch );
L4BUFMANDLL_API void L4BUFMANDLL_BM_GetD2HChannelMask_List_CURRENT_D2HChannelMask_Reserved_SET( UINT8* base_ptr, UINT32 diff, UINT32 cur_bitoff, UINT16 Reserved );
L4BUFMANDLL_API void L4BUFMANDLL_BM_GetD2HChannelMask_Header_Type_SET( UINT8* base_ptr, UINT32 opcode );
L4BUFMANDLL_API void L4BUFMANDLL_BM_GetD2HChannelMask_Header_Version_SET( UINT8* base_ptr, UINT16 version );
L4BUFMANDLL_API void L4BUFMANDLL_BM_GetD2HChannelMask_Header_Accessibility_SET( UINT8* base_ptr, UINT16 accessibility );
L4BUFMANDLL_API void L4BUFMANDLL_BM_GetD2HChannelMask_Header_Status_SET( UINT8* base_ptr, UINT16 status );
L4BUFMANDLL_API void L4BUFMANDLL_BM_GetD2HChannelMask_Header_Length_SET( UINT8* base_ptr, UINT32 len );
L4BUFMANDLL_API void L4BUFMANDLL_BM_SetPreInitConfiguration_Header_Version_GET( UINT8* base_ptr, UINT16* version );
L4BUFMANDLL_API void L4BUFMANDLL_BM_SetPreInitConfiguration_Header_Accessibility_GET( UINT8* base_ptr, UINT16* accessibility );
L4BUFMANDLL_API void L4BUFMANDLL_BM_SetPreInitConfiguration_Header_Status_GET( UINT8* base_ptr, UINT16* status );
L4BUFMANDLL_API void L4BUFMANDLL_BM_SetPreInitConfiguration_Header_Length_GET( UINT8* base_ptr, UINT32* listSize );
L4BUFMANDLL_API void L4BUFMANDLL_BM_SetPreInitConfiguration_List_GET_FIRST( UINT8* base_ptr, UINT32* out_diff, UINT32* out_cur_bitoff );
L4BUFMANDLL_API void L4BUFMANDLL_BM_SetPreInitConfiguration_List_GET_TYPE( UINT8* base_ptr, UINT32 diff, UINT32 cur_bitoff, UINT32* type );
L4BUFMANDLL_API void L4BUFMANDLL_BM_SetPreInitConfiguration_List_GET_LENGTH( UINT8* base_ptr, UINT32 diff, UINT32 cur_bitoff, UINT32* out_length, UINT32 err );
L4BUFMANDLL_API void L4BUFMANDLL_BM_SetPreInitConfiguration_List_CURRENT_PrivilegeKeyConfigComp_Key_value_GET( UINT8* base_ptr, UINT32 i0, UINT32 diff, UINT32 cur_bitoff, UINT8* value );
L4BUFMANDLL_API void L4BUFMANDLL_BM_SetPreInitConfiguration_List_CURRENT_LedOperationalConfigComp_NvmOverride_GET( UINT8* base_ptr, UINT32 diff, UINT32 cur_bitoff, UINT8* NvmOverride );
L4BUFMANDLL_API void L4BUFMANDLL_BM_SetPreInitConfiguration_List_CURRENT_LedOperationalConfigComp_ledBehavior_Led0Scheme_GET( UINT8* base_ptr, UINT32 i0, UINT32 diff, UINT32 cur_bitoff, UINT8* Led0Scheme );
L4BUFMANDLL_API void L4BUFMANDLL_BM_SetPreInitConfiguration_List_CURRENT_LedOperationalConfigComp_ledBehavior_Led1Scheme_GET( UINT8* base_ptr, UINT32 i0, UINT32 diff, UINT32 cur_bitoff, UINT8* Led1Scheme );
L4BUFMANDLL_API void L4BUFMANDLL_BM_SetPreInitConfiguration_List_CURRENT_LedOperationalConfigComp_powerSaveInfo_ledBlinkRate_onPeriod_GET( UINT8* base_ptr, UINT32 diff, UINT32 cur_bitoff, UINT8* onPeriod );
L4BUFMANDLL_API void L4BUFMANDLL_BM_SetPreInitConfiguration_List_CURRENT_LedOperationalConfigComp_powerSaveInfo_ledBlinkRate_offPeriod_GET( UINT8* base_ptr, UINT32 diff, UINT32 cur_bitoff, UINT8* offPeriod );
L4BUFMANDLL_API void L4BUFMANDLL_BM_SetPreInitConfiguration_List_CURRENT_LedOperationalConfigComp_powerSaveInfo_powerSaveMode_GET( UINT8* base_ptr, UINT32 diff, UINT32 cur_bitoff, UINT8* powerSaveMode );
L4BUFMANDLL_API void L4BUFMANDLL_BM_SetPreInitConfiguration_List_CURRENT_LedOperationalConfigComp_powerSaveInfo_ledTimeInterval_GET( UINT8* base_ptr, UINT32 diff, UINT32 cur_bitoff, UINT32* ledTimeInterval );
L4BUFMANDLL_API void L4BUFMANDLL_BM_SetPreInitConfiguration_List_CURRENT_LedOperationalConfigComp_numOfLeds_GET( UINT8* base_ptr, UINT32 diff, UINT32 cur_bitoff, UINT8* numOfLeds );
L4BUFMANDLL_API void L4BUFMANDLL_BM_SetPreInitConfiguration_List_CURRENT_LedOperationalConfigComp_blinkingRate_onPeriod_GET( UINT8* base_ptr, UINT32 i0, UINT32 diff, UINT32 cur_bitoff, UINT8* onPeriod );
L4BUFMANDLL_API void L4BUFMANDLL_BM_SetPreInitConfiguration_List_CURRENT_LedOperationalConfigComp_blinkingRate_offPeriod_GET( UINT8* base_ptr, UINT32 i0, UINT32 diff, UINT32 cur_bitoff, UINT8* offPeriod );
L4BUFMANDLL_API void L4BUFMANDLL_BM_SetPreInitConfiguration_List_CURRENT_LedOperationalConfigComp_reserved_GET( UINT8* base_ptr, UINT32 diff, UINT32 cur_bitoff, UINT8* reserved );
L4BUFMANDLL_API void L4BUFMANDLL_BM_SetPreInitConfiguration_List_CURRENT_LimitMaxTxPowerConfigComp_LimitMaxTxPower_GET( UINT8* base_ptr, UINT32 diff, UINT32 cur_bitoff, UINT32* LimitMaxTxPower );
L4BUFMANDLL_API void L4BUFMANDLL_BM_SetPreInitConfiguration_List_CURRENT_IdleParametersConfigComp_IdleTimeout_GET( UINT8* base_ptr, UINT32 diff, UINT32 cur_bitoff, UINT32* IdleTimeout );
L4BUFMANDLL_API void L4BUFMANDLL_BM_SetPreInitConfiguration_List_CURRENT_IdleParametersConfigComp_IdlePagingInterval_GET( UINT8* base_ptr, UINT32 diff, UINT32 cur_bitoff, UINT32* IdlePagingInterval );
L4BUFMANDLL_API void L4BUFMANDLL_BM_SetPreInitConfiguration_List_CURRENT_IdleParameterTimeoutConfigComp_IdleTimeout_GET( UINT8* base_ptr, UINT32 diff, UINT32 cur_bitoff, UINT32* IdleTimeout );
L4BUFMANDLL_API void L4BUFMANDLL_BM_SetPreInitConfiguration_List_CURRENT_IdleParameterPagingIntervalConfigComp_PagingInterval_GET( UINT8* base_ptr, UINT32 diff, UINT32 cur_bitoff, UINT32* PagingInterval );
L4BUFMANDLL_API void L4BUFMANDLL_BM_SetPreInitConfiguration_List_CURRENT_IdleParameterIdleEntrySuspendConfigComp_IdleEntrySuspend_GET( UINT8* base_ptr, UINT32 diff, UINT32 cur_bitoff, UINT32* IdleEntrySuspend );
L4BUFMANDLL_API void L4BUFMANDLL_BM_SetPreInitConfiguration_List_CURRENT_IdleParameterFullNeSuspendConfigComp_FullNeSuspend_GET( UINT8* base_ptr, UINT32 diff, UINT32 cur_bitoff, UINT32* FullNeSuspend );
L4BUFMANDLL_API void L4BUFMANDLL_BM_SetPreInitConfiguration_List_CURRENT_LinkDownTimerConfigComp_LinkDown_GET( UINT8* base_ptr, UINT32 diff, UINT32 cur_bitoff, UINT32* LinkDown );
L4BUFMANDLL_API void L4BUFMANDLL_BM_SetPreInitConfiguration_List_CURRENT_ArqSupportConfigComp_GeneralState_GET( UINT8* base_ptr, UINT32 diff, UINT32 cur_bitoff, UINT8* GeneralState );
L4BUFMANDLL_API void L4BUFMANDLL_BM_SetPreInitConfiguration_List_CURRENT_ArqSupportConfigComp_Reserved1_GET( UINT8* base_ptr, UINT32 diff, UINT32 cur_bitoff, UINT8* Reserved1 );
L4BUFMANDLL_API void L4BUFMANDLL_BM_SetPreInitConfiguration_List_CURRENT_ArqSupportConfigComp_Reserved2_GET( UINT8* base_ptr, UINT32 diff, UINT32 cur_bitoff, UINT16* Reserved2 );
L4BUFMANDLL_API void L4BUFMANDLL_BM_SetPreInitConfiguration_List_CURRENT_LoopBackConfigComp_OperationMode_GET( UINT8* base_ptr, UINT32 diff, UINT32 cur_bitoff, UINT8* OperationMode );
L4BUFMANDLL_API void L4BUFMANDLL_BM_SetPreInitConfiguration_List_CURRENT_LoopBackConfigComp_Reserved1_GET( UINT8* base_ptr, UINT32 diff, UINT32 cur_bitoff, UINT8* Reserved1 );
L4BUFMANDLL_API void L4BUFMANDLL_BM_SetPreInitConfiguration_List_CURRENT_LoopBackConfigComp_Reserved2_GET( UINT8* base_ptr, UINT32 diff, UINT32 cur_bitoff, UINT16* Reserved2 );
L4BUFMANDLL_API void L4BUFMANDLL_BM_SetPreInitConfiguration_List_CURRENT_ResetOnAssertConfigComp_GeneralState_GET( UINT8* base_ptr, UINT32 diff, UINT32 cur_bitoff, UINT8* GeneralState );
L4BUFMANDLL_API void L4BUFMANDLL_BM_SetPreInitConfiguration_List_CURRENT_ResetOnAssertConfigComp_Reserved1_GET( UINT8* base_ptr, UINT32 diff, UINT32 cur_bitoff, UINT8* Reserved1 );
L4BUFMANDLL_API void L4BUFMANDLL_BM_SetPreInitConfiguration_List_CURRENT_ResetOnAssertConfigComp_Reserved2_GET( UINT8* base_ptr, UINT32 diff, UINT32 cur_bitoff, UINT16* Reserved2 );
L4BUFMANDLL_API void L4BUFMANDLL_BM_SetPreInitConfiguration_List_CURRENT_WatchDogTimerConfigComp_GeneralState_GET( UINT8* base_ptr, UINT32 diff, UINT32 cur_bitoff, UINT8* GeneralState );
L4BUFMANDLL_API void L4BUFMANDLL_BM_SetPreInitConfiguration_List_CURRENT_WatchDogTimerConfigComp_Reserved1_GET( UINT8* base_ptr, UINT32 diff, UINT32 cur_bitoff, UINT8* Reserved1 );
L4BUFMANDLL_API void L4BUFMANDLL_BM_SetPreInitConfiguration_List_CURRENT_WatchDogTimerConfigComp_Reserved2_GET( UINT8* base_ptr, UINT32 diff, UINT32 cur_bitoff, UINT16* Reserved2 );
L4BUFMANDLL_API void L4BUFMANDLL_BM_SetPreInitConfiguration_List_CURRENT_SlowClockConfigComp_GeneralState_GET( UINT8* base_ptr, UINT32 diff, UINT32 cur_bitoff, UINT8* GeneralState );
L4BUFMANDLL_API void L4BUFMANDLL_BM_SetPreInitConfiguration_List_CURRENT_SlowClockConfigComp_Reserved1_GET( UINT8* base_ptr, UINT32 diff, UINT32 cur_bitoff, UINT8* Reserved1 );
L4BUFMANDLL_API void L4BUFMANDLL_BM_SetPreInitConfiguration_List_CURRENT_SlowClockConfigComp_Reserved2_GET( UINT8* base_ptr, UINT32 diff, UINT32 cur_bitoff, UINT16* Reserved2 );
L4BUFMANDLL_API void L4BUFMANDLL_BM_SetPreInitConfiguration_List_CURRENT_SelectivePLIParametersConfigComp_EnableSelectivePLIs_GET( UINT8* base_ptr, UINT32 diff, UINT32 cur_bitoff, UINT8* EnableSelectivePLIs );
L4BUFMANDLL_API void L4BUFMANDLL_BM_SetPreInitConfiguration_List_CURRENT_SelectivePLIParametersConfigComp_DelayedSelectivePLI_GET( UINT8* base_ptr, UINT32 diff, UINT32 cur_bitoff, UINT8* DelayedSelectivePLI );
L4BUFMANDLL_API void L4BUFMANDLL_BM_SetPreInitConfiguration_List_CURRENT_SelectivePLIParametersConfigComp_ConsecutivePLIToReceive_GET( UINT8* base_ptr, UINT32 diff, UINT32 cur_bitoff, UINT8* ConsecutivePLIToReceive );
L4BUFMANDLL_API void L4BUFMANDLL_BM_SetPreInitConfiguration_List_CURRENT_SelectivePLIParametersConfigComp_Reserved1_GET( UINT8* base_ptr, UINT32 diff, UINT32 cur_bitoff, UINT8* Reserved1 );
L4BUFMANDLL_API void L4BUFMANDLL_BM_SetPreInitConfiguration_List_CURRENT_HarqParametersConfigComp_HarqCategory_GET( UINT8* base_ptr, UINT32 diff, UINT32 cur_bitoff, UINT8* HarqCategory );
L4BUFMANDLL_API void L4BUFMANDLL_BM_SetPreInitConfiguration_List_CURRENT_HarqParametersConfigComp_Reserved1_GET( UINT8* base_ptr, UINT32 diff, UINT32 cur_bitoff, UINT8* Reserved1 );
L4BUFMANDLL_API void L4BUFMANDLL_BM_SetPreInitConfiguration_List_CURRENT_HarqParametersConfigComp_Reserved2_GET( UINT8* base_ptr, UINT32 diff, UINT32 cur_bitoff, UINT16* Reserved2 );
L4BUFMANDLL_API void L4BUFMANDLL_BM_SetPreInitConfiguration_List_CURRENT_D2HDataFormatConfigComp_DataFormatMem_GET( UINT8* base_ptr, UINT32 diff, UINT32 cur_bitoff, DataFormat* DataFormatMem );
L4BUFMANDLL_API void L4BUFMANDLL_BM_SetPreInitConfiguration_List_CURRENT_D2HDataFormatConfigComp_Reserved1_GET( UINT8* base_ptr, UINT32 diff, UINT32 cur_bitoff, UINT8* Reserved1 );
L4BUFMANDLL_API void L4BUFMANDLL_BM_SetPreInitConfiguration_List_CURRENT_D2HDataFormatConfigComp_Reserved2_GET( UINT8* base_ptr, UINT32 diff, UINT32 cur_bitoff, UINT16* Reserved2 );
L4BUFMANDLL_API void L4BUFMANDLL_BM_SetPreInitConfiguration_List_CURRENT_DLHostReorderConfigComp_DLHostReorder_GET( UINT8* base_ptr, UINT32 diff, UINT32 cur_bitoff, UINT8* DLHostReorder );
L4BUFMANDLL_API void L4BUFMANDLL_BM_SetPreInitConfiguration_List_CURRENT_DLHostReorderConfigComp_Reserved1_GET( UINT8* base_ptr, UINT32 diff, UINT32 cur_bitoff, UINT8* Reserved1 );
L4BUFMANDLL_API void L4BUFMANDLL_BM_SetPreInitConfiguration_List_CURRENT_DLHostReorderConfigComp_Reserved2_GET( UINT8* base_ptr, UINT32 diff, UINT32 cur_bitoff, UINT16* Reserved2 );
L4BUFMANDLL_API void L4BUFMANDLL_BM_SetPreInitConfiguration_List_CURRENT_PaddingPerCSConfigComp_CSType_GET( UINT8* base_ptr, UINT32 diff, UINT32 cur_bitoff, UINT8* CSType );
L4BUFMANDLL_API void L4BUFMANDLL_BM_SetPreInitConfiguration_List_CURRENT_PaddingPerCSConfigComp_PaddingSize_GET( UINT8* base_ptr, UINT32 diff, UINT32 cur_bitoff, UINT8* PaddingSize );
L4BUFMANDLL_API void L4BUFMANDLL_BM_SetPreInitConfiguration_List_CURRENT_PaddingPerCSConfigComp_Reserved_GET( UINT8* base_ptr, UINT32 diff, UINT32 cur_bitoff, UINT16* Reserved );
L4BUFMANDLL_API void L4BUFMANDLL_BM_SetPreInitConfiguration_List_GET_NEXT( UINT8* base_ptr, UINT32 diff, UINT32 cur_bitoff, UINT32* out_diff, UINT32* out_cur_bitoff, UINT32 err );
L4BUFMANDLL_API void L4BUFMANDLL_BM_SetPreInitConfiguration_List_SET_TYPE( UINT8* base_ptr, UINT32 diff, UINT32 cur_bitoff, UINT32 type );
L4BUFMANDLL_API void L4BUFMANDLL_BM_SetPreInitConfiguration_List_SET_LENGTH( UINT8* base_ptr, UINT32 diff, UINT32 cur_bitoff, UINT32 lenOfLen, UINT32 length );
L4BUFMANDLL_API void L4BUFMANDLL_BM_SetPreInitConfiguration_List_CURRENT_PrivilegeKeyConfigComp_Key_value_SET( UINT8* base_ptr, UINT32 i0, UINT32 diff, UINT32 cur_bitoff, UINT8 value );
L4BUFMANDLL_API void L4BUFMANDLL_BM_SetPreInitConfiguration_List_CURRENT_LedOperationalConfigComp_NvmOverride_SET( UINT8* base_ptr, UINT32 diff, UINT32 cur_bitoff, UINT8 NvmOverride );
L4BUFMANDLL_API void L4BUFMANDLL_BM_SetPreInitConfiguration_List_CURRENT_LedOperationalConfigComp_ledBehavior_Led0Scheme_SET( UINT8* base_ptr, UINT32 i0, UINT32 diff, UINT32 cur_bitoff, UINT8 Led0Scheme );
L4BUFMANDLL_API void L4BUFMANDLL_BM_SetPreInitConfiguration_List_CURRENT_LedOperationalConfigComp_ledBehavior_Led1Scheme_SET( UINT8* base_ptr, UINT32 i0, UINT32 diff, UINT32 cur_bitoff, UINT8 Led1Scheme );
L4BUFMANDLL_API void L4BUFMANDLL_BM_SetPreInitConfiguration_List_CURRENT_LedOperationalConfigComp_powerSaveInfo_ledBlinkRate_onPeriod_SET( UINT8* base_ptr, UINT32 diff, UINT32 cur_bitoff, UINT8 onPeriod );
L4BUFMANDLL_API void L4BUFMANDLL_BM_SetPreInitConfiguration_List_CURRENT_LedOperationalConfigComp_powerSaveInfo_ledBlinkRate_offPeriod_SET( UINT8* base_ptr, UINT32 diff, UINT32 cur_bitoff, UINT8 offPeriod );
L4BUFMANDLL_API void L4BUFMANDLL_BM_SetPreInitConfiguration_List_CURRENT_LedOperationalConfigComp_powerSaveInfo_powerSaveMode_SET( UINT8* base_ptr, UINT32 diff, UINT32 cur_bitoff, UINT8 powerSaveMode );
L4BUFMANDLL_API void L4BUFMANDLL_BM_SetPreInitConfiguration_List_CURRENT_LedOperationalConfigComp_powerSaveInfo_ledTimeInterval_SET( UINT8* base_ptr, UINT32 diff, UINT32 cur_bitoff, UINT32 ledTimeInterval );
L4BUFMANDLL_API void L4BUFMANDLL_BM_SetPreInitConfiguration_List_CURRENT_LedOperationalConfigComp_numOfLeds_SET( UINT8* base_ptr, UINT32 diff, UINT32 cur_bitoff, UINT8 numOfLeds );
L4BUFMANDLL_API void L4BUFMANDLL_BM_SetPreInitConfiguration_List_CURRENT_LedOperationalConfigComp_blinkingRate_onPeriod_SET( UINT8* base_ptr, UINT32 i0, UINT32 diff, UINT32 cur_bitoff, UINT8 onPeriod );
L4BUFMANDLL_API void L4BUFMANDLL_BM_SetPreInitConfiguration_List_CURRENT_LedOperationalConfigComp_blinkingRate_offPeriod_SET( UINT8* base_ptr, UINT32 i0, UINT32 diff, UINT32 cur_bitoff, UINT8 offPeriod );
L4BUFMANDLL_API void L4BUFMANDLL_BM_SetPreInitConfiguration_List_CURRENT_LedOperationalConfigComp_reserved_SET( UINT8* base_ptr, UINT32 diff, UINT32 cur_bitoff, UINT8 reserved );
L4BUFMANDLL_API void L4BUFMANDLL_BM_SetPreInitConfiguration_List_CURRENT_LimitMaxTxPowerConfigComp_LimitMaxTxPower_SET( UINT8* base_ptr, UINT32 diff, UINT32 cur_bitoff, UINT32 LimitMaxTxPower );
L4BUFMANDLL_API void L4BUFMANDLL_BM_SetPreInitConfiguration_List_CURRENT_IdleParametersConfigComp_IdleTimeout_SET( UINT8* base_ptr, UINT32 diff, UINT32 cur_bitoff, UINT32 IdleTimeout );
L4BUFMANDLL_API void L4BUFMANDLL_BM_SetPreInitConfiguration_List_CURRENT_IdleParametersConfigComp_IdlePagingInterval_SET( UINT8* base_ptr, UINT32 diff, UINT32 cur_bitoff, UINT32 IdlePagingInterval );
L4BUFMANDLL_API void L4BUFMANDLL_BM_SetPreInitConfiguration_List_CURRENT_IdleParameterTimeoutConfigComp_IdleTimeout_SET( UINT8* base_ptr, UINT32 diff, UINT32 cur_bitoff, UINT32 IdleTimeout );
L4BUFMANDLL_API void L4BUFMANDLL_BM_SetPreInitConfiguration_List_CURRENT_IdleParameterPagingIntervalConfigComp_PagingInterval_SET( UINT8* base_ptr, UINT32 diff, UINT32 cur_bitoff, UINT32 PagingInterval );
L4BUFMANDLL_API void L4BUFMANDLL_BM_SetPreInitConfiguration_List_CURRENT_IdleParameterIdleEntrySuspendConfigComp_IdleEntrySuspend_SET( UINT8* base_ptr, UINT32 diff, UINT32 cur_bitoff, UINT32 IdleEntrySuspend );
L4BUFMANDLL_API void L4BUFMANDLL_BM_SetPreInitConfiguration_List_CURRENT_IdleParameterFullNeSuspendConfigComp_FullNeSuspend_SET( UINT8* base_ptr, UINT32 diff, UINT32 cur_bitoff, UINT32 FullNeSuspend );
L4BUFMANDLL_API void L4BUFMANDLL_BM_SetPreInitConfiguration_List_CURRENT_LinkDownTimerConfigComp_LinkDown_SET( UINT8* base_ptr, UINT32 diff, UINT32 cur_bitoff, UINT32 LinkDown );
L4BUFMANDLL_API void L4BUFMANDLL_BM_SetPreInitConfiguration_List_CURRENT_ArqSupportConfigComp_GeneralState_SET( UINT8* base_ptr, UINT32 diff, UINT32 cur_bitoff, UINT8 GeneralState );
L4BUFMANDLL_API void L4BUFMANDLL_BM_SetPreInitConfiguration_List_CURRENT_ArqSupportConfigComp_Reserved1_SET( UINT8* base_ptr, UINT32 diff, UINT32 cur_bitoff, UINT8 Reserved1 );
L4BUFMANDLL_API void L4BUFMANDLL_BM_SetPreInitConfiguration_List_CURRENT_ArqSupportConfigComp_Reserved2_SET( UINT8* base_ptr, UINT32 diff, UINT32 cur_bitoff, UINT16 Reserved2 );
L4BUFMANDLL_API void L4BUFMANDLL_BM_SetPreInitConfiguration_List_CURRENT_LoopBackConfigComp_OperationMode_SET( UINT8* base_ptr, UINT32 diff, UINT32 cur_bitoff, UINT8 OperationMode );
L4BUFMANDLL_API void L4BUFMANDLL_BM_SetPreInitConfiguration_List_CURRENT_LoopBackConfigComp_Reserved1_SET( UINT8* base_ptr, UINT32 diff, UINT32 cur_bitoff, UINT8 Reserved1 );
L4BUFMANDLL_API void L4BUFMANDLL_BM_SetPreInitConfiguration_List_CURRENT_LoopBackConfigComp_Reserved2_SET( UINT8* base_ptr, UINT32 diff, UINT32 cur_bitoff, UINT16 Reserved2 );
L4BUFMANDLL_API void L4BUFMANDLL_BM_SetPreInitConfiguration_List_CURRENT_ResetOnAssertConfigComp_GeneralState_SET( UINT8* base_ptr, UINT32 diff, UINT32 cur_bitoff, UINT8 GeneralState );
L4BUFMANDLL_API void L4BUFMANDLL_BM_SetPreInitConfiguration_List_CURRENT_ResetOnAssertConfigComp_Reserved1_SET( UINT8* base_ptr, UINT32 diff, UINT32 cur_bitoff, UINT8 Reserved1 );
L4BUFMANDLL_API void L4BUFMANDLL_BM_SetPreInitConfiguration_List_CURRENT_ResetOnAssertConfigComp_Reserved2_SET( UINT8* base_ptr, UINT32 diff, UINT32 cur_bitoff, UINT16 Reserved2 );
L4BUFMANDLL_API void L4BUFMANDLL_BM_SetPreInitConfiguration_List_CURRENT_WatchDogTimerConfigComp_GeneralState_SET( UINT8* base_ptr, UINT32 diff, UINT32 cur_bitoff, UINT8 GeneralState );
L4BUFMANDLL_API void L4BUFMANDLL_BM_SetPreInitConfiguration_List_CURRENT_WatchDogTimerConfigComp_Reserved1_SET( UINT8* base_ptr, UINT32 diff, UINT32 cur_bitoff, UINT8 Reserved1 );
L4BUFMANDLL_API void L4BUFMANDLL_BM_SetPreInitConfiguration_List_CURRENT_WatchDogTimerConfigComp_Reserved2_SET( UINT8* base_ptr, UINT32 diff, UINT32 cur_bitoff, UINT16 Reserved2 );
L4BUFMANDLL_API void L4BUFMANDLL_BM_SetPreInitConfiguration_List_CURRENT_SlowClockConfigComp_GeneralState_SET( UINT8* base_ptr, UINT32 diff, UINT32 cur_bitoff, UINT8 GeneralState );
L4BUFMANDLL_API void L4BUFMANDLL_BM_SetPreInitConfiguration_List_CURRENT_SlowClockConfigComp_Reserved1_SET( UINT8* base_ptr, UINT32 diff, UINT32 cur_bitoff, UINT8 Reserved1 );
L4BUFMANDLL_API void L4BUFMANDLL_BM_SetPreInitConfiguration_List_CURRENT_SlowClockConfigComp_Reserved2_SET( UINT8* base_ptr, UINT32 diff, UINT32 cur_bitoff, UINT16 Reserved2 );
L4BUFMANDLL_API void L4BUFMANDLL_BM_SetPreInitConfiguration_List_CURRENT_SelectivePLIParametersConfigComp_EnableSelectivePLIs_SET( UINT8* base_ptr, UINT32 diff, UINT32 cur_bitoff, UINT8 EnableSelectivePLIs );
L4BUFMANDLL_API void L4BUFMANDLL_BM_SetPreInitConfiguration_List_CURRENT_SelectivePLIParametersConfigComp_DelayedSelectivePLI_SET( UINT8* base_ptr, UINT32 diff, UINT32 cur_bitoff, UINT8 DelayedSelectivePLI );
L4BUFMANDLL_API void L4BUFMANDLL_BM_SetPreInitConfiguration_List_CURRENT_SelectivePLIParametersConfigComp_ConsecutivePLIToReceive_SET( UINT8* base_ptr, UINT32 diff, UINT32 cur_bitoff, UINT8 ConsecutivePLIToReceive );
L4BUFMANDLL_API void L4BUFMANDLL_BM_SetPreInitConfiguration_List_CURRENT_SelectivePLIParametersConfigComp_Reserved1_SET( UINT8* base_ptr, UINT32 diff, UINT32 cur_bitoff, UINT8 Reserved1 );
L4BUFMANDLL_API void L4BUFMANDLL_BM_SetPreInitConfiguration_List_CURRENT_HarqParametersConfigComp_HarqCategory_SET( UINT8* base_ptr, UINT32 diff, UINT32 cur_bitoff, UINT8 HarqCategory );
L4BUFMANDLL_API void L4BUFMANDLL_BM_SetPreInitConfiguration_List_CURRENT_HarqParametersConfigComp_Reserved1_SET( UINT8* base_ptr, UINT32 diff, UINT32 cur_bitoff, UINT8 Reserved1 );
L4BUFMANDLL_API void L4BUFMANDLL_BM_SetPreInitConfiguration_List_CURRENT_HarqParametersConfigComp_Reserved2_SET( UINT8* base_ptr, UINT32 diff, UINT32 cur_bitoff, UINT16 Reserved2 );
L4BUFMANDLL_API void L4BUFMANDLL_BM_SetPreInitConfiguration_List_CURRENT_D2HDataFormatConfigComp_DataFormatMem_SET( UINT8* base_ptr, UINT32 diff, UINT32 cur_bitoff, DataFormat DataFormatMem );
L4BUFMANDLL_API void L4BUFMANDLL_BM_SetPreInitConfiguration_List_CURRENT_D2HDataFormatConfigComp_Reserved1_SET( UINT8* base_ptr, UINT32 diff, UINT32 cur_bitoff, UINT8 Reserved1 );
L4BUFMANDLL_API void L4BUFMANDLL_BM_SetPreInitConfiguration_List_CURRENT_D2HDataFormatConfigComp_Reserved2_SET( UINT8* base_ptr, UINT32 diff, UINT32 cur_bitoff, UINT16 Reserved2 );
L4BUFMANDLL_API void L4BUFMANDLL_BM_SetPreInitConfiguration_List_CURRENT_DLHostReorderConfigComp_DLHostReorder_SET( UINT8* base_ptr, UINT32 diff, UINT32 cur_bitoff, UINT8 DLHostReorder );
L4BUFMANDLL_API void L4BUFMANDLL_BM_SetPreInitConfiguration_List_CURRENT_DLHostReorderConfigComp_Reserved1_SET( UINT8* base_ptr, UINT32 diff, UINT32 cur_bitoff, UINT8 Reserved1 );
L4BUFMANDLL_API void L4BUFMANDLL_BM_SetPreInitConfiguration_List_CURRENT_DLHostReorderConfigComp_Reserved2_SET( UINT8* base_ptr, UINT32 diff, UINT32 cur_bitoff, UINT16 Reserved2 );
L4BUFMANDLL_API void L4BUFMANDLL_BM_SetPreInitConfiguration_List_CURRENT_PaddingPerCSConfigComp_CSType_SET( UINT8* base_ptr, UINT32 diff, UINT32 cur_bitoff, UINT8 CSType );
L4BUFMANDLL_API void L4BUFMANDLL_BM_SetPreInitConfiguration_List_CURRENT_PaddingPerCSConfigComp_PaddingSize_SET( UINT8* base_ptr, UINT32 diff, UINT32 cur_bitoff, UINT8 PaddingSize );
L4BUFMANDLL_API void L4BUFMANDLL_BM_SetPreInitConfiguration_List_CURRENT_PaddingPerCSConfigComp_Reserved_SET( UINT8* base_ptr, UINT32 diff, UINT32 cur_bitoff, UINT16 Reserved );
L4BUFMANDLL_API void L4BUFMANDLL_BM_SetPreInitConfiguration_Header_Type_SET( UINT8* base_ptr, UINT32 opcode );
L4BUFMANDLL_API void L4BUFMANDLL_BM_SetPreInitConfiguration_Header_Version_SET( UINT8* base_ptr, UINT16 version );
L4BUFMANDLL_API void L4BUFMANDLL_BM_SetPreInitConfiguration_Header_Accessibility_SET( UINT8* base_ptr, UINT16 accessibility );
L4BUFMANDLL_API void L4BUFMANDLL_BM_SetPreInitConfiguration_Header_Status_SET( UINT8* base_ptr, UINT16 status );
L4BUFMANDLL_API void L4BUFMANDLL_BM_SetPreInitConfiguration_Header_Length_SET( UINT8* base_ptr, UINT32 len );
L4BUFMANDLL_API void L4BUFMANDLL_BM_CheckL3L4InterfaceGET_Header_Version_GET( UINT8* base_ptr, UINT16* version );
L4BUFMANDLL_API void L4BUFMANDLL_BM_CheckL3L4InterfaceGET_Header_Accessibility_GET( UINT8* base_ptr, UINT16* accessibility );
L4BUFMANDLL_API void L4BUFMANDLL_BM_CheckL3L4InterfaceGET_Header_Status_GET( UINT8* base_ptr, UINT16* status );
L4BUFMANDLL_API void L4BUFMANDLL_BM_CheckL3L4InterfaceGET_Header_Length_GET( UINT8* base_ptr, UINT32* listSize );
L4BUFMANDLL_API void L4BUFMANDLL_BM_CheckL3L4InterfaceGET_List_GET_FIRST( UINT8* base_ptr, UINT32* out_diff, UINT32* out_cur_bitoff );
L4BUFMANDLL_API void L4BUFMANDLL_BM_CheckL3L4InterfaceGET_List_GET_TYPE( UINT8* base_ptr, UINT32 diff, UINT32 cur_bitoff, UINT32* type );
L4BUFMANDLL_API void L4BUFMANDLL_BM_CheckL3L4InterfaceGET_List_GET_LENGTH( UINT8* base_ptr, UINT32 diff, UINT32 cur_bitoff, UINT32* out_length, UINT32 err );
L4BUFMANDLL_API void L4BUFMANDLL_BM_CheckL3L4InterfaceGET_List_CURRENT_value_value_GET( UINT8* base_ptr, UINT32 diff, UINT32 cur_bitoff, UINT32* value );
L4BUFMANDLL_API void L4BUFMANDLL_BM_CheckL3L4InterfaceGET_List_GET_NEXT( UINT8* base_ptr, UINT32 diff, UINT32 cur_bitoff, UINT32* out_diff, UINT32* out_cur_bitoff, UINT32 err );
L4BUFMANDLL_API void L4BUFMANDLL_BM_CheckL3L4InterfaceGET_List_SET_TYPE( UINT8* base_ptr, UINT32 diff, UINT32 cur_bitoff, UINT32 type );
L4BUFMANDLL_API void L4BUFMANDLL_BM_CheckL3L4InterfaceGET_List_SET_LENGTH( UINT8* base_ptr, UINT32 diff, UINT32 cur_bitoff, UINT32 lenOfLen, UINT32 length );
L4BUFMANDLL_API void L4BUFMANDLL_BM_CheckL3L4InterfaceGET_List_CURRENT_value_value_SET( UINT8* base_ptr, UINT32 diff, UINT32 cur_bitoff, UINT32 value );
L4BUFMANDLL_API void L4BUFMANDLL_BM_CheckL3L4InterfaceGET_Header_Type_SET( UINT8* base_ptr, UINT32 opcode );
L4BUFMANDLL_API void L4BUFMANDLL_BM_CheckL3L4InterfaceGET_Header_Version_SET( UINT8* base_ptr, UINT16 version );
L4BUFMANDLL_API void L4BUFMANDLL_BM_CheckL3L4InterfaceGET_Header_Accessibility_SET( UINT8* base_ptr, UINT16 accessibility );
L4BUFMANDLL_API void L4BUFMANDLL_BM_CheckL3L4InterfaceGET_Header_Status_SET( UINT8* base_ptr, UINT16 status );
L4BUFMANDLL_API void L4BUFMANDLL_BM_CheckL3L4InterfaceGET_Header_Length_SET( UINT8* base_ptr, UINT32 len );
L4BUFMANDLL_API void L4BUFMANDLL_BM_ReportSII_Header_Version_GET( UINT8* base_ptr, UINT16* version );
L4BUFMANDLL_API void L4BUFMANDLL_BM_ReportSII_Header_Accessibility_GET( UINT8* base_ptr, UINT16* accessibility );
L4BUFMANDLL_API void L4BUFMANDLL_BM_ReportSII_Header_Status_GET( UINT8* base_ptr, UINT16* status );
L4BUFMANDLL_API void L4BUFMANDLL_BM_ReportSII_Header_Length_GET( UINT8* base_ptr, UINT32* listSize );
L4BUFMANDLL_API void L4BUFMANDLL_BM_ReportSII_List_GET_FIRST( UINT8* base_ptr, UINT32* out_diff, UINT32* out_cur_bitoff );
L4BUFMANDLL_API void L4BUFMANDLL_BM_ReportSII_List_GET_TYPE( UINT8* base_ptr, UINT32 diff, UINT32 cur_bitoff, UINT32* type );
L4BUFMANDLL_API void L4BUFMANDLL_BM_ReportSII_List_GET_LENGTH( UINT8* base_ptr, UINT32 diff, UINT32 cur_bitoff, UINT32* out_length, UINT32 err );
L4BUFMANDLL_API void L4BUFMANDLL_BM_ReportSII_List_CURRENT_NSPIDList_NspIdListLength_GET( UINT8* base_ptr, UINT32 diff, UINT32 cur_bitoff, UINT32* NspIdListLength );
L4BUFMANDLL_API void L4BUFMANDLL_BM_ReportSII_List_CURRENT_NSPIDList_NspIdListData_value_GET( UINT8* base_ptr, UINT32 i0, UINT32 diff, UINT32 cur_bitoff, UINT8* value );
L4BUFMANDLL_API void L4BUFMANDLL_BM_ReportSII_List_CURRENT_NSPVerboseNameList_NspVerboseListLength_GET( UINT8* base_ptr, UINT32 diff, UINT32 cur_bitoff, UINT32* NspVerboseListLength );
L4BUFMANDLL_API void L4BUFMANDLL_BM_ReportSII_List_CURRENT_NSPVerboseNameList_NspVerboseListData_value_GET( UINT8* base_ptr, UINT32 i0, UINT32 diff, UINT32 cur_bitoff, UINT8* value );
L4BUFMANDLL_API void L4BUFMANDLL_BM_ReportSII_List_CURRENT_Realm_RealmLength_GET( UINT8* base_ptr, UINT32 diff, UINT32 cur_bitoff, UINT32* RealmLength );
L4BUFMANDLL_API void L4BUFMANDLL_BM_ReportSII_List_CURRENT_Realm_RealmData_value_GET( UINT8* base_ptr, UINT32 i0, UINT32 diff, UINT32 cur_bitoff, UINT8* value );
L4BUFMANDLL_API void L4BUFMANDLL_BM_ReportSII_List_GET_NEXT( UINT8* base_ptr, UINT32 diff, UINT32 cur_bitoff, UINT32* out_diff, UINT32* out_cur_bitoff, UINT32 err );
L4BUFMANDLL_API void L4BUFMANDLL_BM_ReportSII_List_SET_TYPE( UINT8* base_ptr, UINT32 diff, UINT32 cur_bitoff, UINT32 type );
L4BUFMANDLL_API void L4BUFMANDLL_BM_ReportSII_List_SET_LENGTH( UINT8* base_ptr, UINT32 diff, UINT32 cur_bitoff, UINT32 lenOfLen, UINT32 length );
L4BUFMANDLL_API void L4BUFMANDLL_BM_ReportSII_List_CURRENT_NSPIDList_NspIdListLength_SET( UINT8* base_ptr, UINT32 diff, UINT32 cur_bitoff, UINT32 NspIdListLength );
L4BUFMANDLL_API void L4BUFMANDLL_BM_ReportSII_List_CURRENT_NSPIDList_NspIdListData_value_SET( UINT8* base_ptr, UINT32 i0, UINT32 diff, UINT32 cur_bitoff, UINT8 value );
L4BUFMANDLL_API void L4BUFMANDLL_BM_ReportSII_List_CURRENT_NSPVerboseNameList_NspVerboseListLength_SET( UINT8* base_ptr, UINT32 diff, UINT32 cur_bitoff, UINT32 NspVerboseListLength );
L4BUFMANDLL_API void L4BUFMANDLL_BM_ReportSII_List_CURRENT_NSPVerboseNameList_NspVerboseListData_value_SET( UINT8* base_ptr, UINT32 i0, UINT32 diff, UINT32 cur_bitoff, UINT8 value );
L4BUFMANDLL_API void L4BUFMANDLL_BM_ReportSII_List_CURRENT_Realm_RealmLength_SET( UINT8* base_ptr, UINT32 diff, UINT32 cur_bitoff, UINT32 RealmLength );
L4BUFMANDLL_API void L4BUFMANDLL_BM_ReportSII_List_CURRENT_Realm_RealmData_value_SET( UINT8* base_ptr, UINT32 i0, UINT32 diff, UINT32 cur_bitoff, UINT8 value );
L4BUFMANDLL_API void L4BUFMANDLL_BM_ReportSII_Header_Type_SET( UINT8* base_ptr, UINT32 opcode );
L4BUFMANDLL_API void L4BUFMANDLL_BM_ReportSII_Header_Version_SET( UINT8* base_ptr, UINT16 version );
L4BUFMANDLL_API void L4BUFMANDLL_BM_ReportSII_Header_Accessibility_SET( UINT8* base_ptr, UINT16 accessibility );
L4BUFMANDLL_API void L4BUFMANDLL_BM_ReportSII_Header_Status_SET( UINT8* base_ptr, UINT16 status );
L4BUFMANDLL_API void L4BUFMANDLL_BM_ReportSII_Header_Length_SET( UINT8* base_ptr, UINT32 len );
L4BUFMANDLL_API void L4BUFMANDLL_BM_TerminateCommand_Header_Version_GET( UINT8* base_ptr, UINT16* version );
L4BUFMANDLL_API void L4BUFMANDLL_BM_TerminateCommand_Header_Accessibility_GET( UINT8* base_ptr, UINT16* accessibility );
L4BUFMANDLL_API void L4BUFMANDLL_BM_TerminateCommand_Header_Status_GET( UINT8* base_ptr, UINT16* status );
L4BUFMANDLL_API void L4BUFMANDLL_BM_TerminateCommand_Header_Type_SET( UINT8* base_ptr, UINT32 opcode );
L4BUFMANDLL_API void L4BUFMANDLL_BM_TerminateCommand_Header_Version_SET( UINT8* base_ptr, UINT16 version );
L4BUFMANDLL_API void L4BUFMANDLL_BM_TerminateCommand_Header_Accessibility_SET( UINT8* base_ptr, UINT16 accessibility );
L4BUFMANDLL_API void L4BUFMANDLL_BM_TerminateCommand_Header_Status_SET( UINT8* base_ptr, UINT16 status );
L4BUFMANDLL_API void L4BUFMANDLL_BM_TerminateCommand_Header_Length_SET( UINT8* base_ptr, UINT32 len );
L4BUFMANDLL_API void L4BUFMANDLL_BM_ReadyForPowerSave_Header_Version_GET( UINT8* base_ptr, UINT16* version );
L4BUFMANDLL_API void L4BUFMANDLL_BM_ReadyForPowerSave_Header_Accessibility_GET( UINT8* base_ptr, UINT16* accessibility );
L4BUFMANDLL_API void L4BUFMANDLL_BM_ReadyForPowerSave_Header_Status_GET( UINT8* base_ptr, UINT16* status );
L4BUFMANDLL_API void L4BUFMANDLL_BM_ReadyForPowerSave_Header_Type_SET( UINT8* base_ptr, UINT32 opcode );
L4BUFMANDLL_API void L4BUFMANDLL_BM_ReadyForPowerSave_Header_Version_SET( UINT8* base_ptr, UINT16 version );
L4BUFMANDLL_API void L4BUFMANDLL_BM_ReadyForPowerSave_Header_Accessibility_SET( UINT8* base_ptr, UINT16 accessibility );
L4BUFMANDLL_API void L4BUFMANDLL_BM_ReadyForPowerSave_Header_Status_SET( UINT8* base_ptr, UINT16 status );
L4BUFMANDLL_API void L4BUFMANDLL_BM_ReadyForPowerSave_Header_Length_SET( UINT8* base_ptr, UINT32 len );
L4BUFMANDLL_API void L4BUFMANDLL_BM_Disconnect_Header_Version_GET( UINT8* base_ptr, UINT16* version );
L4BUFMANDLL_API void L4BUFMANDLL_BM_Disconnect_Header_Accessibility_GET( UINT8* base_ptr, UINT16* accessibility );
L4BUFMANDLL_API void L4BUFMANDLL_BM_Disconnect_Header_Status_GET( UINT8* base_ptr, UINT16* status );
L4BUFMANDLL_API void L4BUFMANDLL_BM_Disconnect_Header_Type_SET( UINT8* base_ptr, UINT32 opcode );
L4BUFMANDLL_API void L4BUFMANDLL_BM_Disconnect_Header_Version_SET( UINT8* base_ptr, UINT16 version );
L4BUFMANDLL_API void L4BUFMANDLL_BM_Disconnect_Header_Accessibility_SET( UINT8* base_ptr, UINT16 accessibility );
L4BUFMANDLL_API void L4BUFMANDLL_BM_Disconnect_Header_Status_SET( UINT8* base_ptr, UINT16 status );
L4BUFMANDLL_API void L4BUFMANDLL_BM_Disconnect_Header_Length_SET( UINT8* base_ptr, UINT32 len );
L4BUFMANDLL_API void L4BUFMANDLL_BM_Connect_Header_Version_GET( UINT8* base_ptr, UINT16* version );
L4BUFMANDLL_API void L4BUFMANDLL_BM_Connect_Header_Accessibility_GET( UINT8* base_ptr, UINT16* accessibility );
L4BUFMANDLL_API void L4BUFMANDLL_BM_Connect_Header_Status_GET( UINT8* base_ptr, UINT16* status );
L4BUFMANDLL_API void L4BUFMANDLL_BM_Connect_Header_Length_GET( UINT8* base_ptr, UINT32* listSize );
L4BUFMANDLL_API void L4BUFMANDLL_BM_Connect_List_GET_FIRST( UINT8* base_ptr, UINT32* out_diff, UINT32* out_cur_bitoff );
L4BUFMANDLL_API void L4BUFMANDLL_BM_Connect_List_GET_TYPE( UINT8* base_ptr, UINT32 diff, UINT32 cur_bitoff, UINT32* type );
L4BUFMANDLL_API void L4BUFMANDLL_BM_Connect_List_GET_LENGTH( UINT8* base_ptr, UINT32 diff, UINT32 cur_bitoff, UINT32* out_length, UINT32 err );
L4BUFMANDLL_API void L4BUFMANDLL_BM_Connect_List_CURRENT_BSCritieria_BSID_Criterion_value_GET( UINT8* base_ptr, UINT32 i0, UINT32 diff, UINT32 cur_bitoff, UINT8* value );
L4BUFMANDLL_API void L4BUFMANDLL_BM_Connect_List_CURRENT_BSCritieria_BSID_Criterion_Mask_value_GET( UINT8* base_ptr, UINT32 i0, UINT32 diff, UINT32 cur_bitoff, UINT8* value );
L4BUFMANDLL_API void L4BUFMANDLL_BM_Connect_List_CURRENT_THCriteria_RssiTH_GET( UINT8* base_ptr, UINT32 diff, UINT32 cur_bitoff, UINT32* RssiTH );
L4BUFMANDLL_API void L4BUFMANDLL_BM_Connect_List_CURRENT_THCriteria_CinrTH_GET( UINT8* base_ptr, UINT32 diff, UINT32 cur_bitoff, UINT32* CinrTH );
L4BUFMANDLL_API void L4BUFMANDLL_BM_Connect_List_CURRENT_ConnectionMode_value_GET( UINT8* base_ptr, UINT32 diff, UINT32 cur_bitoff, UINT32* value );
L4BUFMANDLL_API void L4BUFMANDLL_BM_Connect_List_CURRENT_ConnectFlags_VisitedNspId_GET( UINT8* base_ptr, UINT32 diff, UINT32 cur_bitoff, UINT32* VisitedNspId );
L4BUFMANDLL_API void L4BUFMANDLL_BM_Connect_List_CURRENT_ConnectFlags_RequestRealm_GET( UINT8* base_ptr, UINT32 diff, UINT32 cur_bitoff, UINT8* RequestRealm );
L4BUFMANDLL_API void L4BUFMANDLL_BM_Connect_List_CURRENT_ConnectFlags_SIQ_GET( UINT8* base_ptr, UINT32 diff, UINT32 cur_bitoff, UINT8* SIQ );
L4BUFMANDLL_API void L4BUFMANDLL_BM_Connect_List_CURRENT_ConnectFlags_Reserved1_GET( UINT8* base_ptr, UINT32 diff, UINT32 cur_bitoff, UINT8* Reserved1 );
L4BUFMANDLL_API void L4BUFMANDLL_BM_Connect_List_CURRENT_ConnectFlags_Reserved2_GET( UINT8* base_ptr, UINT32 diff, UINT32 cur_bitoff, UINT8* Reserved2 );
L4BUFMANDLL_API void L4BUFMANDLL_BM_Connect_List_CURRENT_CoexPriority_value_GET( UINT8* base_ptr, UINT32 diff, UINT32 cur_bitoff, UINT32* value );
L4BUFMANDLL_API void L4BUFMANDLL_BM_Connect_List_GET_NEXT( UINT8* base_ptr, UINT32 diff, UINT32 cur_bitoff, UINT32* out_diff, UINT32* out_cur_bitoff, UINT32 err );
L4BUFMANDLL_API void L4BUFMANDLL_BM_Connect_List_SET_TYPE( UINT8* base_ptr, UINT32 diff, UINT32 cur_bitoff, UINT32 type );
L4BUFMANDLL_API void L4BUFMANDLL_BM_Connect_List_SET_LENGTH( UINT8* base_ptr, UINT32 diff, UINT32 cur_bitoff, UINT32 lenOfLen, UINT32 length );
L4BUFMANDLL_API void L4BUFMANDLL_BM_Connect_List_CURRENT_BSCritieria_BSID_Criterion_value_SET( UINT8* base_ptr, UINT32 i0, UINT32 diff, UINT32 cur_bitoff, UINT8 value );
L4BUFMANDLL_API void L4BUFMANDLL_BM_Connect_List_CURRENT_BSCritieria_BSID_Criterion_Mask_value_SET( UINT8* base_ptr, UINT32 i0, UINT32 diff, UINT32 cur_bitoff, UINT8 value );
L4BUFMANDLL_API void L4BUFMANDLL_BM_Connect_List_CURRENT_THCriteria_RssiTH_SET( UINT8* base_ptr, UINT32 diff, UINT32 cur_bitoff, UINT32 RssiTH );
L4BUFMANDLL_API void L4BUFMANDLL_BM_Connect_List_CURRENT_THCriteria_CinrTH_SET( UINT8* base_ptr, UINT32 diff, UINT32 cur_bitoff, UINT32 CinrTH );
L4BUFMANDLL_API void L4BUFMANDLL_BM_Connect_List_CURRENT_ConnectionMode_value_SET( UINT8* base_ptr, UINT32 diff, UINT32 cur_bitoff, UINT32 value );
L4BUFMANDLL_API void L4BUFMANDLL_BM_Connect_List_CURRENT_ConnectFlags_VisitedNspId_SET( UINT8* base_ptr, UINT32 diff, UINT32 cur_bitoff, UINT32 VisitedNspId );
L4BUFMANDLL_API void L4BUFMANDLL_BM_Connect_List_CURRENT_ConnectFlags_RequestRealm_SET( UINT8* base_ptr, UINT32 diff, UINT32 cur_bitoff, UINT8 RequestRealm );
L4BUFMANDLL_API void L4BUFMANDLL_BM_Connect_List_CURRENT_ConnectFlags_SIQ_SET( UINT8* base_ptr, UINT32 diff, UINT32 cur_bitoff, UINT8 SIQ );
L4BUFMANDLL_API void L4BUFMANDLL_BM_Connect_List_CURRENT_ConnectFlags_Reserved1_SET( UINT8* base_ptr, UINT32 diff, UINT32 cur_bitoff, UINT8 Reserved1 );
L4BUFMANDLL_API void L4BUFMANDLL_BM_Connect_List_CURRENT_ConnectFlags_Reserved2_SET( UINT8* base_ptr, UINT32 diff, UINT32 cur_bitoff, UINT8 Reserved2 );
L4BUFMANDLL_API void L4BUFMANDLL_BM_Connect_List_CURRENT_CoexPriority_value_SET( UINT8* base_ptr, UINT32 diff, UINT32 cur_bitoff, UINT32 value );
L4BUFMANDLL_API void L4BUFMANDLL_BM_Connect_Header_Type_SET( UINT8* base_ptr, UINT32 opcode );
L4BUFMANDLL_API void L4BUFMANDLL_BM_Connect_Header_Version_SET( UINT8* base_ptr, UINT16 version );
L4BUFMANDLL_API void L4BUFMANDLL_BM_Connect_Header_Accessibility_SET( UINT8* base_ptr, UINT16 accessibility );
L4BUFMANDLL_API void L4BUFMANDLL_BM_Connect_Header_Status_SET( UINT8* base_ptr, UINT16 status );
L4BUFMANDLL_API void L4BUFMANDLL_BM_Connect_Header_Length_SET( UINT8* base_ptr, UINT32 len );
L4BUFMANDLL_API void L4BUFMANDLL_BM_CmdCoexProcessStart_Header_Version_GET( UINT8* base_ptr, UINT16* version );
L4BUFMANDLL_API void L4BUFMANDLL_BM_CmdCoexProcessStart_Header_Accessibility_GET( UINT8* base_ptr, UINT16* accessibility );
L4BUFMANDLL_API void L4BUFMANDLL_BM_CmdCoexProcessStart_Header_Status_GET( UINT8* base_ptr, UINT16* status );
L4BUFMANDLL_API void L4BUFMANDLL_BM_CmdCoexProcessStart_Header_Length_GET( UINT8* base_ptr, UINT32* listSize );
L4BUFMANDLL_API void L4BUFMANDLL_BM_CmdCoexProcessStart_List_GET_FIRST( UINT8* base_ptr, UINT32* out_diff, UINT32* out_cur_bitoff );
L4BUFMANDLL_API void L4BUFMANDLL_BM_CmdCoexProcessStart_List_GET_TYPE( UINT8* base_ptr, UINT32 diff, UINT32 cur_bitoff, UINT32* type );
L4BUFMANDLL_API void L4BUFMANDLL_BM_CmdCoexProcessStart_List_GET_LENGTH( UINT8* base_ptr, UINT32 diff, UINT32 cur_bitoff, UINT32* out_length, UINT32 err );
L4BUFMANDLL_API void L4BUFMANDLL_BM_CmdCoexProcessStart_List_CURRENT_ProcessType_State_GET( UINT8* base_ptr, UINT32 diff, UINT32 cur_bitoff, UINT32* State );
L4BUFMANDLL_API void L4BUFMANDLL_BM_CmdCoexProcessStart_List_GET_NEXT( UINT8* base_ptr, UINT32 diff, UINT32 cur_bitoff, UINT32* out_diff, UINT32* out_cur_bitoff, UINT32 err );
L4BUFMANDLL_API void L4BUFMANDLL_BM_CmdCoexProcessStart_List_SET_TYPE( UINT8* base_ptr, UINT32 diff, UINT32 cur_bitoff, UINT32 type );
L4BUFMANDLL_API void L4BUFMANDLL_BM_CmdCoexProcessStart_List_SET_LENGTH( UINT8* base_ptr, UINT32 diff, UINT32 cur_bitoff, UINT32 lenOfLen, UINT32 length );
L4BUFMANDLL_API void L4BUFMANDLL_BM_CmdCoexProcessStart_List_CURRENT_ProcessType_State_SET( UINT8* base_ptr, UINT32 diff, UINT32 cur_bitoff, UINT32 State );
L4BUFMANDLL_API void L4BUFMANDLL_BM_CmdCoexProcessStart_Header_Type_SET( UINT8* base_ptr, UINT32 opcode );
L4BUFMANDLL_API void L4BUFMANDLL_BM_CmdCoexProcessStart_Header_Version_SET( UINT8* base_ptr, UINT16 version );
L4BUFMANDLL_API void L4BUFMANDLL_BM_CmdCoexProcessStart_Header_Accessibility_SET( UINT8* base_ptr, UINT16 accessibility );
L4BUFMANDLL_API void L4BUFMANDLL_BM_CmdCoexProcessStart_Header_Status_SET( UINT8* base_ptr, UINT16 status );
L4BUFMANDLL_API void L4BUFMANDLL_BM_CmdCoexProcessStart_Header_Length_SET( UINT8* base_ptr, UINT32 len );
L4BUFMANDLL_API void L4BUFMANDLL_BM_InitCommand_Header_Version_GET( UINT8* base_ptr, UINT16* version );
L4BUFMANDLL_API void L4BUFMANDLL_BM_InitCommand_Header_Accessibility_GET( UINT8* base_ptr, UINT16* accessibility );
L4BUFMANDLL_API void L4BUFMANDLL_BM_InitCommand_Header_Status_GET( UINT8* base_ptr, UINT16* status );
L4BUFMANDLL_API void L4BUFMANDLL_BM_InitCommand_Header_Type_SET( UINT8* base_ptr, UINT32 opcode );
L4BUFMANDLL_API void L4BUFMANDLL_BM_InitCommand_Header_Version_SET( UINT8* base_ptr, UINT16 version );
L4BUFMANDLL_API void L4BUFMANDLL_BM_InitCommand_Header_Accessibility_SET( UINT8* base_ptr, UINT16 accessibility );
L4BUFMANDLL_API void L4BUFMANDLL_BM_InitCommand_Header_Status_SET( UINT8* base_ptr, UINT16 status );
L4BUFMANDLL_API void L4BUFMANDLL_BM_InitCommand_Header_Length_SET( UINT8* base_ptr, UINT32 len );
L4BUFMANDLL_API void L4BUFMANDLL_BM_SetEapKey_Header_Version_GET( UINT8* base_ptr, UINT16* version );
L4BUFMANDLL_API void L4BUFMANDLL_BM_SetEapKey_Header_Accessibility_GET( UINT8* base_ptr, UINT16* accessibility );
L4BUFMANDLL_API void L4BUFMANDLL_BM_SetEapKey_Header_Status_GET( UINT8* base_ptr, UINT16* status );
L4BUFMANDLL_API void L4BUFMANDLL_BM_SetEapKey_Header_Length_GET( UINT8* base_ptr, UINT32* listSize );
L4BUFMANDLL_API void L4BUFMANDLL_BM_SetEapKey_List_GET_FIRST( UINT8* base_ptr, UINT32* out_diff, UINT32* out_cur_bitoff );
L4BUFMANDLL_API void L4BUFMANDLL_BM_SetEapKey_List_GET_TYPE( UINT8* base_ptr, UINT32 diff, UINT32 cur_bitoff, UINT32* type );
L4BUFMANDLL_API void L4BUFMANDLL_BM_SetEapKey_List_GET_LENGTH( UINT8* base_ptr, UINT32 diff, UINT32 cur_bitoff, UINT32* out_length, UINT32 err );
L4BUFMANDLL_API void L4BUFMANDLL_BM_SetEapKey_List_CURRENT_EapKeyValid_value_GET( UINT8* base_ptr, UINT32 diff, UINT32 cur_bitoff, UINT32* value );
L4BUFMANDLL_API void L4BUFMANDLL_BM_SetEapKey_List_CURRENT_EapKeyMsk_EapKeyMskArr_value_GET( UINT8* base_ptr, UINT32 i0, UINT32 diff, UINT32 cur_bitoff, UINT8* value );
L4BUFMANDLL_API void L4BUFMANDLL_BM_SetEapKey_List_GET_NEXT( UINT8* base_ptr, UINT32 diff, UINT32 cur_bitoff, UINT32* out_diff, UINT32* out_cur_bitoff, UINT32 err );
L4BUFMANDLL_API void L4BUFMANDLL_BM_SetEapKey_List_SET_TYPE( UINT8* base_ptr, UINT32 diff, UINT32 cur_bitoff, UINT32 type );
L4BUFMANDLL_API void L4BUFMANDLL_BM_SetEapKey_List_SET_LENGTH( UINT8* base_ptr, UINT32 diff, UINT32 cur_bitoff, UINT32 lenOfLen, UINT32 length );
L4BUFMANDLL_API void L4BUFMANDLL_BM_SetEapKey_List_CURRENT_EapKeyValid_value_SET( UINT8* base_ptr, UINT32 diff, UINT32 cur_bitoff, UINT32 value );
L4BUFMANDLL_API void L4BUFMANDLL_BM_SetEapKey_List_CURRENT_EapKeyMsk_EapKeyMskArr_value_SET( UINT8* base_ptr, UINT32 i0, UINT32 diff, UINT32 cur_bitoff, UINT8 value );
L4BUFMANDLL_API void L4BUFMANDLL_BM_SetEapKey_Header_Type_SET( UINT8* base_ptr, UINT32 opcode );
L4BUFMANDLL_API void L4BUFMANDLL_BM_SetEapKey_Header_Version_SET( UINT8* base_ptr, UINT16 version );
L4BUFMANDLL_API void L4BUFMANDLL_BM_SetEapKey_Header_Accessibility_SET( UINT8* base_ptr, UINT16 accessibility );
L4BUFMANDLL_API void L4BUFMANDLL_BM_SetEapKey_Header_Status_SET( UINT8* base_ptr, UINT16 status );
L4BUFMANDLL_API void L4BUFMANDLL_BM_SetEapKey_Header_Length_SET( UINT8* base_ptr, UINT32 len );
L4BUFMANDLL_API void L4BUFMANDLL_BM_CheckL3L4InterfaceSET_Header_Version_GET( UINT8* base_ptr, UINT16* version );
L4BUFMANDLL_API void L4BUFMANDLL_BM_CheckL3L4InterfaceSET_Header_Accessibility_GET( UINT8* base_ptr, UINT16* accessibility );
L4BUFMANDLL_API void L4BUFMANDLL_BM_CheckL3L4InterfaceSET_Header_Status_GET( UINT8* base_ptr, UINT16* status );
L4BUFMANDLL_API void L4BUFMANDLL_BM_CheckL3L4InterfaceSET_Header_Length_GET( UINT8* base_ptr, UINT32* listSize );
L4BUFMANDLL_API void L4BUFMANDLL_BM_CheckL3L4InterfaceSET_List_GET_FIRST( UINT8* base_ptr, UINT32* out_diff, UINT32* out_cur_bitoff );
L4BUFMANDLL_API void L4BUFMANDLL_BM_CheckL3L4InterfaceSET_List_GET_TYPE( UINT8* base_ptr, UINT32 diff, UINT32 cur_bitoff, UINT32* type );
L4BUFMANDLL_API void L4BUFMANDLL_BM_CheckL3L4InterfaceSET_List_GET_LENGTH( UINT8* base_ptr, UINT32 diff, UINT32 cur_bitoff, UINT32* out_length, UINT32 err );
L4BUFMANDLL_API void L4BUFMANDLL_BM_CheckL3L4InterfaceSET_List_CURRENT_value_value_GET( UINT8* base_ptr, UINT32 diff, UINT32 cur_bitoff, UINT32* value );
L4BUFMANDLL_API void L4BUFMANDLL_BM_CheckL3L4InterfaceSET_List_GET_NEXT( UINT8* base_ptr, UINT32 diff, UINT32 cur_bitoff, UINT32* out_diff, UINT32* out_cur_bitoff, UINT32 err );
L4BUFMANDLL_API void L4BUFMANDLL_BM_CheckL3L4InterfaceSET_List_SET_TYPE( UINT8* base_ptr, UINT32 diff, UINT32 cur_bitoff, UINT32 type );
L4BUFMANDLL_API void L4BUFMANDLL_BM_CheckL3L4InterfaceSET_List_SET_LENGTH( UINT8* base_ptr, UINT32 diff, UINT32 cur_bitoff, UINT32 lenOfLen, UINT32 length );
L4BUFMANDLL_API void L4BUFMANDLL_BM_CheckL3L4InterfaceSET_List_CURRENT_value_value_SET( UINT8* base_ptr, UINT32 diff, UINT32 cur_bitoff, UINT32 value );
L4BUFMANDLL_API void L4BUFMANDLL_BM_CheckL3L4InterfaceSET_Header_Type_SET( UINT8* base_ptr, UINT32 opcode );
L4BUFMANDLL_API void L4BUFMANDLL_BM_CheckL3L4InterfaceSET_Header_Version_SET( UINT8* base_ptr, UINT16 version );
L4BUFMANDLL_API void L4BUFMANDLL_BM_CheckL3L4InterfaceSET_Header_Accessibility_SET( UINT8* base_ptr, UINT16 accessibility );
L4BUFMANDLL_API void L4BUFMANDLL_BM_CheckL3L4InterfaceSET_Header_Status_SET( UINT8* base_ptr, UINT16 status );
L4BUFMANDLL_API void L4BUFMANDLL_BM_CheckL3L4InterfaceSET_Header_Length_SET( UINT8* base_ptr, UINT32 len );
L4BUFMANDLL_API void L4BUFMANDLL_BM_MOC_Broadcast_Header_Version_GET( UINT8* base_ptr, UINT16* version );
L4BUFMANDLL_API void L4BUFMANDLL_BM_MOC_Broadcast_Header_Accessibility_GET( UINT8* base_ptr, UINT16* accessibility );
L4BUFMANDLL_API void L4BUFMANDLL_BM_MOC_Broadcast_Header_Status_GET( UINT8* base_ptr, UINT16* status );
L4BUFMANDLL_API void L4BUFMANDLL_BM_MOC_Broadcast_Header_Type_SET( UINT8* base_ptr, UINT32 opcode );
L4BUFMANDLL_API void L4BUFMANDLL_BM_MOC_Broadcast_Header_Version_SET( UINT8* base_ptr, UINT16 version );
L4BUFMANDLL_API void L4BUFMANDLL_BM_MOC_Broadcast_Header_Accessibility_SET( UINT8* base_ptr, UINT16 accessibility );
L4BUFMANDLL_API void L4BUFMANDLL_BM_MOC_Broadcast_Header_Status_SET( UINT8* base_ptr, UINT16 status );
L4BUFMANDLL_API void L4BUFMANDLL_BM_MOC_Broadcast_Header_Length_SET( UINT8* base_ptr, UINT32 len );
L4BUFMANDLL_API void L4BUFMANDLL_BM_SetCoexMode_Header_Version_GET( UINT8* base_ptr, UINT16* version );
L4BUFMANDLL_API void L4BUFMANDLL_BM_SetCoexMode_Header_Accessibility_GET( UINT8* base_ptr, UINT16* accessibility );
L4BUFMANDLL_API void L4BUFMANDLL_BM_SetCoexMode_Header_Status_GET( UINT8* base_ptr, UINT16* status );
L4BUFMANDLL_API void L4BUFMANDLL_BM_SetCoexMode_Header_Length_GET( UINT8* base_ptr, UINT32* listSize );
L4BUFMANDLL_API void L4BUFMANDLL_BM_SetCoexMode_List_GET_FIRST( UINT8* base_ptr, UINT32* out_diff, UINT32* out_cur_bitoff );
L4BUFMANDLL_API void L4BUFMANDLL_BM_SetCoexMode_List_GET_TYPE( UINT8* base_ptr, UINT32 diff, UINT32 cur_bitoff, UINT32* type );
L4BUFMANDLL_API void L4BUFMANDLL_BM_SetCoexMode_List_GET_LENGTH( UINT8* base_ptr, UINT32 diff, UINT32 cur_bitoff, UINT32* out_length, UINT32 err );
L4BUFMANDLL_API void L4BUFMANDLL_BM_SetCoexMode_List_CURRENT_CoexistenceModeType_value_GET( UINT8* base_ptr, UINT32 diff, UINT32 cur_bitoff, UINT32* value );
L4BUFMANDLL_API void L4BUFMANDLL_BM_SetCoexMode_List_GET_NEXT( UINT8* base_ptr, UINT32 diff, UINT32 cur_bitoff, UINT32* out_diff, UINT32* out_cur_bitoff, UINT32 err );
L4BUFMANDLL_API void L4BUFMANDLL_BM_SetCoexMode_List_SET_TYPE( UINT8* base_ptr, UINT32 diff, UINT32 cur_bitoff, UINT32 type );
L4BUFMANDLL_API void L4BUFMANDLL_BM_SetCoexMode_List_SET_LENGTH( UINT8* base_ptr, UINT32 diff, UINT32 cur_bitoff, UINT32 lenOfLen, UINT32 length );
L4BUFMANDLL_API void L4BUFMANDLL_BM_SetCoexMode_List_CURRENT_CoexistenceModeType_value_SET( UINT8* base_ptr, UINT32 diff, UINT32 cur_bitoff, UINT32 value );
L4BUFMANDLL_API void L4BUFMANDLL_BM_SetCoexMode_Header_Type_SET( UINT8* base_ptr, UINT32 opcode );
L4BUFMANDLL_API void L4BUFMANDLL_BM_SetCoexMode_Header_Version_SET( UINT8* base_ptr, UINT16 version );
L4BUFMANDLL_API void L4BUFMANDLL_BM_SetCoexMode_Header_Accessibility_SET( UINT8* base_ptr, UINT16 accessibility );
L4BUFMANDLL_API void L4BUFMANDLL_BM_SetCoexMode_Header_Status_SET( UINT8* base_ptr, UINT16 status );
L4BUFMANDLL_API void L4BUFMANDLL_BM_SetCoexMode_Header_Length_SET( UINT8* base_ptr, UINT32 len );
L4BUFMANDLL_API void L4BUFMANDLL_BM_CheckL3L4InterfaceREPORT_Header_Version_GET( UINT8* base_ptr, UINT16* version );
L4BUFMANDLL_API void L4BUFMANDLL_BM_CheckL3L4InterfaceREPORT_Header_Accessibility_GET( UINT8* base_ptr, UINT16* accessibility );
L4BUFMANDLL_API void L4BUFMANDLL_BM_CheckL3L4InterfaceREPORT_Header_Status_GET( UINT8* base_ptr, UINT16* status );
L4BUFMANDLL_API void L4BUFMANDLL_BM_CheckL3L4InterfaceREPORT_Header_Length_GET( UINT8* base_ptr, UINT32* listSize );
L4BUFMANDLL_API void L4BUFMANDLL_BM_CheckL3L4InterfaceREPORT_List_GET_FIRST( UINT8* base_ptr, UINT32* out_diff, UINT32* out_cur_bitoff );
L4BUFMANDLL_API void L4BUFMANDLL_BM_CheckL3L4InterfaceREPORT_List_GET_TYPE( UINT8* base_ptr, UINT32 diff, UINT32 cur_bitoff, UINT32* type );
L4BUFMANDLL_API void L4BUFMANDLL_BM_CheckL3L4InterfaceREPORT_List_GET_LENGTH( UINT8* base_ptr, UINT32 diff, UINT32 cur_bitoff, UINT32* out_length, UINT32 err );
L4BUFMANDLL_API void L4BUFMANDLL_BM_CheckL3L4InterfaceREPORT_List_CURRENT_value_value_GET( UINT8* base_ptr, UINT32 diff, UINT32 cur_bitoff, UINT32* value );
L4BUFMANDLL_API void L4BUFMANDLL_BM_CheckL3L4InterfaceREPORT_List_GET_NEXT( UINT8* base_ptr, UINT32 diff, UINT32 cur_bitoff, UINT32* out_diff, UINT32* out_cur_bitoff, UINT32 err );
L4BUFMANDLL_API void L4BUFMANDLL_BM_CheckL3L4InterfaceREPORT_List_SET_TYPE( UINT8* base_ptr, UINT32 diff, UINT32 cur_bitoff, UINT32 type );
L4BUFMANDLL_API void L4BUFMANDLL_BM_CheckL3L4InterfaceREPORT_List_SET_LENGTH( UINT8* base_ptr, UINT32 diff, UINT32 cur_bitoff, UINT32 lenOfLen, UINT32 length );
L4BUFMANDLL_API void L4BUFMANDLL_BM_CheckL3L4InterfaceREPORT_List_CURRENT_value_value_SET( UINT8* base_ptr, UINT32 diff, UINT32 cur_bitoff, UINT32 value );
L4BUFMANDLL_API void L4BUFMANDLL_BM_CheckL3L4InterfaceREPORT_Header_Type_SET( UINT8* base_ptr, UINT32 opcode );
L4BUFMANDLL_API void L4BUFMANDLL_BM_CheckL3L4InterfaceREPORT_Header_Version_SET( UINT8* base_ptr, UINT16 version );
L4BUFMANDLL_API void L4BUFMANDLL_BM_CheckL3L4InterfaceREPORT_Header_Accessibility_SET( UINT8* base_ptr, UINT16 accessibility );
L4BUFMANDLL_API void L4BUFMANDLL_BM_CheckL3L4InterfaceREPORT_Header_Status_SET( UINT8* base_ptr, UINT16 status );
L4BUFMANDLL_API void L4BUFMANDLL_BM_CheckL3L4InterfaceREPORT_Header_Length_SET( UINT8* base_ptr, UINT32 len );
L4BUFMANDLL_API void L4BUFMANDLL_BM_SetTraceSeverityTable_Header_Version_GET( UINT8* base_ptr, UINT16* version );
L4BUFMANDLL_API void L4BUFMANDLL_BM_SetTraceSeverityTable_Header_Accessibility_GET( UINT8* base_ptr, UINT16* accessibility );
L4BUFMANDLL_API void L4BUFMANDLL_BM_SetTraceSeverityTable_Header_Status_GET( UINT8* base_ptr, UINT16* status );
L4BUFMANDLL_API void L4BUFMANDLL_BM_SetTraceSeverityTable_Header_Length_GET( UINT8* base_ptr, UINT32* listSize );
L4BUFMANDLL_API void L4BUFMANDLL_BM_SetTraceSeverityTable_List_GET_FIRST( UINT8* base_ptr, UINT32* out_diff, UINT32* out_cur_bitoff );
L4BUFMANDLL_API void L4BUFMANDLL_BM_SetTraceSeverityTable_List_GET_TYPE( UINT8* base_ptr, UINT32 diff, UINT32 cur_bitoff, UINT32* type );
L4BUFMANDLL_API void L4BUFMANDLL_BM_SetTraceSeverityTable_List_GET_LENGTH( UINT8* base_ptr, UINT32 diff, UINT32 cur_bitoff, UINT32* out_length, UINT32 err );
L4BUFMANDLL_API void L4BUFMANDLL_BM_SetTraceSeverityTable_List_CURRENT_TraceSeverityTable_SeverityTable_value_GET( UINT8* base_ptr, UINT32 i0, UINT32 diff, UINT32 cur_bitoff, UINT8* value );
L4BUFMANDLL_API void L4BUFMANDLL_BM_SetTraceSeverityTable_List_GET_NEXT( UINT8* base_ptr, UINT32 diff, UINT32 cur_bitoff, UINT32* out_diff, UINT32* out_cur_bitoff, UINT32 err );
L4BUFMANDLL_API void L4BUFMANDLL_BM_SetTraceSeverityTable_List_SET_TYPE( UINT8* base_ptr, UINT32 diff, UINT32 cur_bitoff, UINT32 type );
L4BUFMANDLL_API void L4BUFMANDLL_BM_SetTraceSeverityTable_List_SET_LENGTH( UINT8* base_ptr, UINT32 diff, UINT32 cur_bitoff, UINT32 lenOfLen, UINT32 length );
L4BUFMANDLL_API void L4BUFMANDLL_BM_SetTraceSeverityTable_List_CURRENT_TraceSeverityTable_SeverityTable_value_SET( UINT8* base_ptr, UINT32 i0, UINT32 diff, UINT32 cur_bitoff, UINT8 value );
L4BUFMANDLL_API void L4BUFMANDLL_BM_SetTraceSeverityTable_Header_Type_SET( UINT8* base_ptr, UINT32 opcode );
L4BUFMANDLL_API void L4BUFMANDLL_BM_SetTraceSeverityTable_Header_Version_SET( UINT8* base_ptr, UINT16 version );
L4BUFMANDLL_API void L4BUFMANDLL_BM_SetTraceSeverityTable_Header_Accessibility_SET( UINT8* base_ptr, UINT16 accessibility );
L4BUFMANDLL_API void L4BUFMANDLL_BM_SetTraceSeverityTable_Header_Status_SET( UINT8* base_ptr, UINT16 status );
L4BUFMANDLL_API void L4BUFMANDLL_BM_SetTraceSeverityTable_Header_Length_SET( UINT8* base_ptr, UINT32 len );
L4BUFMANDLL_API void L4BUFMANDLL_BM_ReportBsInfo_Header_Version_GET( UINT8* base_ptr, UINT16* version );
L4BUFMANDLL_API void L4BUFMANDLL_BM_ReportBsInfo_Header_Accessibility_GET( UINT8* base_ptr, UINT16* accessibility );
L4BUFMANDLL_API void L4BUFMANDLL_BM_ReportBsInfo_Header_Status_GET( UINT8* base_ptr, UINT16* status );
L4BUFMANDLL_API void L4BUFMANDLL_BM_ReportBsInfo_Header_Length_GET( UINT8* base_ptr, UINT32* listSize );
L4BUFMANDLL_API void L4BUFMANDLL_BM_ReportBsInfo_List_GET_FIRST( UINT8* base_ptr, UINT32* out_diff, UINT32* out_cur_bitoff );
L4BUFMANDLL_API void L4BUFMANDLL_BM_ReportBsInfo_List_GET_TYPE( UINT8* base_ptr, UINT32 diff, UINT32 cur_bitoff, UINT32* type );
L4BUFMANDLL_API void L4BUFMANDLL_BM_ReportBsInfo_List_GET_LENGTH( UINT8* base_ptr, UINT32 diff, UINT32 cur_bitoff, UINT32* out_length, UINT32 err );
L4BUFMANDLL_API void L4BUFMANDLL_BM_ReportBsInfo_List_CURRENT_BSID_FullBSID_value_GET( UINT8* base_ptr, UINT32 i0, UINT32 diff, UINT32 cur_bitoff, UINT8* value );
L4BUFMANDLL_API void L4BUFMANDLL_BM_ReportBsInfo_List_CURRENT_BSID_Reserved_GET( UINT8* base_ptr, UINT32 diff, UINT32 cur_bitoff, UINT16* Reserved );
L4BUFMANDLL_API void L4BUFMANDLL_BM_ReportBsInfo_List_CURRENT_NspChangeCount_NspChangeCount_GET( UINT8* base_ptr, UINT32 diff, UINT32 cur_bitoff, UINT8* NspChangeCount );
L4BUFMANDLL_API void L4BUFMANDLL_BM_ReportBsInfo_List_CURRENT_NspChangeCount_Reserved1_GET( UINT8* base_ptr, UINT32 diff, UINT32 cur_bitoff, UINT8* Reserved1 );
L4BUFMANDLL_API void L4BUFMANDLL_BM_ReportBsInfo_List_CURRENT_NspChangeCount_Reserved2_GET( UINT8* base_ptr, UINT32 diff, UINT32 cur_bitoff, UINT16* Reserved2 );
L4BUFMANDLL_API void L4BUFMANDLL_BM_ReportBsInfo_List_GET_NEXT( UINT8* base_ptr, UINT32 diff, UINT32 cur_bitoff, UINT32* out_diff, UINT32* out_cur_bitoff, UINT32 err );
L4BUFMANDLL_API void L4BUFMANDLL_BM_ReportBsInfo_List_SET_TYPE( UINT8* base_ptr, UINT32 diff, UINT32 cur_bitoff, UINT32 type );
L4BUFMANDLL_API void L4BUFMANDLL_BM_ReportBsInfo_List_SET_LENGTH( UINT8* base_ptr, UINT32 diff, UINT32 cur_bitoff, UINT32 lenOfLen, UINT32 length );
L4BUFMANDLL_API void L4BUFMANDLL_BM_ReportBsInfo_List_CURRENT_BSID_FullBSID_value_SET( UINT8* base_ptr, UINT32 i0, UINT32 diff, UINT32 cur_bitoff, UINT8 value );
L4BUFMANDLL_API void L4BUFMANDLL_BM_ReportBsInfo_List_CURRENT_BSID_Reserved_SET( UINT8* base_ptr, UINT32 diff, UINT32 cur_bitoff, UINT16 Reserved );
L4BUFMANDLL_API void L4BUFMANDLL_BM_ReportBsInfo_List_CURRENT_NspChangeCount_NspChangeCount_SET( UINT8* base_ptr, UINT32 diff, UINT32 cur_bitoff, UINT8 NspChangeCount );
L4BUFMANDLL_API void L4BUFMANDLL_BM_ReportBsInfo_List_CURRENT_NspChangeCount_Reserved1_SET( UINT8* base_ptr, UINT32 diff, UINT32 cur_bitoff, UINT8 Reserved1 );
L4BUFMANDLL_API void L4BUFMANDLL_BM_ReportBsInfo_List_CURRENT_NspChangeCount_Reserved2_SET( UINT8* base_ptr, UINT32 diff, UINT32 cur_bitoff, UINT16 Reserved2 );
L4BUFMANDLL_API void L4BUFMANDLL_BM_ReportBsInfo_Header_Type_SET( UINT8* base_ptr, UINT32 opcode );
L4BUFMANDLL_API void L4BUFMANDLL_BM_ReportBsInfo_Header_Version_SET( UINT8* base_ptr, UINT16 version );
L4BUFMANDLL_API void L4BUFMANDLL_BM_ReportBsInfo_Header_Accessibility_SET( UINT8* base_ptr, UINT16 accessibility );
L4BUFMANDLL_API void L4BUFMANDLL_BM_ReportBsInfo_Header_Status_SET( UINT8* base_ptr, UINT16 status );
L4BUFMANDLL_API void L4BUFMANDLL_BM_ReportBsInfo_Header_Length_SET( UINT8* base_ptr, UINT32 len );
L4BUFMANDLL_API void L4BUFMANDLL_BM_SetEapFail_Header_Version_GET( UINT8* base_ptr, UINT16* version );
L4BUFMANDLL_API void L4BUFMANDLL_BM_SetEapFail_Header_Accessibility_GET( UINT8* base_ptr, UINT16* accessibility );
L4BUFMANDLL_API void L4BUFMANDLL_BM_SetEapFail_Header_Status_GET( UINT8* base_ptr, UINT16* status );
L4BUFMANDLL_API void L4BUFMANDLL_BM_SetEapFail_Header_Type_SET( UINT8* base_ptr, UINT32 opcode );
L4BUFMANDLL_API void L4BUFMANDLL_BM_SetEapFail_Header_Version_SET( UINT8* base_ptr, UINT16 version );
L4BUFMANDLL_API void L4BUFMANDLL_BM_SetEapFail_Header_Accessibility_SET( UINT8* base_ptr, UINT16 accessibility );
L4BUFMANDLL_API void L4BUFMANDLL_BM_SetEapFail_Header_Status_SET( UINT8* base_ptr, UINT16 status );
L4BUFMANDLL_API void L4BUFMANDLL_BM_SetEapFail_Header_Length_SET( UINT8* base_ptr, UINT32 len );
L4BUFMANDLL_API void L4BUFMANDLL_BM_ResetDeviceCommand_Header_Version_GET( UINT8* base_ptr, UINT16* version );
L4BUFMANDLL_API void L4BUFMANDLL_BM_ResetDeviceCommand_Header_Accessibility_GET( UINT8* base_ptr, UINT16* accessibility );
L4BUFMANDLL_API void L4BUFMANDLL_BM_ResetDeviceCommand_Header_Status_GET( UINT8* base_ptr, UINT16* status );
L4BUFMANDLL_API void L4BUFMANDLL_BM_ResetDeviceCommand_Header_Length_GET( UINT8* base_ptr, UINT32* listSize );
L4BUFMANDLL_API void L4BUFMANDLL_BM_ResetDeviceCommand_List_GET_FIRST( UINT8* base_ptr, UINT32* out_diff, UINT32* out_cur_bitoff );
L4BUFMANDLL_API void L4BUFMANDLL_BM_ResetDeviceCommand_List_GET_TYPE( UINT8* base_ptr, UINT32 diff, UINT32 cur_bitoff, UINT32* type );
L4BUFMANDLL_API void L4BUFMANDLL_BM_ResetDeviceCommand_List_GET_LENGTH( UINT8* base_ptr, UINT32 diff, UINT32 cur_bitoff, UINT32* out_length, UINT32 err );
L4BUFMANDLL_API void L4BUFMANDLL_BM_ResetDeviceCommand_List_CURRENT_ResetDevice_value_GET( UINT8* base_ptr, UINT32 diff, UINT32 cur_bitoff, UINT32* value );
L4BUFMANDLL_API void L4BUFMANDLL_BM_ResetDeviceCommand_List_GET_NEXT( UINT8* base_ptr, UINT32 diff, UINT32 cur_bitoff, UINT32* out_diff, UINT32* out_cur_bitoff, UINT32 err );
L4BUFMANDLL_API void L4BUFMANDLL_BM_ResetDeviceCommand_List_SET_TYPE( UINT8* base_ptr, UINT32 diff, UINT32 cur_bitoff, UINT32 type );
L4BUFMANDLL_API void L4BUFMANDLL_BM_ResetDeviceCommand_List_SET_LENGTH( UINT8* base_ptr, UINT32 diff, UINT32 cur_bitoff, UINT32 lenOfLen, UINT32 length );
L4BUFMANDLL_API void L4BUFMANDLL_BM_ResetDeviceCommand_List_CURRENT_ResetDevice_value_SET( UINT8* base_ptr, UINT32 diff, UINT32 cur_bitoff, UINT32 value );
L4BUFMANDLL_API void L4BUFMANDLL_BM_ResetDeviceCommand_Header_Type_SET( UINT8* base_ptr, UINT32 opcode );
L4BUFMANDLL_API void L4BUFMANDLL_BM_ResetDeviceCommand_Header_Version_SET( UINT8* base_ptr, UINT16 version );
L4BUFMANDLL_API void L4BUFMANDLL_BM_ResetDeviceCommand_Header_Accessibility_SET( UINT8* base_ptr, UINT16 accessibility );
L4BUFMANDLL_API void L4BUFMANDLL_BM_ResetDeviceCommand_Header_Status_SET( UINT8* base_ptr, UINT16 status );
L4BUFMANDLL_API void L4BUFMANDLL_BM_ResetDeviceCommand_Header_Length_SET( UINT8* base_ptr, UINT32 len );
L4BUFMANDLL_API void L4BUFMANDLL_BM_MOC_Response_Header_Version_GET( UINT8* base_ptr, UINT16* version );
L4BUFMANDLL_API void L4BUFMANDLL_BM_MOC_Response_Header_Accessibility_GET( UINT8* base_ptr, UINT16* accessibility );
L4BUFMANDLL_API void L4BUFMANDLL_BM_MOC_Response_Header_Status_GET( UINT8* base_ptr, UINT16* status );
L4BUFMANDLL_API void L4BUFMANDLL_BM_MOC_Response_Header_Type_SET( UINT8* base_ptr, UINT32 opcode );
L4BUFMANDLL_API void L4BUFMANDLL_BM_MOC_Response_Header_Version_SET( UINT8* base_ptr, UINT16 version );
L4BUFMANDLL_API void L4BUFMANDLL_BM_MOC_Response_Header_Accessibility_SET( UINT8* base_ptr, UINT16 accessibility );
L4BUFMANDLL_API void L4BUFMANDLL_BM_MOC_Response_Header_Status_SET( UINT8* base_ptr, UINT16 status );
L4BUFMANDLL_API void L4BUFMANDLL_BM_MOC_Response_Header_Length_SET( UINT8* base_ptr, UINT32 len );
L4BUFMANDLL_API void L4BUFMANDLL_BM_GetStatistics_Header_Version_GET( UINT8* base_ptr, UINT16* version );
L4BUFMANDLL_API void L4BUFMANDLL_BM_GetStatistics_Header_Accessibility_GET( UINT8* base_ptr, UINT16* accessibility );
L4BUFMANDLL_API void L4BUFMANDLL_BM_GetStatistics_Header_Status_GET( UINT8* base_ptr, UINT16* status );
L4BUFMANDLL_API void L4BUFMANDLL_BM_GetStatistics_Header_Length_GET( UINT8* base_ptr, UINT32* listSize );
L4BUFMANDLL_API void L4BUFMANDLL_BM_GetStatistics_List_GET_FIRST( UINT8* base_ptr, UINT32* out_diff, UINT32* out_cur_bitoff );
L4BUFMANDLL_API void L4BUFMANDLL_BM_GetStatistics_List_GET_TYPE( UINT8* base_ptr, UINT32 diff, UINT32 cur_bitoff, UINT32* type );
L4BUFMANDLL_API void L4BUFMANDLL_BM_GetStatistics_List_GET_LENGTH( UINT8* base_ptr, UINT32 diff, UINT32 cur_bitoff, UINT32* out_length, UINT32 err );
L4BUFMANDLL_API void L4BUFMANDLL_BM_GetStatistics_List_CURRENT_TimeStamp_value_GET( UINT8* base_ptr, UINT32 diff, UINT32 cur_bitoff, UINT32* value );
L4BUFMANDLL_API void L4BUFMANDLL_BM_GetStatistics_List_CURRENT_StatisticsCommon_TotalRxBytes_GET( UINT8* base_ptr, UINT32 diff, UINT32 cur_bitoff, UINT32* TotalRxBytes );
L4BUFMANDLL_API void L4BUFMANDLL_BM_GetStatistics_List_CURRENT_StatisticsCommon_TotalTxBytes_GET( UINT8* base_ptr, UINT32 diff, UINT32 cur_bitoff, UINT32* TotalTxBytes );
L4BUFMANDLL_API void L4BUFMANDLL_BM_GetStatistics_List_CURRENT_StatisticsCommon_TotalRxPackets_GET( UINT8* base_ptr, UINT32 diff, UINT32 cur_bitoff, UINT32* TotalRxPackets );
L4BUFMANDLL_API void L4BUFMANDLL_BM_GetStatistics_List_CURRENT_StatisticsCommon_TotalTxPackets_GET( UINT8* base_ptr, UINT32 diff, UINT32 cur_bitoff, UINT32* TotalTxPackets );
L4BUFMANDLL_API void L4BUFMANDLL_BM_GetStatistics_List_GET_NEXT( UINT8* base_ptr, UINT32 diff, UINT32 cur_bitoff, UINT32* out_diff, UINT32* out_cur_bitoff, UINT32 err );
L4BUFMANDLL_API void L4BUFMANDLL_BM_GetStatistics_List_SET_TYPE( UINT8* base_ptr, UINT32 diff, UINT32 cur_bitoff, UINT32 type );
L4BUFMANDLL_API void L4BUFMANDLL_BM_GetStatistics_List_SET_LENGTH( UINT8* base_ptr, UINT32 diff, UINT32 cur_bitoff, UINT32 lenOfLen, UINT32 length );
L4BUFMANDLL_API void L4BUFMANDLL_BM_GetStatistics_List_CURRENT_TimeStamp_value_SET( UINT8* base_ptr, UINT32 diff, UINT32 cur_bitoff, UINT32 value );
L4BUFMANDLL_API void L4BUFMANDLL_BM_GetStatistics_List_CURRENT_StatisticsCommon_TotalRxBytes_SET( UINT8* base_ptr, UINT32 diff, UINT32 cur_bitoff, UINT32 TotalRxBytes );
L4BUFMANDLL_API void L4BUFMANDLL_BM_GetStatistics_List_CURRENT_StatisticsCommon_TotalTxBytes_SET( UINT8* base_ptr, UINT32 diff, UINT32 cur_bitoff, UINT32 TotalTxBytes );
L4BUFMANDLL_API void L4BUFMANDLL_BM_GetStatistics_List_CURRENT_StatisticsCommon_TotalRxPackets_SET( UINT8* base_ptr, UINT32 diff, UINT32 cur_bitoff, UINT32 TotalRxPackets );
L4BUFMANDLL_API void L4BUFMANDLL_BM_GetStatistics_List_CURRENT_StatisticsCommon_TotalTxPackets_SET( UINT8* base_ptr, UINT32 diff, UINT32 cur_bitoff, UINT32 TotalTxPackets );
L4BUFMANDLL_API void L4BUFMANDLL_BM_GetStatistics_Header_Type_SET( UINT8* base_ptr, UINT32 opcode );
L4BUFMANDLL_API void L4BUFMANDLL_BM_GetStatistics_Header_Version_SET( UINT8* base_ptr, UINT16 version );
L4BUFMANDLL_API void L4BUFMANDLL_BM_GetStatistics_Header_Accessibility_SET( UINT8* base_ptr, UINT16 accessibility );
L4BUFMANDLL_API void L4BUFMANDLL_BM_GetStatistics_Header_Status_SET( UINT8* base_ptr, UINT16 status );
L4BUFMANDLL_API void L4BUFMANDLL_BM_GetStatistics_Header_Length_SET( UINT8* base_ptr, UINT32 len );
L4BUFMANDLL_API void L4BUFMANDLL_BM_GetDeviceInfo_Header_Version_GET( UINT8* base_ptr, UINT16* version );
L4BUFMANDLL_API void L4BUFMANDLL_BM_GetDeviceInfo_Header_Accessibility_GET( UINT8* base_ptr, UINT16* accessibility );
L4BUFMANDLL_API void L4BUFMANDLL_BM_GetDeviceInfo_Header_Status_GET( UINT8* base_ptr, UINT16* status );
L4BUFMANDLL_API void L4BUFMANDLL_BM_GetDeviceInfo_Header_Length_GET( UINT8* base_ptr, UINT32* listSize );
L4BUFMANDLL_API void L4BUFMANDLL_BM_GetDeviceInfo_List_GET_FIRST( UINT8* base_ptr, UINT32* out_diff, UINT32* out_cur_bitoff );
L4BUFMANDLL_API void L4BUFMANDLL_BM_GetDeviceInfo_List_GET_TYPE( UINT8* base_ptr, UINT32 diff, UINT32 cur_bitoff, UINT32* type );
L4BUFMANDLL_API void L4BUFMANDLL_BM_GetDeviceInfo_List_GET_LENGTH( UINT8* base_ptr, UINT32 diff, UINT32 cur_bitoff, UINT32* out_length, UINT32 err );
L4BUFMANDLL_API void L4BUFMANDLL_BM_GetDeviceInfo_List_CURRENT_VersionsStrings_ActualLen_GET( UINT8* base_ptr, UINT32 diff, UINT32 cur_bitoff, UINT16* ActualLen );
L4BUFMANDLL_API void L4BUFMANDLL_BM_GetDeviceInfo_List_CURRENT_VersionsStrings_BufferArr_value_GET( UINT8* base_ptr, UINT32 i0, UINT32 diff, UINT32 cur_bitoff, UINT8* value );
L4BUFMANDLL_API void L4BUFMANDLL_BM_GetDeviceInfo_List_CURRENT_DeviceDetails_ModelType_GET( UINT8* base_ptr, UINT32 diff, UINT32 cur_bitoff, UINT32* ModelType );
L4BUFMANDLL_API void L4BUFMANDLL_BM_GetDeviceInfo_List_CURRENT_DeviceDetails_ModelTypeStringLength_GET( UINT8* base_ptr, UINT32 diff, UINT32 cur_bitoff, UINT32* ModelTypeStringLength );
L4BUFMANDLL_API void L4BUFMANDLL_BM_GetDeviceInfo_List_CURRENT_DeviceDetails_ModelTypeString_value_GET( UINT8* base_ptr, UINT32 i0, UINT32 diff, UINT32 cur_bitoff, UINT8* value );
L4BUFMANDLL_API void L4BUFMANDLL_BM_GetDeviceInfo_List_CURRENT_DeviceDetails_ManufacturerId_GET( UINT8* base_ptr, UINT32 diff, UINT32 cur_bitoff, UINT32* ManufacturerId );
L4BUFMANDLL_API void L4BUFMANDLL_BM_GetDeviceInfo_List_CURRENT_DeviceDetails_ManufacturerIdStringLength_GET( UINT8* base_ptr, UINT32 diff, UINT32 cur_bitoff, UINT32* ManufacturerIdStringLength );
L4BUFMANDLL_API void L4BUFMANDLL_BM_GetDeviceInfo_List_CURRENT_DeviceDetails_ManufacturerIdString_value_GET( UINT8* base_ptr, UINT32 i0, UINT32 diff, UINT32 cur_bitoff, UINT8* value );
L4BUFMANDLL_API void L4BUFMANDLL_BM_GetDeviceInfo_List_CURRENT_DeviceDetails_NvmProductStringLength_GET( UINT8* base_ptr, UINT32 diff, UINT32 cur_bitoff, UINT32* NvmProductStringLength );
L4BUFMANDLL_API void L4BUFMANDLL_BM_GetDeviceInfo_List_CURRENT_DeviceDetails_NvmProductString_value_GET( UINT8* base_ptr, UINT32 i0, UINT32 diff, UINT32 cur_bitoff, UINT8* value );
L4BUFMANDLL_API void L4BUFMANDLL_BM_GetDeviceInfo_List_CURRENT_DeviceDetails_Nonce_value_GET( UINT8* base_ptr, UINT32 i0, UINT32 diff, UINT32 cur_bitoff, UINT8* value );
L4BUFMANDLL_API void L4BUFMANDLL_BM_GetDeviceInfo_List_CURRENT_DeviceDetails_MacAddress_value_GET( UINT8* base_ptr, UINT32 i0, UINT32 diff, UINT32 cur_bitoff, UINT8* value );
L4BUFMANDLL_API void L4BUFMANDLL_BM_GetDeviceInfo_List_CURRENT_DeviceDetails_Reserved2_GET( UINT8* base_ptr, UINT32 diff, UINT32 cur_bitoff, UINT16* Reserved2 );
L4BUFMANDLL_API void L4BUFMANDLL_BM_GetDeviceInfo_List_CURRENT_OdmInformation_OdmInformation_value_GET( UINT8* base_ptr, UINT32 i0, UINT32 diff, UINT32 cur_bitoff, UINT8* value );
L4BUFMANDLL_API void L4BUFMANDLL_BM_GetDeviceInfo_List_CURRENT_NvmInformation_GeneralImageVersion_GET( UINT8* base_ptr, UINT32 diff, UINT32 cur_bitoff, UINT16* GeneralImageVersion );
L4BUFMANDLL_API void L4BUFMANDLL_BM_GetDeviceInfo_List_CURRENT_NvmInformation_ContentVersion_GET( UINT8* base_ptr, UINT32 diff, UINT32 cur_bitoff, UINT16* ContentVersion );
L4BUFMANDLL_API void L4BUFMANDLL_BM_GetDeviceInfo_List_CURRENT_NvmManufacturer_NvmManufacturerIdStringLength_GET( UINT8* base_ptr, UINT32 diff, UINT32 cur_bitoff, UINT32* NvmManufacturerIdStringLength );
L4BUFMANDLL_API void L4BUFMANDLL_BM_GetDeviceInfo_List_CURRENT_NvmManufacturer_NvmManufacturerIdString_value_GET( UINT8* base_ptr, UINT32 i0, UINT32 diff, UINT32 cur_bitoff, UINT8* value );
L4BUFMANDLL_API void L4BUFMANDLL_BM_GetDeviceInfo_List_GET_NEXT( UINT8* base_ptr, UINT32 diff, UINT32 cur_bitoff, UINT32* out_diff, UINT32* out_cur_bitoff, UINT32 err );
L4BUFMANDLL_API void L4BUFMANDLL_BM_GetDeviceInfo_List_SET_TYPE( UINT8* base_ptr, UINT32 diff, UINT32 cur_bitoff, UINT32 type );
L4BUFMANDLL_API void L4BUFMANDLL_BM_GetDeviceInfo_List_SET_LENGTH( UINT8* base_ptr, UINT32 diff, UINT32 cur_bitoff, UINT32 lenOfLen, UINT32 length );
L4BUFMANDLL_API void L4BUFMANDLL_BM_GetDeviceInfo_List_CURRENT_VersionsStrings_ActualLen_SET( UINT8* base_ptr, UINT32 diff, UINT32 cur_bitoff, UINT16 ActualLen );
L4BUFMANDLL_API void L4BUFMANDLL_BM_GetDeviceInfo_List_CURRENT_VersionsStrings_BufferArr_value_SET( UINT8* base_ptr, UINT32 i0, UINT32 diff, UINT32 cur_bitoff, UINT8 value );
L4BUFMANDLL_API void L4BUFMANDLL_BM_GetDeviceInfo_List_CURRENT_DeviceDetails_ModelType_SET( UINT8* base_ptr, UINT32 diff, UINT32 cur_bitoff, UINT32 ModelType );
L4BUFMANDLL_API void L4BUFMANDLL_BM_GetDeviceInfo_List_CURRENT_DeviceDetails_ModelTypeStringLength_SET( UINT8* base_ptr, UINT32 diff, UINT32 cur_bitoff, UINT32 ModelTypeStringLength );
L4BUFMANDLL_API void L4BUFMANDLL_BM_GetDeviceInfo_List_CURRENT_DeviceDetails_ModelTypeString_value_SET( UINT8* base_ptr, UINT32 i0, UINT32 diff, UINT32 cur_bitoff, UINT8 value );
L4BUFMANDLL_API void L4BUFMANDLL_BM_GetDeviceInfo_List_CURRENT_DeviceDetails_ManufacturerId_SET( UINT8* base_ptr, UINT32 diff, UINT32 cur_bitoff, UINT32 ManufacturerId );
L4BUFMANDLL_API void L4BUFMANDLL_BM_GetDeviceInfo_List_CURRENT_DeviceDetails_ManufacturerIdStringLength_SET( UINT8* base_ptr, UINT32 diff, UINT32 cur_bitoff, UINT32 ManufacturerIdStringLength );
L4BUFMANDLL_API void L4BUFMANDLL_BM_GetDeviceInfo_List_CURRENT_DeviceDetails_ManufacturerIdString_value_SET( UINT8* base_ptr, UINT32 i0, UINT32 diff, UINT32 cur_bitoff, UINT8 value );
L4BUFMANDLL_API void L4BUFMANDLL_BM_GetDeviceInfo_List_CURRENT_DeviceDetails_NvmProductStringLength_SET( UINT8* base_ptr, UINT32 diff, UINT32 cur_bitoff, UINT32 NvmProductStringLength );
L4BUFMANDLL_API void L4BUFMANDLL_BM_GetDeviceInfo_List_CURRENT_DeviceDetails_NvmProductString_value_SET( UINT8* base_ptr, UINT32 i0, UINT32 diff, UINT32 cur_bitoff, UINT8 value );
L4BUFMANDLL_API void L4BUFMANDLL_BM_GetDeviceInfo_List_CURRENT_DeviceDetails_Nonce_value_SET( UINT8* base_ptr, UINT32 i0, UINT32 diff, UINT32 cur_bitoff, UINT8 value );
L4BUFMANDLL_API void L4BUFMANDLL_BM_GetDeviceInfo_List_CURRENT_DeviceDetails_MacAddress_value_SET( UINT8* base_ptr, UINT32 i0, UINT32 diff, UINT32 cur_bitoff, UINT8 value );
L4BUFMANDLL_API void L4BUFMANDLL_BM_GetDeviceInfo_List_CURRENT_DeviceDetails_Reserved2_SET( UINT8* base_ptr, UINT32 diff, UINT32 cur_bitoff, UINT16 Reserved2 );
L4BUFMANDLL_API void L4BUFMANDLL_BM_GetDeviceInfo_List_CURRENT_OdmInformation_OdmInformation_value_SET( UINT8* base_ptr, UINT32 i0, UINT32 diff, UINT32 cur_bitoff, UINT8 value );
L4BUFMANDLL_API void L4BUFMANDLL_BM_GetDeviceInfo_List_CURRENT_NvmInformation_GeneralImageVersion_SET( UINT8* base_ptr, UINT32 diff, UINT32 cur_bitoff, UINT16 GeneralImageVersion );
L4BUFMANDLL_API void L4BUFMANDLL_BM_GetDeviceInfo_List_CURRENT_NvmInformation_ContentVersion_SET( UINT8* base_ptr, UINT32 diff, UINT32 cur_bitoff, UINT16 ContentVersion );
L4BUFMANDLL_API void L4BUFMANDLL_BM_GetDeviceInfo_List_CURRENT_NvmManufacturer_NvmManufacturerIdStringLength_SET( UINT8* base_ptr, UINT32 diff, UINT32 cur_bitoff, UINT32 NvmManufacturerIdStringLength );
L4BUFMANDLL_API void L4BUFMANDLL_BM_GetDeviceInfo_List_CURRENT_NvmManufacturer_NvmManufacturerIdString_value_SET( UINT8* base_ptr, UINT32 i0, UINT32 diff, UINT32 cur_bitoff, UINT8 value );
L4BUFMANDLL_API void L4BUFMANDLL_BM_GetDeviceInfo_Header_Type_SET( UINT8* base_ptr, UINT32 opcode );
L4BUFMANDLL_API void L4BUFMANDLL_BM_GetDeviceInfo_Header_Version_SET( UINT8* base_ptr, UINT16 version );
L4BUFMANDLL_API void L4BUFMANDLL_BM_GetDeviceInfo_Header_Accessibility_SET( UINT8* base_ptr, UINT16 accessibility );
L4BUFMANDLL_API void L4BUFMANDLL_BM_GetDeviceInfo_Header_Status_SET( UINT8* base_ptr, UINT16 status );
L4BUFMANDLL_API void L4BUFMANDLL_BM_GetDeviceInfo_Header_Length_SET( UINT8* base_ptr, UINT32 len );
L4BUFMANDLL_API void L4BUFMANDLL_BM_CmdMonitorControl_Header_Version_GET( UINT8* base_ptr, UINT16* version );
L4BUFMANDLL_API void L4BUFMANDLL_BM_CmdMonitorControl_Header_Accessibility_GET( UINT8* base_ptr, UINT16* accessibility );
L4BUFMANDLL_API void L4BUFMANDLL_BM_CmdMonitorControl_Header_Status_GET( UINT8* base_ptr, UINT16* status );
L4BUFMANDLL_API void L4BUFMANDLL_BM_CmdMonitorControl_Header_Length_GET( UINT8* base_ptr, UINT32* listSize );
L4BUFMANDLL_API void L4BUFMANDLL_BM_CmdMonitorControl_List_GET_FIRST( UINT8* base_ptr, UINT32* out_diff, UINT32* out_cur_bitoff );
L4BUFMANDLL_API void L4BUFMANDLL_BM_CmdMonitorControl_List_GET_TYPE( UINT8* base_ptr, UINT32 diff, UINT32 cur_bitoff, UINT32* type );
L4BUFMANDLL_API void L4BUFMANDLL_BM_CmdMonitorControl_List_GET_LENGTH( UINT8* base_ptr, UINT32 diff, UINT32 cur_bitoff, UINT32* out_length, UINT32 err );
L4BUFMANDLL_API void L4BUFMANDLL_BM_CmdMonitorControl_List_CURRENT_MonitorMode_value_GET( UINT8* base_ptr, UINT32 diff, UINT32 cur_bitoff, UINT32* value );
L4BUFMANDLL_API void L4BUFMANDLL_BM_CmdMonitorControl_List_GET_NEXT( UINT8* base_ptr, UINT32 diff, UINT32 cur_bitoff, UINT32* out_diff, UINT32* out_cur_bitoff, UINT32 err );
L4BUFMANDLL_API void L4BUFMANDLL_BM_CmdMonitorControl_List_SET_TYPE( UINT8* base_ptr, UINT32 diff, UINT32 cur_bitoff, UINT32 type );
L4BUFMANDLL_API void L4BUFMANDLL_BM_CmdMonitorControl_List_SET_LENGTH( UINT8* base_ptr, UINT32 diff, UINT32 cur_bitoff, UINT32 lenOfLen, UINT32 length );
L4BUFMANDLL_API void L4BUFMANDLL_BM_CmdMonitorControl_List_CURRENT_MonitorMode_value_SET( UINT8* base_ptr, UINT32 diff, UINT32 cur_bitoff, UINT32 value );
L4BUFMANDLL_API void L4BUFMANDLL_BM_CmdMonitorControl_Header_Type_SET( UINT8* base_ptr, UINT32 opcode );
L4BUFMANDLL_API void L4BUFMANDLL_BM_CmdMonitorControl_Header_Version_SET( UINT8* base_ptr, UINT16 version );
L4BUFMANDLL_API void L4BUFMANDLL_BM_CmdMonitorControl_Header_Accessibility_SET( UINT8* base_ptr, UINT16 accessibility );
L4BUFMANDLL_API void L4BUFMANDLL_BM_CmdMonitorControl_Header_Status_SET( UINT8* base_ptr, UINT16 status );
L4BUFMANDLL_API void L4BUFMANDLL_BM_CmdMonitorControl_Header_Length_SET( UINT8* base_ptr, UINT32 len );
L4BUFMANDLL_API void L4BUFMANDLL_BM_GetMonitorFilterTable_Header_Version_GET( UINT8* base_ptr, UINT16* version );
L4BUFMANDLL_API void L4BUFMANDLL_BM_GetMonitorFilterTable_Header_Accessibility_GET( UINT8* base_ptr, UINT16* accessibility );
L4BUFMANDLL_API void L4BUFMANDLL_BM_GetMonitorFilterTable_Header_Status_GET( UINT8* base_ptr, UINT16* status );
L4BUFMANDLL_API void L4BUFMANDLL_BM_GetMonitorFilterTable_Header_Length_GET( UINT8* base_ptr, UINT32* listSize );
L4BUFMANDLL_API void L4BUFMANDLL_BM_GetMonitorFilterTable_List_GET_FIRST( UINT8* base_ptr, UINT32* out_diff, UINT32* out_cur_bitoff );
L4BUFMANDLL_API void L4BUFMANDLL_BM_GetMonitorFilterTable_List_GET_TYPE( UINT8* base_ptr, UINT32 diff, UINT32 cur_bitoff, UINT32* type );
L4BUFMANDLL_API void L4BUFMANDLL_BM_GetMonitorFilterTable_List_GET_LENGTH( UINT8* base_ptr, UINT32 diff, UINT32 cur_bitoff, UINT32* out_length, UINT32 err );
L4BUFMANDLL_API void L4BUFMANDLL_BM_GetMonitorFilterTable_List_CURRENT_MonitorFilterTable_FilterTable_value_GET( UINT8* base_ptr, UINT32 i0, UINT32 diff, UINT32 cur_bitoff, UINT8* value );
L4BUFMANDLL_API void L4BUFMANDLL_BM_GetMonitorFilterTable_List_GET_NEXT( UINT8* base_ptr, UINT32 diff, UINT32 cur_bitoff, UINT32* out_diff, UINT32* out_cur_bitoff, UINT32 err );
L4BUFMANDLL_API void L4BUFMANDLL_BM_GetMonitorFilterTable_List_SET_TYPE( UINT8* base_ptr, UINT32 diff, UINT32 cur_bitoff, UINT32 type );
L4BUFMANDLL_API void L4BUFMANDLL_BM_GetMonitorFilterTable_List_SET_LENGTH( UINT8* base_ptr, UINT32 diff, UINT32 cur_bitoff, UINT32 lenOfLen, UINT32 length );
L4BUFMANDLL_API void L4BUFMANDLL_BM_GetMonitorFilterTable_List_CURRENT_MonitorFilterTable_FilterTable_value_SET( UINT8* base_ptr, UINT32 i0, UINT32 diff, UINT32 cur_bitoff, UINT8 value );
L4BUFMANDLL_API void L4BUFMANDLL_BM_GetMonitorFilterTable_Header_Type_SET( UINT8* base_ptr, UINT32 opcode );
L4BUFMANDLL_API void L4BUFMANDLL_BM_GetMonitorFilterTable_Header_Version_SET( UINT8* base_ptr, UINT16 version );
L4BUFMANDLL_API void L4BUFMANDLL_BM_GetMonitorFilterTable_Header_Accessibility_SET( UINT8* base_ptr, UINT16 accessibility );
L4BUFMANDLL_API void L4BUFMANDLL_BM_GetMonitorFilterTable_Header_Status_SET( UINT8* base_ptr, UINT16 status );
L4BUFMANDLL_API void L4BUFMANDLL_BM_GetMonitorFilterTable_Header_Length_SET( UINT8* base_ptr, UINT32 len );
L4BUFMANDLL_API void L4BUFMANDLL_BM_GetTraceSeverityTable_Header_Version_GET( UINT8* base_ptr, UINT16* version );
L4BUFMANDLL_API void L4BUFMANDLL_BM_GetTraceSeverityTable_Header_Accessibility_GET( UINT8* base_ptr, UINT16* accessibility );
L4BUFMANDLL_API void L4BUFMANDLL_BM_GetTraceSeverityTable_Header_Status_GET( UINT8* base_ptr, UINT16* status );
L4BUFMANDLL_API void L4BUFMANDLL_BM_GetTraceSeverityTable_Header_Length_GET( UINT8* base_ptr, UINT32* listSize );
L4BUFMANDLL_API void L4BUFMANDLL_BM_GetTraceSeverityTable_List_GET_FIRST( UINT8* base_ptr, UINT32* out_diff, UINT32* out_cur_bitoff );
L4BUFMANDLL_API void L4BUFMANDLL_BM_GetTraceSeverityTable_List_GET_TYPE( UINT8* base_ptr, UINT32 diff, UINT32 cur_bitoff, UINT32* type );
L4BUFMANDLL_API void L4BUFMANDLL_BM_GetTraceSeverityTable_List_GET_LENGTH( UINT8* base_ptr, UINT32 diff, UINT32 cur_bitoff, UINT32* out_length, UINT32 err );
L4BUFMANDLL_API void L4BUFMANDLL_BM_GetTraceSeverityTable_List_CURRENT_TraceSeverityTable_SeverityTable_value_GET( UINT8* base_ptr, UINT32 i0, UINT32 diff, UINT32 cur_bitoff, UINT8* value );
L4BUFMANDLL_API void L4BUFMANDLL_BM_GetTraceSeverityTable_List_GET_NEXT( UINT8* base_ptr, UINT32 diff, UINT32 cur_bitoff, UINT32* out_diff, UINT32* out_cur_bitoff, UINT32 err );
L4BUFMANDLL_API void L4BUFMANDLL_BM_GetTraceSeverityTable_List_SET_TYPE( UINT8* base_ptr, UINT32 diff, UINT32 cur_bitoff, UINT32 type );
L4BUFMANDLL_API void L4BUFMANDLL_BM_GetTraceSeverityTable_List_SET_LENGTH( UINT8* base_ptr, UINT32 diff, UINT32 cur_bitoff, UINT32 lenOfLen, UINT32 length );
L4BUFMANDLL_API void L4BUFMANDLL_BM_GetTraceSeverityTable_List_CURRENT_TraceSeverityTable_SeverityTable_value_SET( UINT8* base_ptr, UINT32 i0, UINT32 diff, UINT32 cur_bitoff, UINT8 value );
L4BUFMANDLL_API void L4BUFMANDLL_BM_GetTraceSeverityTable_Header_Type_SET( UINT8* base_ptr, UINT32 opcode );
L4BUFMANDLL_API void L4BUFMANDLL_BM_GetTraceSeverityTable_Header_Version_SET( UINT8* base_ptr, UINT16 version );
L4BUFMANDLL_API void L4BUFMANDLL_BM_GetTraceSeverityTable_Header_Accessibility_SET( UINT8* base_ptr, UINT16 accessibility );
L4BUFMANDLL_API void L4BUFMANDLL_BM_GetTraceSeverityTable_Header_Status_SET( UINT8* base_ptr, UINT16 status );
L4BUFMANDLL_API void L4BUFMANDLL_BM_GetTraceSeverityTable_Header_Length_SET( UINT8* base_ptr, UINT32 len );
L4BUFMANDLL_API void L4BUFMANDLL_BM_CheckL3L4InterfaceCMD_Header_Version_GET( UINT8* base_ptr, UINT16* version );
L4BUFMANDLL_API void L4BUFMANDLL_BM_CheckL3L4InterfaceCMD_Header_Accessibility_GET( UINT8* base_ptr, UINT16* accessibility );
L4BUFMANDLL_API void L4BUFMANDLL_BM_CheckL3L4InterfaceCMD_Header_Status_GET( UINT8* base_ptr, UINT16* status );
L4BUFMANDLL_API void L4BUFMANDLL_BM_CheckL3L4InterfaceCMD_Header_Length_GET( UINT8* base_ptr, UINT32* listSize );
L4BUFMANDLL_API void L4BUFMANDLL_BM_CheckL3L4InterfaceCMD_List_GET_FIRST( UINT8* base_ptr, UINT32* out_diff, UINT32* out_cur_bitoff );
L4BUFMANDLL_API void L4BUFMANDLL_BM_CheckL3L4InterfaceCMD_List_GET_TYPE( UINT8* base_ptr, UINT32 diff, UINT32 cur_bitoff, UINT32* type );
L4BUFMANDLL_API void L4BUFMANDLL_BM_CheckL3L4InterfaceCMD_List_GET_LENGTH( UINT8* base_ptr, UINT32 diff, UINT32 cur_bitoff, UINT32* out_length, UINT32 err );
L4BUFMANDLL_API void L4BUFMANDLL_BM_CheckL3L4InterfaceCMD_List_CURRENT_value_value_GET( UINT8* base_ptr, UINT32 diff, UINT32 cur_bitoff, UINT32* value );
L4BUFMANDLL_API void L4BUFMANDLL_BM_CheckL3L4InterfaceCMD_List_GET_NEXT( UINT8* base_ptr, UINT32 diff, UINT32 cur_bitoff, UINT32* out_diff, UINT32* out_cur_bitoff, UINT32 err );
L4BUFMANDLL_API void L4BUFMANDLL_BM_CheckL3L4InterfaceCMD_List_SET_TYPE( UINT8* base_ptr, UINT32 diff, UINT32 cur_bitoff, UINT32 type );
L4BUFMANDLL_API void L4BUFMANDLL_BM_CheckL3L4InterfaceCMD_List_SET_LENGTH( UINT8* base_ptr, UINT32 diff, UINT32 cur_bitoff, UINT32 lenOfLen, UINT32 length );
L4BUFMANDLL_API void L4BUFMANDLL_BM_CheckL3L4InterfaceCMD_List_CURRENT_value_value_SET( UINT8* base_ptr, UINT32 diff, UINT32 cur_bitoff, UINT32 value );
L4BUFMANDLL_API void L4BUFMANDLL_BM_CheckL3L4InterfaceCMD_Header_Type_SET( UINT8* base_ptr, UINT32 opcode );
L4BUFMANDLL_API void L4BUFMANDLL_BM_CheckL3L4InterfaceCMD_Header_Version_SET( UINT8* base_ptr, UINT16 version );
L4BUFMANDLL_API void L4BUFMANDLL_BM_CheckL3L4InterfaceCMD_Header_Accessibility_SET( UINT8* base_ptr, UINT16 accessibility );
L4BUFMANDLL_API void L4BUFMANDLL_BM_CheckL3L4InterfaceCMD_Header_Status_SET( UINT8* base_ptr, UINT16 status );
L4BUFMANDLL_API void L4BUFMANDLL_BM_CheckL3L4InterfaceCMD_Header_Length_SET( UINT8* base_ptr, UINT32 len );
L4BUFMANDLL_API void L4BUFMANDLL_BM_ReportState_Header_Version_GET( UINT8* base_ptr, UINT16* version );
L4BUFMANDLL_API void L4BUFMANDLL_BM_ReportState_Header_Accessibility_GET( UINT8* base_ptr, UINT16* accessibility );
L4BUFMANDLL_API void L4BUFMANDLL_BM_ReportState_Header_Status_GET( UINT8* base_ptr, UINT16* status );
L4BUFMANDLL_API void L4BUFMANDLL_BM_ReportState_Header_Length_GET( UINT8* base_ptr, UINT32* listSize );
L4BUFMANDLL_API void L4BUFMANDLL_BM_ReportState_List_GET_FIRST( UINT8* base_ptr, UINT32* out_diff, UINT32* out_cur_bitoff );
L4BUFMANDLL_API void L4BUFMANDLL_BM_ReportState_List_GET_TYPE( UINT8* base_ptr, UINT32 diff, UINT32 cur_bitoff, UINT32* type );
L4BUFMANDLL_API void L4BUFMANDLL_BM_ReportState_List_GET_LENGTH( UINT8* base_ptr, UINT32 diff, UINT32 cur_bitoff, UINT32* out_length, UINT32 err );
L4BUFMANDLL_API void L4BUFMANDLL_BM_ReportState_List_CURRENT_ReportStateReason_value_GET( UINT8* base_ptr, UINT32 diff, UINT32 cur_bitoff, UINT32* value );
L4BUFMANDLL_API void L4BUFMANDLL_BM_ReportState_List_CURRENT_SystemState_value_GET( UINT8* base_ptr, UINT32 diff, UINT32 cur_bitoff, UINT32* value );
L4BUFMANDLL_API void L4BUFMANDLL_BM_ReportState_List_CURRENT_LinkStatus_UpLinkSpeed_GET( UINT8* base_ptr, UINT32 diff, UINT32 cur_bitoff, UINT32* UpLinkSpeed );
L4BUFMANDLL_API void L4BUFMANDLL_BM_ReportState_List_CURRENT_LinkStatus_DownLinkSpeed_GET( UINT8* base_ptr, UINT32 diff, UINT32 cur_bitoff, UINT32* DownLinkSpeed );
L4BUFMANDLL_API void L4BUFMANDLL_BM_ReportState_List_CURRENT_LinkStatus_CenterFrequency_GET( UINT8* base_ptr, UINT32 diff, UINT32 cur_bitoff, UINT32* CenterFrequency );
L4BUFMANDLL_API void L4BUFMANDLL_BM_ReportState_List_CURRENT_LinkStatus_TxPower_GET( UINT8* base_ptr, UINT32 diff, UINT32 cur_bitoff, UINT8* TxPower );
L4BUFMANDLL_API void L4BUFMANDLL_BM_ReportState_List_CURRENT_LinkStatus_RxRssi_GET( UINT8* base_ptr, UINT32 diff, UINT32 cur_bitoff, UINT8* RxRssi );
L4BUFMANDLL_API void L4BUFMANDLL_BM_ReportState_List_CURRENT_LinkStatus_RxCinr_GET( UINT8* base_ptr, UINT32 diff, UINT32 cur_bitoff, UINT8* RxCinr );
L4BUFMANDLL_API void L4BUFMANDLL_BM_ReportState_List_CURRENT_LinkStatus_BSID_value_GET( UINT8* base_ptr, UINT32 i0, UINT32 diff, UINT32 cur_bitoff, UINT8* value );
L4BUFMANDLL_API void L4BUFMANDLL_BM_ReportState_List_CURRENT_LinkStatus_LinkQuality_GET( UINT8* base_ptr, UINT32 diff, UINT32 cur_bitoff, UINT8* LinkQuality );
L4BUFMANDLL_API void L4BUFMANDLL_BM_ReportState_List_CURRENT_LinkStatus_Reserved_GET( UINT8* base_ptr, UINT32 diff, UINT32 cur_bitoff, UINT16* Reserved );
L4BUFMANDLL_API void L4BUFMANDLL_BM_ReportState_List_CURRENT_MediaStatus_value_GET( UINT8* base_ptr, UINT32 diff, UINT32 cur_bitoff, UINT32* value );
L4BUFMANDLL_API void L4BUFMANDLL_BM_ReportState_List_CURRENT_ConnectProgress_value_GET( UINT8* base_ptr, UINT32 diff, UINT32 cur_bitoff, UINT32* value );
L4BUFMANDLL_API void L4BUFMANDLL_BM_ReportState_List_CURRENT_RFStatus_SwRFSwitch_GET( UINT8* base_ptr, UINT32 diff, UINT32 cur_bitoff, UINT8* SwRFSwitch );
L4BUFMANDLL_API void L4BUFMANDLL_BM_ReportState_List_CURRENT_RFStatus_HwRFSwitch_GET( UINT8* base_ptr, UINT32 diff, UINT32 cur_bitoff, UINT8* HwRFSwitch );
L4BUFMANDLL_API void L4BUFMANDLL_BM_ReportState_List_CURRENT_RFStatus_Reserved_GET( UINT8* base_ptr, UINT32 diff, UINT32 cur_bitoff, UINT16* Reserved );
L4BUFMANDLL_API void L4BUFMANDLL_BM_ReportState_List_CURRENT_ChannelInfo_Frequency_GET( UINT8* base_ptr, UINT32 diff, UINT32 cur_bitoff, UINT32* Frequency );
L4BUFMANDLL_API void L4BUFMANDLL_BM_ReportState_List_CURRENT_ChannelInfo_ChannelId_GET( UINT8* base_ptr, UINT32 diff, UINT32 cur_bitoff, UINT16* ChannelId );
L4BUFMANDLL_API void L4BUFMANDLL_BM_ReportState_List_CURRENT_ChannelInfo_Bandwidth_GET( UINT8* base_ptr, UINT32 diff, UINT32 cur_bitoff, UINT8* Bandwidth );
L4BUFMANDLL_API void L4BUFMANDLL_BM_ReportState_List_CURRENT_ChannelInfo_Fft_GET( UINT8* base_ptr, UINT32 diff, UINT32 cur_bitoff, UINT8* Fft );
L4BUFMANDLL_API void L4BUFMANDLL_BM_ReportState_List_CURRENT_ChannelInfo_Preambles_value_GET( UINT8* base_ptr, UINT32 i0, UINT32 diff, UINT32 cur_bitoff, UINT8* value );
L4BUFMANDLL_API void L4BUFMANDLL_BM_ReportState_List_CURRENT_ChannelInfo_Reserved_GET( UINT8* base_ptr, UINT32 diff, UINT32 cur_bitoff, UINT8* Reserved );
L4BUFMANDLL_API void L4BUFMANDLL_BM_ReportState_List_GET_NEXT( UINT8* base_ptr, UINT32 diff, UINT32 cur_bitoff, UINT32* out_diff, UINT32* out_cur_bitoff, UINT32 err );
L4BUFMANDLL_API void L4BUFMANDLL_BM_ReportState_List_SET_TYPE( UINT8* base_ptr, UINT32 diff, UINT32 cur_bitoff, UINT32 type );
L4BUFMANDLL_API void L4BUFMANDLL_BM_ReportState_List_SET_LENGTH( UINT8* base_ptr, UINT32 diff, UINT32 cur_bitoff, UINT32 lenOfLen, UINT32 length );
L4BUFMANDLL_API void L4BUFMANDLL_BM_ReportState_List_CURRENT_ReportStateReason_value_SET( UINT8* base_ptr, UINT32 diff, UINT32 cur_bitoff, UINT32 value );
L4BUFMANDLL_API void L4BUFMANDLL_BM_ReportState_List_CURRENT_SystemState_value_SET( UINT8* base_ptr, UINT32 diff, UINT32 cur_bitoff, UINT32 value );
L4BUFMANDLL_API void L4BUFMANDLL_BM_ReportState_List_CURRENT_LinkStatus_UpLinkSpeed_SET( UINT8* base_ptr, UINT32 diff, UINT32 cur_bitoff, UINT32 UpLinkSpeed );
L4BUFMANDLL_API void L4BUFMANDLL_BM_ReportState_List_CURRENT_LinkStatus_DownLinkSpeed_SET( UINT8* base_ptr, UINT32 diff, UINT32 cur_bitoff, UINT32 DownLinkSpeed );
L4BUFMANDLL_API void L4BUFMANDLL_BM_ReportState_List_CURRENT_LinkStatus_CenterFrequency_SET( UINT8* base_ptr, UINT32 diff, UINT32 cur_bitoff, UINT32 CenterFrequency );
L4BUFMANDLL_API void L4BUFMANDLL_BM_ReportState_List_CURRENT_LinkStatus_TxPower_SET( UINT8* base_ptr, UINT32 diff, UINT32 cur_bitoff, UINT8 TxPower );
L4BUFMANDLL_API void L4BUFMANDLL_BM_ReportState_List_CURRENT_LinkStatus_RxRssi_SET( UINT8* base_ptr, UINT32 diff, UINT32 cur_bitoff, UINT8 RxRssi );
L4BUFMANDLL_API void L4BUFMANDLL_BM_ReportState_List_CURRENT_LinkStatus_RxCinr_SET( UINT8* base_ptr, UINT32 diff, UINT32 cur_bitoff, UINT8 RxCinr );
L4BUFMANDLL_API void L4BUFMANDLL_BM_ReportState_List_CURRENT_LinkStatus_BSID_value_SET( UINT8* base_ptr, UINT32 i0, UINT32 diff, UINT32 cur_bitoff, UINT8 value );
L4BUFMANDLL_API void L4BUFMANDLL_BM_ReportState_List_CURRENT_LinkStatus_LinkQuality_SET( UINT8* base_ptr, UINT32 diff, UINT32 cur_bitoff, UINT8 LinkQuality );
L4BUFMANDLL_API void L4BUFMANDLL_BM_ReportState_List_CURRENT_LinkStatus_Reserved_SET( UINT8* base_ptr, UINT32 diff, UINT32 cur_bitoff, UINT16 Reserved );
L4BUFMANDLL_API void L4BUFMANDLL_BM_ReportState_List_CURRENT_MediaStatus_value_SET( UINT8* base_ptr, UINT32 diff, UINT32 cur_bitoff, UINT32 value );
L4BUFMANDLL_API void L4BUFMANDLL_BM_ReportState_List_CURRENT_ConnectProgress_value_SET( UINT8* base_ptr, UINT32 diff, UINT32 cur_bitoff, UINT32 value );
L4BUFMANDLL_API void L4BUFMANDLL_BM_ReportState_List_CURRENT_RFStatus_SwRFSwitch_SET( UINT8* base_ptr, UINT32 diff, UINT32 cur_bitoff, UINT8 SwRFSwitch );
L4BUFMANDLL_API void L4BUFMANDLL_BM_ReportState_List_CURRENT_RFStatus_HwRFSwitch_SET( UINT8* base_ptr, UINT32 diff, UINT32 cur_bitoff, UINT8 HwRFSwitch );
L4BUFMANDLL_API void L4BUFMANDLL_BM_ReportState_List_CURRENT_RFStatus_Reserved_SET( UINT8* base_ptr, UINT32 diff, UINT32 cur_bitoff, UINT16 Reserved );
L4BUFMANDLL_API void L4BUFMANDLL_BM_ReportState_List_CURRENT_ChannelInfo_Frequency_SET( UINT8* base_ptr, UINT32 diff, UINT32 cur_bitoff, UINT32 Frequency );
L4BUFMANDLL_API void L4BUFMANDLL_BM_ReportState_List_CURRENT_ChannelInfo_ChannelId_SET( UINT8* base_ptr, UINT32 diff, UINT32 cur_bitoff, UINT16 ChannelId );
L4BUFMANDLL_API void L4BUFMANDLL_BM_ReportState_List_CURRENT_ChannelInfo_Bandwidth_SET( UINT8* base_ptr, UINT32 diff, UINT32 cur_bitoff, UINT8 Bandwidth );
L4BUFMANDLL_API void L4BUFMANDLL_BM_ReportState_List_CURRENT_ChannelInfo_Fft_SET( UINT8* base_ptr, UINT32 diff, UINT32 cur_bitoff, UINT8 Fft );
L4BUFMANDLL_API void L4BUFMANDLL_BM_ReportState_List_CURRENT_ChannelInfo_Preambles_value_SET( UINT8* base_ptr, UINT32 i0, UINT32 diff, UINT32 cur_bitoff, UINT8 value );
L4BUFMANDLL_API void L4BUFMANDLL_BM_ReportState_List_CURRENT_ChannelInfo_Reserved_SET( UINT8* base_ptr, UINT32 diff, UINT32 cur_bitoff, UINT8 Reserved );
L4BUFMANDLL_API void L4BUFMANDLL_BM_ReportState_Header_Type_SET( UINT8* base_ptr, UINT32 opcode );
L4BUFMANDLL_API void L4BUFMANDLL_BM_ReportState_Header_Version_SET( UINT8* base_ptr, UINT16 version );
L4BUFMANDLL_API void L4BUFMANDLL_BM_ReportState_Header_Accessibility_SET( UINT8* base_ptr, UINT16 accessibility );
L4BUFMANDLL_API void L4BUFMANDLL_BM_ReportState_Header_Status_SET( UINT8* base_ptr, UINT16 status );
L4BUFMANDLL_API void L4BUFMANDLL_BM_ReportState_Header_Length_SET( UINT8* base_ptr, UINT32 len );
L4BUFMANDLL_API void L4BUFMANDLL_BM_SPLockRequest_Header_Version_GET( UINT8* base_ptr, UINT16* version );
L4BUFMANDLL_API void L4BUFMANDLL_BM_SPLockRequest_Header_Accessibility_GET( UINT8* base_ptr, UINT16* accessibility );
L4BUFMANDLL_API void L4BUFMANDLL_BM_SPLockRequest_Header_Status_GET( UINT8* base_ptr, UINT16* status );
L4BUFMANDLL_API void L4BUFMANDLL_BM_SPLockRequest_Header_Length_GET( UINT8* base_ptr, UINT32* listSize );
L4BUFMANDLL_API void L4BUFMANDLL_BM_SPLockRequest_List_GET_FIRST( UINT8* base_ptr, UINT32* out_diff, UINT32* out_cur_bitoff );
L4BUFMANDLL_API void L4BUFMANDLL_BM_SPLockRequest_List_GET_TYPE( UINT8* base_ptr, UINT32 diff, UINT32 cur_bitoff, UINT32* type );
L4BUFMANDLL_API void L4BUFMANDLL_BM_SPLockRequest_List_GET_LENGTH( UINT8* base_ptr, UINT32 diff, UINT32 cur_bitoff, UINT32* out_length, UINT32 err );
L4BUFMANDLL_API void L4BUFMANDLL_BM_SPLockRequest_List_CURRENT_SPLockUnlockCodeReq_ActualLen_GET( UINT8* base_ptr, UINT32 diff, UINT32 cur_bitoff, UINT16* ActualLen );
L4BUFMANDLL_API void L4BUFMANDLL_BM_SPLockRequest_List_CURRENT_SPLockUnlockCodeReq_BufferArr_value_GET( UINT8* base_ptr, UINT32 i0, UINT32 diff, UINT32 cur_bitoff, UINT8* value );
L4BUFMANDLL_API void L4BUFMANDLL_BM_SPLockRequest_List_GET_NEXT( UINT8* base_ptr, UINT32 diff, UINT32 cur_bitoff, UINT32* out_diff, UINT32* out_cur_bitoff, UINT32 err );
L4BUFMANDLL_API void L4BUFMANDLL_BM_SPLockRequest_List_SET_TYPE( UINT8* base_ptr, UINT32 diff, UINT32 cur_bitoff, UINT32 type );
L4BUFMANDLL_API void L4BUFMANDLL_BM_SPLockRequest_List_SET_LENGTH( UINT8* base_ptr, UINT32 diff, UINT32 cur_bitoff, UINT32 lenOfLen, UINT32 length );
L4BUFMANDLL_API void L4BUFMANDLL_BM_SPLockRequest_List_CURRENT_SPLockUnlockCodeReq_ActualLen_SET( UINT8* base_ptr, UINT32 diff, UINT32 cur_bitoff, UINT16 ActualLen );
L4BUFMANDLL_API void L4BUFMANDLL_BM_SPLockRequest_List_CURRENT_SPLockUnlockCodeReq_BufferArr_value_SET( UINT8* base_ptr, UINT32 i0, UINT32 diff, UINT32 cur_bitoff, UINT8 value );
L4BUFMANDLL_API void L4BUFMANDLL_BM_SPLockRequest_Header_Type_SET( UINT8* base_ptr, UINT32 opcode );
L4BUFMANDLL_API void L4BUFMANDLL_BM_SPLockRequest_Header_Version_SET( UINT8* base_ptr, UINT16 version );
L4BUFMANDLL_API void L4BUFMANDLL_BM_SPLockRequest_Header_Accessibility_SET( UINT8* base_ptr, UINT16 accessibility );
L4BUFMANDLL_API void L4BUFMANDLL_BM_SPLockRequest_Header_Status_SET( UINT8* base_ptr, UINT16 status );
L4BUFMANDLL_API void L4BUFMANDLL_BM_SPLockRequest_Header_Length_SET( UINT8* base_ptr, UINT32 len );
L4BUFMANDLL_API void L4BUFMANDLL_BM_DebugLoopback_Header_Version_GET( UINT8* base_ptr, UINT16* version );
L4BUFMANDLL_API void L4BUFMANDLL_BM_DebugLoopback_Header_Accessibility_GET( UINT8* base_ptr, UINT16* accessibility );
L4BUFMANDLL_API void L4BUFMANDLL_BM_DebugLoopback_Header_Status_GET( UINT8* base_ptr, UINT16* status );
L4BUFMANDLL_API void L4BUFMANDLL_BM_DebugLoopback_Header_Type_SET( UINT8* base_ptr, UINT32 opcode );
L4BUFMANDLL_API void L4BUFMANDLL_BM_DebugLoopback_Header_Version_SET( UINT8* base_ptr, UINT16 version );
L4BUFMANDLL_API void L4BUFMANDLL_BM_DebugLoopback_Header_Accessibility_SET( UINT8* base_ptr, UINT16 accessibility );
L4BUFMANDLL_API void L4BUFMANDLL_BM_DebugLoopback_Header_Status_SET( UINT8* base_ptr, UINT16 status );
L4BUFMANDLL_API void L4BUFMANDLL_BM_DebugLoopback_Header_Length_SET( UINT8* base_ptr, UINT32 len );
L4BUFMANDLL_API void L4BUFMANDLL_BM_ReportAltAccept_Header_Version_GET( UINT8* base_ptr, UINT16* version );
L4BUFMANDLL_API void L4BUFMANDLL_BM_ReportAltAccept_Header_Accessibility_GET( UINT8* base_ptr, UINT16* accessibility );
L4BUFMANDLL_API void L4BUFMANDLL_BM_ReportAltAccept_Header_Status_GET( UINT8* base_ptr, UINT16* status );
L4BUFMANDLL_API void L4BUFMANDLL_BM_ReportAltAccept_Header_Type_SET( UINT8* base_ptr, UINT32 opcode );
L4BUFMANDLL_API void L4BUFMANDLL_BM_ReportAltAccept_Header_Version_SET( UINT8* base_ptr, UINT16 version );
L4BUFMANDLL_API void L4BUFMANDLL_BM_ReportAltAccept_Header_Accessibility_SET( UINT8* base_ptr, UINT16 accessibility );
L4BUFMANDLL_API void L4BUFMANDLL_BM_ReportAltAccept_Header_Status_SET( UINT8* base_ptr, UINT16 status );
L4BUFMANDLL_API void L4BUFMANDLL_BM_ReportAltAccept_Header_Length_SET( UINT8* base_ptr, UINT32 len );
L4BUFMANDLL_API void L4BUFMANDLL_BM_ModeOfOperationCommand_Header_Version_GET( UINT8* base_ptr, UINT16* version );
L4BUFMANDLL_API void L4BUFMANDLL_BM_ModeOfOperationCommand_Header_Accessibility_GET( UINT8* base_ptr, UINT16* accessibility );
L4BUFMANDLL_API void L4BUFMANDLL_BM_ModeOfOperationCommand_Header_Status_GET( UINT8* base_ptr, UINT16* status );
L4BUFMANDLL_API void L4BUFMANDLL_BM_ModeOfOperationCommand_Header_Length_GET( UINT8* base_ptr, UINT32* listSize );
L4BUFMANDLL_API void L4BUFMANDLL_BM_ModeOfOperationCommand_List_GET_FIRST( UINT8* base_ptr, UINT32* out_diff, UINT32* out_cur_bitoff );
L4BUFMANDLL_API void L4BUFMANDLL_BM_ModeOfOperationCommand_List_GET_TYPE( UINT8* base_ptr, UINT32 diff, UINT32 cur_bitoff, UINT32* type );
L4BUFMANDLL_API void L4BUFMANDLL_BM_ModeOfOperationCommand_List_GET_LENGTH( UINT8* base_ptr, UINT32 diff, UINT32 cur_bitoff, UINT32* out_length, UINT32 err );
L4BUFMANDLL_API void L4BUFMANDLL_BM_ModeOfOperationCommand_List_CURRENT_ModeOfOperation_value_GET( UINT8* base_ptr, UINT32 diff, UINT32 cur_bitoff, UINT32* value );
L4BUFMANDLL_API void L4BUFMANDLL_BM_ModeOfOperationCommand_List_GET_NEXT( UINT8* base_ptr, UINT32 diff, UINT32 cur_bitoff, UINT32* out_diff, UINT32* out_cur_bitoff, UINT32 err );
L4BUFMANDLL_API void L4BUFMANDLL_BM_ModeOfOperationCommand_List_SET_TYPE( UINT8* base_ptr, UINT32 diff, UINT32 cur_bitoff, UINT32 type );
L4BUFMANDLL_API void L4BUFMANDLL_BM_ModeOfOperationCommand_List_SET_LENGTH( UINT8* base_ptr, UINT32 diff, UINT32 cur_bitoff, UINT32 lenOfLen, UINT32 length );
L4BUFMANDLL_API void L4BUFMANDLL_BM_ModeOfOperationCommand_List_CURRENT_ModeOfOperation_value_SET( UINT8* base_ptr, UINT32 diff, UINT32 cur_bitoff, UINT32 value );
L4BUFMANDLL_API void L4BUFMANDLL_BM_ModeOfOperationCommand_Header_Type_SET( UINT8* base_ptr, UINT32 opcode );
L4BUFMANDLL_API void L4BUFMANDLL_BM_ModeOfOperationCommand_Header_Version_SET( UINT8* base_ptr, UINT16 version );
L4BUFMANDLL_API void L4BUFMANDLL_BM_ModeOfOperationCommand_Header_Accessibility_SET( UINT8* base_ptr, UINT16 accessibility );
L4BUFMANDLL_API void L4BUFMANDLL_BM_ModeOfOperationCommand_Header_Status_SET( UINT8* base_ptr, UINT16 status );
L4BUFMANDLL_API void L4BUFMANDLL_BM_ModeOfOperationCommand_Header_Length_SET( UINT8* base_ptr, UINT32 len );
L4BUFMANDLL_API void L4BUFMANDLL_BM_MOC_Request_Header_Version_GET( UINT8* base_ptr, UINT16* version );
L4BUFMANDLL_API void L4BUFMANDLL_BM_MOC_Request_Header_Accessibility_GET( UINT8* base_ptr, UINT16* accessibility );
L4BUFMANDLL_API void L4BUFMANDLL_BM_MOC_Request_Header_Status_GET( UINT8* base_ptr, UINT16* status );
L4BUFMANDLL_API void L4BUFMANDLL_BM_MOC_Request_Header_Type_SET( UINT8* base_ptr, UINT32 opcode );
L4BUFMANDLL_API void L4BUFMANDLL_BM_MOC_Request_Header_Version_SET( UINT8* base_ptr, UINT16 version );
L4BUFMANDLL_API void L4BUFMANDLL_BM_MOC_Request_Header_Accessibility_SET( UINT8* base_ptr, UINT16 accessibility );
L4BUFMANDLL_API void L4BUFMANDLL_BM_MOC_Request_Header_Status_SET( UINT8* base_ptr, UINT16 status );
L4BUFMANDLL_API void L4BUFMANDLL_BM_MOC_Request_Header_Length_SET( UINT8* base_ptr, UINT32 len );
L4BUFMANDLL_API void L4BUFMANDLL_BM_SendEapResponse_Header_Version_GET( UINT8* base_ptr, UINT16* version );
L4BUFMANDLL_API void L4BUFMANDLL_BM_SendEapResponse_Header_Accessibility_GET( UINT8* base_ptr, UINT16* accessibility );
L4BUFMANDLL_API void L4BUFMANDLL_BM_SendEapResponse_Header_Status_GET( UINT8* base_ptr, UINT16* status );
L4BUFMANDLL_API void L4BUFMANDLL_BM_SendEapResponse_Header_Length_GET( UINT8* base_ptr, UINT32* listSize );
L4BUFMANDLL_API void L4BUFMANDLL_BM_SendEapResponse_List_GET_FIRST( UINT8* base_ptr, UINT32* out_diff, UINT32* out_cur_bitoff );
L4BUFMANDLL_API void L4BUFMANDLL_BM_SendEapResponse_List_GET_TYPE( UINT8* base_ptr, UINT32 diff, UINT32 cur_bitoff, UINT32* type );
L4BUFMANDLL_API void L4BUFMANDLL_BM_SendEapResponse_List_GET_LENGTH( UINT8* base_ptr, UINT32 diff, UINT32 cur_bitoff, UINT32* out_length, UINT32 err );
L4BUFMANDLL_API void L4BUFMANDLL_BM_SendEapResponse_List_CURRENT_EapResponseMessage_ActualLen_GET( UINT8* base_ptr, UINT32 diff, UINT32 cur_bitoff, UINT16* ActualLen );
L4BUFMANDLL_API void L4BUFMANDLL_BM_SendEapResponse_List_CURRENT_EapResponseMessage_BufferArr_value_GET( UINT8* base_ptr, UINT32 i0, UINT32 diff, UINT32 cur_bitoff, UINT8* value );
L4BUFMANDLL_API void L4BUFMANDLL_BM_SendEapResponse_List_GET_NEXT( UINT8* base_ptr, UINT32 diff, UINT32 cur_bitoff, UINT32* out_diff, UINT32* out_cur_bitoff, UINT32 err );
L4BUFMANDLL_API void L4BUFMANDLL_BM_SendEapResponse_List_SET_TYPE( UINT8* base_ptr, UINT32 diff, UINT32 cur_bitoff, UINT32 type );
L4BUFMANDLL_API void L4BUFMANDLL_BM_SendEapResponse_List_SET_LENGTH( UINT8* base_ptr, UINT32 diff, UINT32 cur_bitoff, UINT32 lenOfLen, UINT32 length );
L4BUFMANDLL_API void L4BUFMANDLL_BM_SendEapResponse_List_CURRENT_EapResponseMessage_ActualLen_SET( UINT8* base_ptr, UINT32 diff, UINT32 cur_bitoff, UINT16 ActualLen );
L4BUFMANDLL_API void L4BUFMANDLL_BM_SendEapResponse_List_CURRENT_EapResponseMessage_BufferArr_value_SET( UINT8* base_ptr, UINT32 i0, UINT32 diff, UINT32 cur_bitoff, UINT8 value );
L4BUFMANDLL_API void L4BUFMANDLL_BM_SendEapResponse_Header_Type_SET( UINT8* base_ptr, UINT32 opcode );
L4BUFMANDLL_API void L4BUFMANDLL_BM_SendEapResponse_Header_Version_SET( UINT8* base_ptr, UINT16 version );
L4BUFMANDLL_API void L4BUFMANDLL_BM_SendEapResponse_Header_Accessibility_SET( UINT8* base_ptr, UINT16 accessibility );
L4BUFMANDLL_API void L4BUFMANDLL_BM_SendEapResponse_Header_Status_SET( UINT8* base_ptr, UINT16 status );
L4BUFMANDLL_API void L4BUFMANDLL_BM_SendEapResponse_Header_Length_SET( UINT8* base_ptr, UINT32 len );



#endif //_L4BUFMAN_DLL_L3L4STRUCTS_H
