# Makefile.in generated by automake 1.11.1 from Makefile.am.
# @configure_input@

# Copyright (C) 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002,
# 2003, 2004, 2005, 2006, 2007, 2008, 2009  Free Software Foundation,
# Inc.
# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.

@SET_MAKE@


VPATH = @srcdir@
pkgdatadir = $(datadir)/@PACKAGE@
pkgincludedir = $(includedir)/@PACKAGE@
pkglibdir = $(libdir)/@PACKAGE@
pkglibexecdir = $(libexecdir)/@PACKAGE@
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = @build@
host_triplet = @host@
bin_PROGRAMS = wimaxd$(EXEEXT)
subdir = InfraStack/OSAgnostic/Product/AppSrvInfra
DIST_COMMON = $(srcdir)/Makefile.am $(srcdir)/Makefile.in
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/configure.ac
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
mkinstalldirs = $(install_sh) -d
CONFIG_HEADER = $(top_builddir)/config.h
CONFIG_CLEAN_FILES =
CONFIG_CLEAN_VPATH_FILES =
am__installdirs = "$(DESTDIR)$(bindir)" "$(DESTDIR)$(configdir)" \
	"$(DESTDIR)$(modprobedir)" "$(DESTDIR)$(pkgdatadir)" \
	"$(DESTDIR)$(pkglocalstatedir)" "$(DESTDIR)$(udevrulesdir)"
PROGRAMS = $(bin_PROGRAMS)
am_wimaxd_OBJECTS = wimaxd-Act.$(OBJEXT) wimaxd-L4MsgProxy.$(OBJEXT) \
	wimaxd-L5SocketsDispatcher.$(OBJEXT) \
	wimaxd-L5Dispatcher.$(OBJEXT) wimaxd-L5CommonUtils.$(OBJEXT) \
	wimaxd-KDapiAdapter.$(OBJEXT) wimaxd-KDapi.$(OBJEXT) \
	wimaxd-KDapiForSim.$(OBJEXT) wimaxd-GenericMain.$(OBJEXT) \
	wimaxd-GenericConsole.$(OBJEXT) wimaxd-GenericDaemon.$(OBJEXT) \
	wimaxd-LoadInstrumentation.$(OBJEXT) \
	wimaxd-DeviceConfiguration.$(OBJEXT)
wimaxd_OBJECTS = $(am_wimaxd_OBJECTS)
wimaxd_DEPENDENCIES = ../../WiMax/Agents/NDnS/libNDnSAgent.la \
	../../WiMax/Agents/Supplicant/libSupplicantAgent.la \
	../PipeHandler/libPipeHandler.la \
	../Instrumantation/libWmxInstrument.la \
	../../Common/CommonServices/libServices.la \
	../../Common/L4Common/libL4Common.la
wimaxd_LINK = $(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
	--mode=link $(CCLD) $(wimaxd_CFLAGS) $(CFLAGS) \
	$(wimaxd_LDFLAGS) $(LDFLAGS) -o $@
DEFAULT_INCLUDES = -I.@am__isrc@ -I$(top_builddir)
depcomp = $(SHELL) $(top_srcdir)/depcomp
am__depfiles_maybe = depfiles
am__mv = mv -f
COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
LTCOMPILE = $(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
	--mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
CCLD = $(CC)
LINK = $(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
	--mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) $(AM_LDFLAGS) \
	$(LDFLAGS) -o $@
SOURCES = $(wimaxd_SOURCES)
DIST_SOURCES = $(wimaxd_SOURCES)
am__vpath_adj_setup = srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`;
am__vpath_adj = case $$p in \
    $(srcdir)/*) f=`echo "$$p" | sed "s|^$$srcdirstrip/||"`;; \
    *) f=$$p;; \
  esac;
am__strip_dir = f=`echo $$p | sed -e 's|^.*/||'`;
am__install_max = 40
am__nobase_strip_setup = \
  srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*|]/\\\\&/g'`
am__nobase_strip = \
  for p in $$list; do echo "$$p"; done | sed -e "s|$$srcdirstrip/||"
am__nobase_list = $(am__nobase_strip_setup); \
  for p in $$list; do echo "$$p $$p"; done | \
  sed "s| $$srcdirstrip/| |;"' / .*\//!s/ .*/ ./; s,\( .*\)/[^/]*$$,\1,' | \
  $(AWK) 'BEGIN { files["."] = "" } { files[$$2] = files[$$2] " " $$1; \
    if (++n[$$2] == $(am__install_max)) \
      { print $$2, files[$$2]; n[$$2] = 0; files[$$2] = "" } } \
    END { for (dir in files) print dir, files[dir] }'
am__base_list = \
  sed '$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;s/\n/ /g' | \
  sed '$$!N;$$!N;$$!N;$$!N;s/\n/ /g'
DATA = $(config_DATA) $(modprobe_DATA) $(noinst_DATA) $(pkgdata_DATA) \
	$(pkglocalstate_DATA) $(udevrules_DATA)
ETAGS = etags
CTAGS = ctags
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
ACLOCAL = @ACLOCAL@
AMTAR = @AMTAR@
AR = @AR@
AUTOCONF = @AUTOCONF@
AUTOHEADER = @AUTOHEADER@
AUTOMAKE = @AUTOMAKE@
AWK = @AWK@
CC = @CC@
CCDEPMODE = @CCDEPMODE@
CFLAGS = @CFLAGS@
CPP = @CPP@
CPPFLAGS = @CPPFLAGS@
CYGPATH_W = @CYGPATH_W@
DEFS = @DEFS@
DEPDIR = @DEPDIR@
DSYMUTIL = @DSYMUTIL@
DUMPBIN = @DUMPBIN@
ECHO_C = @ECHO_C@
ECHO_N = @ECHO_N@
ECHO_T = @ECHO_T@
EGREP = @EGREP@
EXEEXT = @EXEEXT@
FGREP = @FGREP@
GREP = @GREP@
I2400M_INCLUDES = @I2400M_INCLUDES@
INSTALL = @INSTALL@
INSTALL_DATA = @INSTALL_DATA@
INSTALL_PROGRAM = @INSTALL_PROGRAM@
INSTALL_SCRIPT = @INSTALL_SCRIPT@
INSTALL_STRIP_PROGRAM = @INSTALL_STRIP_PROGRAM@
LD = @LD@
LDFLAGS = @LDFLAGS@
LIBEAP0_CFLAGS = @LIBEAP0_CFLAGS@
LIBEAP0_LIBS = @LIBEAP0_LIBS@
LIBEAP0_PREFIX = @LIBEAP0_PREFIX@
LIBOBJS = @LIBOBJS@
LIBS = @LIBS@
LIBTOOL = @LIBTOOL@
LIBWIMAX_CFLAGS = @LIBWIMAX_CFLAGS@
LIBWIMAX_LIBS = @LIBWIMAX_LIBS@
LINUX_INCLUDE_PATH = @LINUX_INCLUDE_PATH@
LIPO = @LIPO@
LN_S = @LN_S@
LTLIBOBJS = @LTLIBOBJS@
MAKEINFO = @MAKEINFO@
MKDIR_P = @MKDIR_P@
NM = @NM@
NMEDIT = @NMEDIT@
OBJDUMP = @OBJDUMP@
OBJEXT = @OBJEXT@
OTOOL = @OTOOL@
OTOOL64 = @OTOOL64@
PACKAGE = @PACKAGE@
PACKAGE_BUGREPORT = @PACKAGE_BUGREPORT@
PACKAGE_NAME = @PACKAGE_NAME@
PACKAGE_STRING = @PACKAGE_STRING@
PACKAGE_TARNAME = @PACKAGE_TARNAME@
PACKAGE_VERSION = @PACKAGE_VERSION@
PATH_SEPARATOR = @PATH_SEPARATOR@
PKG_CONFIG = @PKG_CONFIG@
RANLIB = @RANLIB@
SED = @SED@
SET_MAKE = @SET_MAKE@
SHELL = @SHELL@
STRIP = @STRIP@
USE_INST = @USE_INST@
VERSION = @VERSION@
VER_INFO_BIN = @VER_INFO_BIN@
WIMAX_DB_BIN = @WIMAX_DB_BIN@
WPA_SUP_PREFIX = @WPA_SUP_PREFIX@
abs_builddir = @abs_builddir@
abs_srcdir = @abs_srcdir@
abs_top_builddir = @abs_top_builddir@
abs_top_srcdir = @abs_top_srcdir@
ac_ct_CC = @ac_ct_CC@
ac_ct_DUMPBIN = @ac_ct_DUMPBIN@
am__include = @am__include@
am__leading_dot = @am__leading_dot@
am__quote = @am__quote@
am__tar = @am__tar@
am__untar = @am__untar@
bindir = @bindir@
build = @build@
build_alias = @build_alias@
build_cpu = @build_cpu@
build_os = @build_os@
build_vendor = @build_vendor@
builddir = @builddir@
datadir = @datadir@
datarootdir = @datarootdir@
docdir = @docdir@
dvidir = @dvidir@
exec_prefix = @exec_prefix@
host = @host@
host_alias = @host_alias@
host_cpu = @host_cpu@
host_os = @host_os@
host_vendor = @host_vendor@
htmldir = @htmldir@
includedir = @includedir@
infodir = @infodir@
install_sh = @install_sh@
libdir = @libdir@
libexecdir = @libexecdir@
localedir = @localedir@
localstatedir = @localstatedir@
lt_ECHO = @lt_ECHO@
mandir = @mandir@
mkdir_p = @mkdir_p@
oldincludedir = @oldincludedir@
pdfdir = @pdfdir@
prefix = @prefix@
program_prefix = @program_prefix@
program_suffix = @program_suffix@
program_transform_name = @program_transform_name@
psdir = @psdir@
sbindir = @sbindir@
sharedstatedir = @sharedstatedir@
srcdir = @srcdir@
sysconfdir = @sysconfdir@
target_alias = @target_alias@
top_build_prefix = @top_build_prefix@
top_builddir = @top_builddir@
top_srcdir = @top_srcdir@
CLEANFILES = iwmxsdk.rules config.xml dhcp_renew.sh
WIMAXD_NAME = @program_prefix@wimaxd@program_suffix@
varrundir = $(localstatedir)/run
varlogdir = ${localstatedir}/log
pkgvarlogdir = ${varlogdir}/$(PACKAGE)
pkglocalstatedir = ${localstatedir}/lib/$(PACKAGE)
wimaxd_SOURCES = \
		$(srcdir)/Act.c \
		$(srcdir)/L4MsgProxy.c \
		$(srcdir)/L5SocketsDispatcher.c \
		$(srcdir)/L5Dispatcher.c \
		$(srcdir)/../../Common/L5Common/L5CommonUtils.c \
		$(srcdir)/KDapiAdapter.c \
		$(srcdir)/SVstatus.h \
		$(top_srcdir)/InfraStack/OSDependent/Linux/InfraStackModules/KDapi/KDapi.c \
		$(top_srcdir)/InfraStack/OSDependent/Linux/InfraStackModules/KDapi/KDapiForSim.c \
		$(top_srcdir)/InfraStack/OSDependent/Linux/InfraStackModules/KDapi/KDapiForLinuxNlsock.h \
		$(top_srcdir)/InfraStack/OSDependent/Linux/InfraStackModules/Skeletons/AppSrv/GenericMain.c \
		$(top_srcdir)/InfraStack/OSDependent/Linux/InfraStackModules/Skeletons/AppSrv/GenericConsole.c \
		$(top_srcdir)/InfraStack/OSDependent/Linux/InfraStackModules/Skeletons/AppSrv/GenericDaemon.c \
		$(top_srcdir)/InfraStack/OSDependent/Linux/InfraStackModules/Instrumentation/LoadInstrumentation.c \
		$(srcdir)/DeviceConfiguration.c \
		$(srcdir)/Act.h \
		$(srcdir)/L4MsgProxy.h \
		$(srcdir)/L4MsgProxyIf.h \
		$(srcdir)/L5SocketsDispatcher.h \
		$(srcdir)/L5Dispatcher.h \
		$(srcdir)/KDapiAdapter.h \
		$(srcdir)/DeviceConfiguration.h \
		$(top_srcdir)/InfraStack/OSAgnostic/OSInterface/InfraStackModules/KDapi.h \
		$(top_srcdir)/InfraStack/OSAgnostic/OSInterface/InfraStackModules/KDapiForSim.h \
		$(top_srcdir)/InfraStack/OSDependent/Linux/InfraStackModules/Skeletons/AppSrv/GenericMain.h 

EXTRA_DIST = $(srcdir)/i2400m.conf $(srcdir)/iwmxsdk.rules.in \
	$(top_srcdir)/InfraStack/OSDependent/Linux/Config/config.xml.in \
	$(top_srcdir)/InfraStack/OSDependent/Linux/Config/dhcp_renew.sh.in \
	iwmxsdk.rules.in
noinst_DATA = $(top_srcdir)/InfraStack/OSAgnostic/WiMax/Agents/NDnS/XML_Files/NDnSAgentConfig_forDriver.xml \
		$(top_srcdir)/$(VER_INFO_BIN_FILE_SRC)

pkgdata_DATA = ../../WiMax/Agents/Supplicant/Source/Cert/cacert.pem \
		../../WiMax/Agents/Supplicant/Source/Cert/supplicant_key.pem \
		../../WiMax/Agents/Supplicant/Source/Cert/supplicant_cert.pem \
		../Instrumantation/DnDAgent/DefaultTracesAndMonitors.xml \
		dhcp_renew.sh \
		Ver_info.bin

pkglocalstate_DATA = WiMAX_DB.bin WiMAX_Def.bin
DISTCLEANFILES = WiMAX_DB.bin WiMAX_Def.bin Ver_info.bin
configdir = $(sysconfdir)/$(PACKAGE)
config_DATA = config.xml
VER_INFO_BIN_FILE_SRC = InfraStack/OSDependent/Linux/Ver_info.bin
@BINDB_ENABLED_FALSE@DISABLE_OBFUSCATE = 1
@BINDB_ENABLED_TRUE@DISABLE_OBFUSCATE = 0
@BINDB_ENABLED_FALSE@WIMAX_DB_BIN_FILE = $(top_srcdir)/InfraStack/OSAgnostic/WiMax/Agents/NDnS/XML_Files/NDnSAgentConfig_forDriver.xml
@BINDB_ENABLED_TRUE@WIMAX_DB_BIN_FILE = @WIMAX_DB_BIN@
@BINDB_ENABLED_FALSE@VER_INFO_BIN_FILE = $(top_srcdir)/$(VER_INFO_BIN_FILE_SRC)
@BINDB_ENABLED_TRUE@VER_INFO_BIN_FILE = @VER_INFO_BIN@
git_version = $(shell cd $(top_srcdir) && git describe --abbrev=128 --always)
@WPA_SUP_ENABLE_FALSE@sup_lib_path = $(libdir)/wimax/libwpa_wimax_supplicant.so
@WPA_SUP_ENABLE_TRUE@sup_lib_path = @LIBEAP0_PREFIX@/lib/libeap.so.0

# Driver option
modprobedir = $(sysconfdir)/modprobe.d/
modprobe_DATA = i2400m.conf

# UDEV rules
udevrulesdir = $(sysconfdir)/udev/rules.d
udevrules_DATA = iwmxsdk.rules
daemondir = ${sysconfdir}/init.d
LOGDIR = ${localstatedir}/log/$(PACKAGE)
wimaxd_CFLAGS = \
		-I "$(top_srcdir)/InfraStack/OSAgnostic/WiMax/Wrappers/Include" \
		-I "$(top_srcdir)/InfraStack/OSDependent/Linux/L4Generated" \
		-I "$(top_srcdir)/InfraStack/OSAgnostic/Common/CommonServices" \
		-I "$(top_srcdir)/InfraStack/OSAgnostic/OSInterface/OSAL/" \
		-I "$(top_srcdir)/InfraStack/OSAgnostic/OSInterface/OSAL/Primitives" \
		-I "$(top_srcdir)/InfraStack/OSAgnostic/OSInterface/OSAL/Services" \
		-I "$(top_srcdir)/InfraStack/OSAgnostic/Common/CommonServices/XmlParser" \
		-I "$(top_srcdir)/InfraStack/OSAgnostic/Product/PipeHandler" \
		-I "$(top_srcdir)/InfraStack/OSAgnostic/Product/Instrumantation/MOCHandler/UDapiL5" \
		-I "$(top_srcdir)/InfraStack/OSAgnostic/Common/L4Common/SourceControl" \
		-I "$(top_srcdir)/InfraStack/OSAgnostic/Common/L5Common" \
		-I "$(top_srcdir)/InfraStack/OSAgnostic/Common/WrappersCommon" \
		-I "../../WiMax/Agents/NDnS/Source" \
		-I "../../WiMax/Agents/Supplicant/Source" \
		-I "../../WiMax/Agents/Supplicant/Source/ds" \
		-I "$(srcdir)/../Handlers/MOCHandler/UDapiL5/"\
		-I "$(top_srcdir)/InfraStack/OSAgnostic/OSInterface/InfraStackModules" \
		-I "$(top_srcdir)/InfraStack/OSDependent/Linux/OSAL/Primitives" \
		-I "$(top_srcdir)/InfraStack/OSDependent/Linux/OSAL/Services" \
		-I "$(top_srcdir)/InfraStack/OSDependent/Linux/InfraStackModules/CommonAPIHeaders" \
		-I "$(srcdir)/../IPCs/Sockets"  \
		-I "$(top_srcdir)/InfraStack/OSAgnostic/WiMax/Wrappers/NDnS" \
		-I "$(top_srcdir)/InfraStack/OSAgnostic/WiMax/Wrappers/Apdo" \
		-I "$(top_srcdir)/InfraStack/OSAgnostic/WiMax/Agents/NDnS/Source" \
		-I "$(top_srcdir)/InfraStack/OSAgnostic/WiMax/Agents/Supplicant/Source" \
		-I "$(top_srcdir)/InfraStack/OSAgnostic/WiMax/Agents/Supplicant/Source/ds"\
		@LIBWIMAX_CFLAGS@ \
		@I2400M_INCLUDES@ \
		-D "_USE_TRACE" -D "BMI_MACHINE_ENDIANNESS_LITTLE" -D "L5_USE_SERVER_SOCKETS" -D "LINUX" \
		-D "_OS_WIN32SIM" $(DEBUGSWITCH) \
		-D PKG_VAR_LOG_DIR="\"${pkgvarlogdir}\"" \
		-D VAR_RUN_DIR="\"$(varrundir)\"" \
		-D WIMAXD_NAME="\"$(WIMAXD_NAME)\"" \
		-D LIB_DIR="\"$(libdir)\""

wimaxd_LDADD = \
	../../WiMax/Agents/NDnS/libNDnSAgent.la \
	../../WiMax/Agents/Supplicant/libSupplicantAgent.la \
	../PipeHandler/libPipeHandler.la \
	../Instrumantation/libWmxInstrument.la \
	../../Common/CommonServices/libServices.la \
	@LIBWIMAX_LIBS@ \
	../../Common/L4Common/libL4Common.la \
	-lpthread \
	-ldl

wimaxd_LDFLAGS = "-rdynamic" -rdynamic
all: all-am

.SUFFIXES:
.SUFFIXES: .c .lo .o .obj
$(srcdir)/Makefile.in:  $(srcdir)/Makefile.am  $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      ( cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh ) \
	        && { if test -f $@; then exit 0; else break; fi; }; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --foreign InfraStack/OSAgnostic/Product/AppSrvInfra/Makefile'; \
	$(am__cd) $(top_srcdir) && \
	  $(AUTOMAKE) --foreign InfraStack/OSAgnostic/Product/AppSrvInfra/Makefile
.PRECIOUS: Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \
	esac;

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure:  $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4):  $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(am__aclocal_m4_deps):
install-binPROGRAMS: $(bin_PROGRAMS)
	@$(NORMAL_INSTALL)
	test -z "$(bindir)" || $(MKDIR_P) "$(DESTDIR)$(bindir)"
	@list='$(bin_PROGRAMS)'; test -n "$(bindir)" || list=; \
	for p in $$list; do echo "$$p $$p"; done | \
	sed 's/$(EXEEXT)$$//' | \
	while read p p1; do if test -f $$p || test -f $$p1; \
	  then echo "$$p"; echo "$$p"; else :; fi; \
	done | \
	sed -e 'p;s,.*/,,;n;h' -e 's|.*|.|' \
	    -e 'p;x;s,.*/,,;s/$(EXEEXT)$$//;$(transform);s/$$/$(EXEEXT)/' | \
	sed 'N;N;N;s,\n, ,g' | \
	$(AWK) 'BEGIN { files["."] = ""; dirs["."] = 1 } \
	  { d=$$3; if (dirs[d] != 1) { print "d", d; dirs[d] = 1 } \
	    if ($$2 == $$4) files[d] = files[d] " " $$1; \
	    else { print "f", $$3 "/" $$4, $$1; } } \
	  END { for (d in files) print "f", d, files[d] }' | \
	while read type dir files; do \
	    if test "$$dir" = .; then dir=; else dir=/$$dir; fi; \
	    test -z "$$files" || { \
	    echo " $(INSTALL_PROGRAM_ENV) $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL_PROGRAM) $$files '$(DESTDIR)$(bindir)$$dir'"; \
	    $(INSTALL_PROGRAM_ENV) $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL_PROGRAM) $$files "$(DESTDIR)$(bindir)$$dir" || exit $$?; \
	    } \
	; done

uninstall-binPROGRAMS:
	@$(NORMAL_UNINSTALL)
	@list='$(bin_PROGRAMS)'; test -n "$(bindir)" || list=; \
	files=`for p in $$list; do echo "$$p"; done | \
	  sed -e 'h;s,^.*/,,;s/$(EXEEXT)$$//;$(transform)' \
	      -e 's/$$/$(EXEEXT)/' `; \
	test -n "$$list" || exit 0; \
	echo " ( cd '$(DESTDIR)$(bindir)' && rm -f" $$files ")"; \
	cd "$(DESTDIR)$(bindir)" && rm -f $$files

clean-binPROGRAMS:
	@list='$(bin_PROGRAMS)'; test -n "$$list" || exit 0; \
	echo " rm -f" $$list; \
	rm -f $$list || exit $$?; \
	test -n "$(EXEEXT)" || exit 0; \
	list=`for p in $$list; do echo "$$p"; done | sed 's/$(EXEEXT)$$//'`; \
	echo " rm -f" $$list; \
	rm -f $$list
wimaxd$(EXEEXT): $(wimaxd_OBJECTS) $(wimaxd_DEPENDENCIES) 
	@rm -f wimaxd$(EXEEXT)
	$(wimaxd_LINK) $(wimaxd_OBJECTS) $(wimaxd_LDADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/wimaxd-Act.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/wimaxd-DeviceConfiguration.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/wimaxd-GenericConsole.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/wimaxd-GenericDaemon.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/wimaxd-GenericMain.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/wimaxd-KDapi.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/wimaxd-KDapiAdapter.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/wimaxd-KDapiForSim.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/wimaxd-L4MsgProxy.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/wimaxd-L5CommonUtils.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/wimaxd-L5Dispatcher.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/wimaxd-L5SocketsDispatcher.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/wimaxd-LoadInstrumentation.Po@am__quote@

.c.o:
@am__fastdepCC_TRUE@	$(COMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
@am__fastdepCC_TRUE@	$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(COMPILE) -c $<

.c.obj:
@am__fastdepCC_TRUE@	$(COMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ `$(CYGPATH_W) '$<'`
@am__fastdepCC_TRUE@	$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(COMPILE) -c `$(CYGPATH_W) '$<'`

.c.lo:
@am__fastdepCC_TRUE@	$(LTCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
@am__fastdepCC_TRUE@	$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Plo
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='$<' object='$@' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(LTCOMPILE) -c -o $@ $<

wimaxd-Act.o: $(srcdir)/Act.c
@am__fastdepCC_TRUE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(wimaxd_CFLAGS) $(CFLAGS) -MT wimaxd-Act.o -MD -MP -MF $(DEPDIR)/wimaxd-Act.Tpo -c -o wimaxd-Act.o `test -f '$(srcdir)/Act.c' || echo '$(srcdir)/'`$(srcdir)/Act.c
@am__fastdepCC_TRUE@	$(am__mv) $(DEPDIR)/wimaxd-Act.Tpo $(DEPDIR)/wimaxd-Act.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='$(srcdir)/Act.c' object='wimaxd-Act.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(wimaxd_CFLAGS) $(CFLAGS) -c -o wimaxd-Act.o `test -f '$(srcdir)/Act.c' || echo '$(srcdir)/'`$(srcdir)/Act.c

wimaxd-Act.obj: $(srcdir)/Act.c
@am__fastdepCC_TRUE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(wimaxd_CFLAGS) $(CFLAGS) -MT wimaxd-Act.obj -MD -MP -MF $(DEPDIR)/wimaxd-Act.Tpo -c -o wimaxd-Act.obj `if test -f '$(srcdir)/Act.c'; then $(CYGPATH_W) '$(srcdir)/Act.c'; else $(CYGPATH_W) '$(srcdir)/$(srcdir)/Act.c'; fi`
@am__fastdepCC_TRUE@	$(am__mv) $(DEPDIR)/wimaxd-Act.Tpo $(DEPDIR)/wimaxd-Act.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='$(srcdir)/Act.c' object='wimaxd-Act.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(wimaxd_CFLAGS) $(CFLAGS) -c -o wimaxd-Act.obj `if test -f '$(srcdir)/Act.c'; then $(CYGPATH_W) '$(srcdir)/Act.c'; else $(CYGPATH_W) '$(srcdir)/$(srcdir)/Act.c'; fi`

wimaxd-L4MsgProxy.o: $(srcdir)/L4MsgProxy.c
@am__fastdepCC_TRUE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(wimaxd_CFLAGS) $(CFLAGS) -MT wimaxd-L4MsgProxy.o -MD -MP -MF $(DEPDIR)/wimaxd-L4MsgProxy.Tpo -c -o wimaxd-L4MsgProxy.o `test -f '$(srcdir)/L4MsgProxy.c' || echo '$(srcdir)/'`$(srcdir)/L4MsgProxy.c
@am__fastdepCC_TRUE@	$(am__mv) $(DEPDIR)/wimaxd-L4MsgProxy.Tpo $(DEPDIR)/wimaxd-L4MsgProxy.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='$(srcdir)/L4MsgProxy.c' object='wimaxd-L4MsgProxy.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(wimaxd_CFLAGS) $(CFLAGS) -c -o wimaxd-L4MsgProxy.o `test -f '$(srcdir)/L4MsgProxy.c' || echo '$(srcdir)/'`$(srcdir)/L4MsgProxy.c

wimaxd-L4MsgProxy.obj: $(srcdir)/L4MsgProxy.c
@am__fastdepCC_TRUE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(wimaxd_CFLAGS) $(CFLAGS) -MT wimaxd-L4MsgProxy.obj -MD -MP -MF $(DEPDIR)/wimaxd-L4MsgProxy.Tpo -c -o wimaxd-L4MsgProxy.obj `if test -f '$(srcdir)/L4MsgProxy.c'; then $(CYGPATH_W) '$(srcdir)/L4MsgProxy.c'; else $(CYGPATH_W) '$(srcdir)/$(srcdir)/L4MsgProxy.c'; fi`
@am__fastdepCC_TRUE@	$(am__mv) $(DEPDIR)/wimaxd-L4MsgProxy.Tpo $(DEPDIR)/wimaxd-L4MsgProxy.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='$(srcdir)/L4MsgProxy.c' object='wimaxd-L4MsgProxy.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(wimaxd_CFLAGS) $(CFLAGS) -c -o wimaxd-L4MsgProxy.obj `if test -f '$(srcdir)/L4MsgProxy.c'; then $(CYGPATH_W) '$(srcdir)/L4MsgProxy.c'; else $(CYGPATH_W) '$(srcdir)/$(srcdir)/L4MsgProxy.c'; fi`

wimaxd-L5SocketsDispatcher.o: $(srcdir)/L5SocketsDispatcher.c
@am__fastdepCC_TRUE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(wimaxd_CFLAGS) $(CFLAGS) -MT wimaxd-L5SocketsDispatcher.o -MD -MP -MF $(DEPDIR)/wimaxd-L5SocketsDispatcher.Tpo -c -o wimaxd-L5SocketsDispatcher.o `test -f '$(srcdir)/L5SocketsDispatcher.c' || echo '$(srcdir)/'`$(srcdir)/L5SocketsDispatcher.c
@am__fastdepCC_TRUE@	$(am__mv) $(DEPDIR)/wimaxd-L5SocketsDispatcher.Tpo $(DEPDIR)/wimaxd-L5SocketsDispatcher.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='$(srcdir)/L5SocketsDispatcher.c' object='wimaxd-L5SocketsDispatcher.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(wimaxd_CFLAGS) $(CFLAGS) -c -o wimaxd-L5SocketsDispatcher.o `test -f '$(srcdir)/L5SocketsDispatcher.c' || echo '$(srcdir)/'`$(srcdir)/L5SocketsDispatcher.c

wimaxd-L5SocketsDispatcher.obj: $(srcdir)/L5SocketsDispatcher.c
@am__fastdepCC_TRUE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(wimaxd_CFLAGS) $(CFLAGS) -MT wimaxd-L5SocketsDispatcher.obj -MD -MP -MF $(DEPDIR)/wimaxd-L5SocketsDispatcher.Tpo -c -o wimaxd-L5SocketsDispatcher.obj `if test -f '$(srcdir)/L5SocketsDispatcher.c'; then $(CYGPATH_W) '$(srcdir)/L5SocketsDispatcher.c'; else $(CYGPATH_W) '$(srcdir)/$(srcdir)/L5SocketsDispatcher.c'; fi`
@am__fastdepCC_TRUE@	$(am__mv) $(DEPDIR)/wimaxd-L5SocketsDispatcher.Tpo $(DEPDIR)/wimaxd-L5SocketsDispatcher.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='$(srcdir)/L5SocketsDispatcher.c' object='wimaxd-L5SocketsDispatcher.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(wimaxd_CFLAGS) $(CFLAGS) -c -o wimaxd-L5SocketsDispatcher.obj `if test -f '$(srcdir)/L5SocketsDispatcher.c'; then $(CYGPATH_W) '$(srcdir)/L5SocketsDispatcher.c'; else $(CYGPATH_W) '$(srcdir)/$(srcdir)/L5SocketsDispatcher.c'; fi`

wimaxd-L5Dispatcher.o: $(srcdir)/L5Dispatcher.c
@am__fastdepCC_TRUE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(wimaxd_CFLAGS) $(CFLAGS) -MT wimaxd-L5Dispatcher.o -MD -MP -MF $(DEPDIR)/wimaxd-L5Dispatcher.Tpo -c -o wimaxd-L5Dispatcher.o `test -f '$(srcdir)/L5Dispatcher.c' || echo '$(srcdir)/'`$(srcdir)/L5Dispatcher.c
@am__fastdepCC_TRUE@	$(am__mv) $(DEPDIR)/wimaxd-L5Dispatcher.Tpo $(DEPDIR)/wimaxd-L5Dispatcher.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='$(srcdir)/L5Dispatcher.c' object='wimaxd-L5Dispatcher.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(wimaxd_CFLAGS) $(CFLAGS) -c -o wimaxd-L5Dispatcher.o `test -f '$(srcdir)/L5Dispatcher.c' || echo '$(srcdir)/'`$(srcdir)/L5Dispatcher.c

wimaxd-L5Dispatcher.obj: $(srcdir)/L5Dispatcher.c
@am__fastdepCC_TRUE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(wimaxd_CFLAGS) $(CFLAGS) -MT wimaxd-L5Dispatcher.obj -MD -MP -MF $(DEPDIR)/wimaxd-L5Dispatcher.Tpo -c -o wimaxd-L5Dispatcher.obj `if test -f '$(srcdir)/L5Dispatcher.c'; then $(CYGPATH_W) '$(srcdir)/L5Dispatcher.c'; else $(CYGPATH_W) '$(srcdir)/$(srcdir)/L5Dispatcher.c'; fi`
@am__fastdepCC_TRUE@	$(am__mv) $(DEPDIR)/wimaxd-L5Dispatcher.Tpo $(DEPDIR)/wimaxd-L5Dispatcher.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='$(srcdir)/L5Dispatcher.c' object='wimaxd-L5Dispatcher.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(wimaxd_CFLAGS) $(CFLAGS) -c -o wimaxd-L5Dispatcher.obj `if test -f '$(srcdir)/L5Dispatcher.c'; then $(CYGPATH_W) '$(srcdir)/L5Dispatcher.c'; else $(CYGPATH_W) '$(srcdir)/$(srcdir)/L5Dispatcher.c'; fi`

wimaxd-L5CommonUtils.o: $(srcdir)/../../Common/L5Common/L5CommonUtils.c
@am__fastdepCC_TRUE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(wimaxd_CFLAGS) $(CFLAGS) -MT wimaxd-L5CommonUtils.o -MD -MP -MF $(DEPDIR)/wimaxd-L5CommonUtils.Tpo -c -o wimaxd-L5CommonUtils.o `test -f '$(srcdir)/../../Common/L5Common/L5CommonUtils.c' || echo '$(srcdir)/'`$(srcdir)/../../Common/L5Common/L5CommonUtils.c
@am__fastdepCC_TRUE@	$(am__mv) $(DEPDIR)/wimaxd-L5CommonUtils.Tpo $(DEPDIR)/wimaxd-L5CommonUtils.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='$(srcdir)/../../Common/L5Common/L5CommonUtils.c' object='wimaxd-L5CommonUtils.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(wimaxd_CFLAGS) $(CFLAGS) -c -o wimaxd-L5CommonUtils.o `test -f '$(srcdir)/../../Common/L5Common/L5CommonUtils.c' || echo '$(srcdir)/'`$(srcdir)/../../Common/L5Common/L5CommonUtils.c

wimaxd-L5CommonUtils.obj: $(srcdir)/../../Common/L5Common/L5CommonUtils.c
@am__fastdepCC_TRUE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(wimaxd_CFLAGS) $(CFLAGS) -MT wimaxd-L5CommonUtils.obj -MD -MP -MF $(DEPDIR)/wimaxd-L5CommonUtils.Tpo -c -o wimaxd-L5CommonUtils.obj `if test -f '$(srcdir)/../../Common/L5Common/L5CommonUtils.c'; then $(CYGPATH_W) '$(srcdir)/../../Common/L5Common/L5CommonUtils.c'; else $(CYGPATH_W) '$(srcdir)/$(srcdir)/../../Common/L5Common/L5CommonUtils.c'; fi`
@am__fastdepCC_TRUE@	$(am__mv) $(DEPDIR)/wimaxd-L5CommonUtils.Tpo $(DEPDIR)/wimaxd-L5CommonUtils.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='$(srcdir)/../../Common/L5Common/L5CommonUtils.c' object='wimaxd-L5CommonUtils.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(wimaxd_CFLAGS) $(CFLAGS) -c -o wimaxd-L5CommonUtils.obj `if test -f '$(srcdir)/../../Common/L5Common/L5CommonUtils.c'; then $(CYGPATH_W) '$(srcdir)/../../Common/L5Common/L5CommonUtils.c'; else $(CYGPATH_W) '$(srcdir)/$(srcdir)/../../Common/L5Common/L5CommonUtils.c'; fi`

wimaxd-KDapiAdapter.o: $(srcdir)/KDapiAdapter.c
@am__fastdepCC_TRUE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(wimaxd_CFLAGS) $(CFLAGS) -MT wimaxd-KDapiAdapter.o -MD -MP -MF $(DEPDIR)/wimaxd-KDapiAdapter.Tpo -c -o wimaxd-KDapiAdapter.o `test -f '$(srcdir)/KDapiAdapter.c' || echo '$(srcdir)/'`$(srcdir)/KDapiAdapter.c
@am__fastdepCC_TRUE@	$(am__mv) $(DEPDIR)/wimaxd-KDapiAdapter.Tpo $(DEPDIR)/wimaxd-KDapiAdapter.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='$(srcdir)/KDapiAdapter.c' object='wimaxd-KDapiAdapter.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(wimaxd_CFLAGS) $(CFLAGS) -c -o wimaxd-KDapiAdapter.o `test -f '$(srcdir)/KDapiAdapter.c' || echo '$(srcdir)/'`$(srcdir)/KDapiAdapter.c

wimaxd-KDapiAdapter.obj: $(srcdir)/KDapiAdapter.c
@am__fastdepCC_TRUE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(wimaxd_CFLAGS) $(CFLAGS) -MT wimaxd-KDapiAdapter.obj -MD -MP -MF $(DEPDIR)/wimaxd-KDapiAdapter.Tpo -c -o wimaxd-KDapiAdapter.obj `if test -f '$(srcdir)/KDapiAdapter.c'; then $(CYGPATH_W) '$(srcdir)/KDapiAdapter.c'; else $(CYGPATH_W) '$(srcdir)/$(srcdir)/KDapiAdapter.c'; fi`
@am__fastdepCC_TRUE@	$(am__mv) $(DEPDIR)/wimaxd-KDapiAdapter.Tpo $(DEPDIR)/wimaxd-KDapiAdapter.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='$(srcdir)/KDapiAdapter.c' object='wimaxd-KDapiAdapter.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(wimaxd_CFLAGS) $(CFLAGS) -c -o wimaxd-KDapiAdapter.obj `if test -f '$(srcdir)/KDapiAdapter.c'; then $(CYGPATH_W) '$(srcdir)/KDapiAdapter.c'; else $(CYGPATH_W) '$(srcdir)/$(srcdir)/KDapiAdapter.c'; fi`

wimaxd-KDapi.o: $(top_srcdir)/InfraStack/OSDependent/Linux/InfraStackModules/KDapi/KDapi.c
@am__fastdepCC_TRUE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(wimaxd_CFLAGS) $(CFLAGS) -MT wimaxd-KDapi.o -MD -MP -MF $(DEPDIR)/wimaxd-KDapi.Tpo -c -o wimaxd-KDapi.o `test -f '$(top_srcdir)/InfraStack/OSDependent/Linux/InfraStackModules/KDapi/KDapi.c' || echo '$(srcdir)/'`$(top_srcdir)/InfraStack/OSDependent/Linux/InfraStackModules/KDapi/KDapi.c
@am__fastdepCC_TRUE@	$(am__mv) $(DEPDIR)/wimaxd-KDapi.Tpo $(DEPDIR)/wimaxd-KDapi.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='$(top_srcdir)/InfraStack/OSDependent/Linux/InfraStackModules/KDapi/KDapi.c' object='wimaxd-KDapi.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(wimaxd_CFLAGS) $(CFLAGS) -c -o wimaxd-KDapi.o `test -f '$(top_srcdir)/InfraStack/OSDependent/Linux/InfraStackModules/KDapi/KDapi.c' || echo '$(srcdir)/'`$(top_srcdir)/InfraStack/OSDependent/Linux/InfraStackModules/KDapi/KDapi.c

wimaxd-KDapi.obj: $(top_srcdir)/InfraStack/OSDependent/Linux/InfraStackModules/KDapi/KDapi.c
@am__fastdepCC_TRUE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(wimaxd_CFLAGS) $(CFLAGS) -MT wimaxd-KDapi.obj -MD -MP -MF $(DEPDIR)/wimaxd-KDapi.Tpo -c -o wimaxd-KDapi.obj `if test -f '$(top_srcdir)/InfraStack/OSDependent/Linux/InfraStackModules/KDapi/KDapi.c'; then $(CYGPATH_W) '$(top_srcdir)/InfraStack/OSDependent/Linux/InfraStackModules/KDapi/KDapi.c'; else $(CYGPATH_W) '$(srcdir)/$(top_srcdir)/InfraStack/OSDependent/Linux/InfraStackModules/KDapi/KDapi.c'; fi`
@am__fastdepCC_TRUE@	$(am__mv) $(DEPDIR)/wimaxd-KDapi.Tpo $(DEPDIR)/wimaxd-KDapi.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='$(top_srcdir)/InfraStack/OSDependent/Linux/InfraStackModules/KDapi/KDapi.c' object='wimaxd-KDapi.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(wimaxd_CFLAGS) $(CFLAGS) -c -o wimaxd-KDapi.obj `if test -f '$(top_srcdir)/InfraStack/OSDependent/Linux/InfraStackModules/KDapi/KDapi.c'; then $(CYGPATH_W) '$(top_srcdir)/InfraStack/OSDependent/Linux/InfraStackModules/KDapi/KDapi.c'; else $(CYGPATH_W) '$(srcdir)/$(top_srcdir)/InfraStack/OSDependent/Linux/InfraStackModules/KDapi/KDapi.c'; fi`

wimaxd-KDapiForSim.o: $(top_srcdir)/InfraStack/OSDependent/Linux/InfraStackModules/KDapi/KDapiForSim.c
@am__fastdepCC_TRUE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(wimaxd_CFLAGS) $(CFLAGS) -MT wimaxd-KDapiForSim.o -MD -MP -MF $(DEPDIR)/wimaxd-KDapiForSim.Tpo -c -o wimaxd-KDapiForSim.o `test -f '$(top_srcdir)/InfraStack/OSDependent/Linux/InfraStackModules/KDapi/KDapiForSim.c' || echo '$(srcdir)/'`$(top_srcdir)/InfraStack/OSDependent/Linux/InfraStackModules/KDapi/KDapiForSim.c
@am__fastdepCC_TRUE@	$(am__mv) $(DEPDIR)/wimaxd-KDapiForSim.Tpo $(DEPDIR)/wimaxd-KDapiForSim.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='$(top_srcdir)/InfraStack/OSDependent/Linux/InfraStackModules/KDapi/KDapiForSim.c' object='wimaxd-KDapiForSim.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(wimaxd_CFLAGS) $(CFLAGS) -c -o wimaxd-KDapiForSim.o `test -f '$(top_srcdir)/InfraStack/OSDependent/Linux/InfraStackModules/KDapi/KDapiForSim.c' || echo '$(srcdir)/'`$(top_srcdir)/InfraStack/OSDependent/Linux/InfraStackModules/KDapi/KDapiForSim.c

wimaxd-KDapiForSim.obj: $(top_srcdir)/InfraStack/OSDependent/Linux/InfraStackModules/KDapi/KDapiForSim.c
@am__fastdepCC_TRUE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(wimaxd_CFLAGS) $(CFLAGS) -MT wimaxd-KDapiForSim.obj -MD -MP -MF $(DEPDIR)/wimaxd-KDapiForSim.Tpo -c -o wimaxd-KDapiForSim.obj `if test -f '$(top_srcdir)/InfraStack/OSDependent/Linux/InfraStackModules/KDapi/KDapiForSim.c'; then $(CYGPATH_W) '$(top_srcdir)/InfraStack/OSDependent/Linux/InfraStackModules/KDapi/KDapiForSim.c'; else $(CYGPATH_W) '$(srcdir)/$(top_srcdir)/InfraStack/OSDependent/Linux/InfraStackModules/KDapi/KDapiForSim.c'; fi`
@am__fastdepCC_TRUE@	$(am__mv) $(DEPDIR)/wimaxd-KDapiForSim.Tpo $(DEPDIR)/wimaxd-KDapiForSim.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='$(top_srcdir)/InfraStack/OSDependent/Linux/InfraStackModules/KDapi/KDapiForSim.c' object='wimaxd-KDapiForSim.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(wimaxd_CFLAGS) $(CFLAGS) -c -o wimaxd-KDapiForSim.obj `if test -f '$(top_srcdir)/InfraStack/OSDependent/Linux/InfraStackModules/KDapi/KDapiForSim.c'; then $(CYGPATH_W) '$(top_srcdir)/InfraStack/OSDependent/Linux/InfraStackModules/KDapi/KDapiForSim.c'; else $(CYGPATH_W) '$(srcdir)/$(top_srcdir)/InfraStack/OSDependent/Linux/InfraStackModules/KDapi/KDapiForSim.c'; fi`

wimaxd-GenericMain.o: $(top_srcdir)/InfraStack/OSDependent/Linux/InfraStackModules/Skeletons/AppSrv/GenericMain.c
@am__fastdepCC_TRUE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(wimaxd_CFLAGS) $(CFLAGS) -MT wimaxd-GenericMain.o -MD -MP -MF $(DEPDIR)/wimaxd-GenericMain.Tpo -c -o wimaxd-GenericMain.o `test -f '$(top_srcdir)/InfraStack/OSDependent/Linux/InfraStackModules/Skeletons/AppSrv/GenericMain.c' || echo '$(srcdir)/'`$(top_srcdir)/InfraStack/OSDependent/Linux/InfraStackModules/Skeletons/AppSrv/GenericMain.c
@am__fastdepCC_TRUE@	$(am__mv) $(DEPDIR)/wimaxd-GenericMain.Tpo $(DEPDIR)/wimaxd-GenericMain.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='$(top_srcdir)/InfraStack/OSDependent/Linux/InfraStackModules/Skeletons/AppSrv/GenericMain.c' object='wimaxd-GenericMain.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(wimaxd_CFLAGS) $(CFLAGS) -c -o wimaxd-GenericMain.o `test -f '$(top_srcdir)/InfraStack/OSDependent/Linux/InfraStackModules/Skeletons/AppSrv/GenericMain.c' || echo '$(srcdir)/'`$(top_srcdir)/InfraStack/OSDependent/Linux/InfraStackModules/Skeletons/AppSrv/GenericMain.c

wimaxd-GenericMain.obj: $(top_srcdir)/InfraStack/OSDependent/Linux/InfraStackModules/Skeletons/AppSrv/GenericMain.c
@am__fastdepCC_TRUE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(wimaxd_CFLAGS) $(CFLAGS) -MT wimaxd-GenericMain.obj -MD -MP -MF $(DEPDIR)/wimaxd-GenericMain.Tpo -c -o wimaxd-GenericMain.obj `if test -f '$(top_srcdir)/InfraStack/OSDependent/Linux/InfraStackModules/Skeletons/AppSrv/GenericMain.c'; then $(CYGPATH_W) '$(top_srcdir)/InfraStack/OSDependent/Linux/InfraStackModules/Skeletons/AppSrv/GenericMain.c'; else $(CYGPATH_W) '$(srcdir)/$(top_srcdir)/InfraStack/OSDependent/Linux/InfraStackModules/Skeletons/AppSrv/GenericMain.c'; fi`
@am__fastdepCC_TRUE@	$(am__mv) $(DEPDIR)/wimaxd-GenericMain.Tpo $(DEPDIR)/wimaxd-GenericMain.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='$(top_srcdir)/InfraStack/OSDependent/Linux/InfraStackModules/Skeletons/AppSrv/GenericMain.c' object='wimaxd-GenericMain.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(wimaxd_CFLAGS) $(CFLAGS) -c -o wimaxd-GenericMain.obj `if test -f '$(top_srcdir)/InfraStack/OSDependent/Linux/InfraStackModules/Skeletons/AppSrv/GenericMain.c'; then $(CYGPATH_W) '$(top_srcdir)/InfraStack/OSDependent/Linux/InfraStackModules/Skeletons/AppSrv/GenericMain.c'; else $(CYGPATH_W) '$(srcdir)/$(top_srcdir)/InfraStack/OSDependent/Linux/InfraStackModules/Skeletons/AppSrv/GenericMain.c'; fi`

wimaxd-GenericConsole.o: $(top_srcdir)/InfraStack/OSDependent/Linux/InfraStackModules/Skeletons/AppSrv/GenericConsole.c
@am__fastdepCC_TRUE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(wimaxd_CFLAGS) $(CFLAGS) -MT wimaxd-GenericConsole.o -MD -MP -MF $(DEPDIR)/wimaxd-GenericConsole.Tpo -c -o wimaxd-GenericConsole.o `test -f '$(top_srcdir)/InfraStack/OSDependent/Linux/InfraStackModules/Skeletons/AppSrv/GenericConsole.c' || echo '$(srcdir)/'`$(top_srcdir)/InfraStack/OSDependent/Linux/InfraStackModules/Skeletons/AppSrv/GenericConsole.c
@am__fastdepCC_TRUE@	$(am__mv) $(DEPDIR)/wimaxd-GenericConsole.Tpo $(DEPDIR)/wimaxd-GenericConsole.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='$(top_srcdir)/InfraStack/OSDependent/Linux/InfraStackModules/Skeletons/AppSrv/GenericConsole.c' object='wimaxd-GenericConsole.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(wimaxd_CFLAGS) $(CFLAGS) -c -o wimaxd-GenericConsole.o `test -f '$(top_srcdir)/InfraStack/OSDependent/Linux/InfraStackModules/Skeletons/AppSrv/GenericConsole.c' || echo '$(srcdir)/'`$(top_srcdir)/InfraStack/OSDependent/Linux/InfraStackModules/Skeletons/AppSrv/GenericConsole.c

wimaxd-GenericConsole.obj: $(top_srcdir)/InfraStack/OSDependent/Linux/InfraStackModules/Skeletons/AppSrv/GenericConsole.c
@am__fastdepCC_TRUE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(wimaxd_CFLAGS) $(CFLAGS) -MT wimaxd-GenericConsole.obj -MD -MP -MF $(DEPDIR)/wimaxd-GenericConsole.Tpo -c -o wimaxd-GenericConsole.obj `if test -f '$(top_srcdir)/InfraStack/OSDependent/Linux/InfraStackModules/Skeletons/AppSrv/GenericConsole.c'; then $(CYGPATH_W) '$(top_srcdir)/InfraStack/OSDependent/Linux/InfraStackModules/Skeletons/AppSrv/GenericConsole.c'; else $(CYGPATH_W) '$(srcdir)/$(top_srcdir)/InfraStack/OSDependent/Linux/InfraStackModules/Skeletons/AppSrv/GenericConsole.c'; fi`
@am__fastdepCC_TRUE@	$(am__mv) $(DEPDIR)/wimaxd-GenericConsole.Tpo $(DEPDIR)/wimaxd-GenericConsole.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='$(top_srcdir)/InfraStack/OSDependent/Linux/InfraStackModules/Skeletons/AppSrv/GenericConsole.c' object='wimaxd-GenericConsole.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(wimaxd_CFLAGS) $(CFLAGS) -c -o wimaxd-GenericConsole.obj `if test -f '$(top_srcdir)/InfraStack/OSDependent/Linux/InfraStackModules/Skeletons/AppSrv/GenericConsole.c'; then $(CYGPATH_W) '$(top_srcdir)/InfraStack/OSDependent/Linux/InfraStackModules/Skeletons/AppSrv/GenericConsole.c'; else $(CYGPATH_W) '$(srcdir)/$(top_srcdir)/InfraStack/OSDependent/Linux/InfraStackModules/Skeletons/AppSrv/GenericConsole.c'; fi`

wimaxd-GenericDaemon.o: $(top_srcdir)/InfraStack/OSDependent/Linux/InfraStackModules/Skeletons/AppSrv/GenericDaemon.c
@am__fastdepCC_TRUE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(wimaxd_CFLAGS) $(CFLAGS) -MT wimaxd-GenericDaemon.o -MD -MP -MF $(DEPDIR)/wimaxd-GenericDaemon.Tpo -c -o wimaxd-GenericDaemon.o `test -f '$(top_srcdir)/InfraStack/OSDependent/Linux/InfraStackModules/Skeletons/AppSrv/GenericDaemon.c' || echo '$(srcdir)/'`$(top_srcdir)/InfraStack/OSDependent/Linux/InfraStackModules/Skeletons/AppSrv/GenericDaemon.c
@am__fastdepCC_TRUE@	$(am__mv) $(DEPDIR)/wimaxd-GenericDaemon.Tpo $(DEPDIR)/wimaxd-GenericDaemon.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='$(top_srcdir)/InfraStack/OSDependent/Linux/InfraStackModules/Skeletons/AppSrv/GenericDaemon.c' object='wimaxd-GenericDaemon.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(wimaxd_CFLAGS) $(CFLAGS) -c -o wimaxd-GenericDaemon.o `test -f '$(top_srcdir)/InfraStack/OSDependent/Linux/InfraStackModules/Skeletons/AppSrv/GenericDaemon.c' || echo '$(srcdir)/'`$(top_srcdir)/InfraStack/OSDependent/Linux/InfraStackModules/Skeletons/AppSrv/GenericDaemon.c

wimaxd-GenericDaemon.obj: $(top_srcdir)/InfraStack/OSDependent/Linux/InfraStackModules/Skeletons/AppSrv/GenericDaemon.c
@am__fastdepCC_TRUE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(wimaxd_CFLAGS) $(CFLAGS) -MT wimaxd-GenericDaemon.obj -MD -MP -MF $(DEPDIR)/wimaxd-GenericDaemon.Tpo -c -o wimaxd-GenericDaemon.obj `if test -f '$(top_srcdir)/InfraStack/OSDependent/Linux/InfraStackModules/Skeletons/AppSrv/GenericDaemon.c'; then $(CYGPATH_W) '$(top_srcdir)/InfraStack/OSDependent/Linux/InfraStackModules/Skeletons/AppSrv/GenericDaemon.c'; else $(CYGPATH_W) '$(srcdir)/$(top_srcdir)/InfraStack/OSDependent/Linux/InfraStackModules/Skeletons/AppSrv/GenericDaemon.c'; fi`
@am__fastdepCC_TRUE@	$(am__mv) $(DEPDIR)/wimaxd-GenericDaemon.Tpo $(DEPDIR)/wimaxd-GenericDaemon.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='$(top_srcdir)/InfraStack/OSDependent/Linux/InfraStackModules/Skeletons/AppSrv/GenericDaemon.c' object='wimaxd-GenericDaemon.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(wimaxd_CFLAGS) $(CFLAGS) -c -o wimaxd-GenericDaemon.obj `if test -f '$(top_srcdir)/InfraStack/OSDependent/Linux/InfraStackModules/Skeletons/AppSrv/GenericDaemon.c'; then $(CYGPATH_W) '$(top_srcdir)/InfraStack/OSDependent/Linux/InfraStackModules/Skeletons/AppSrv/GenericDaemon.c'; else $(CYGPATH_W) '$(srcdir)/$(top_srcdir)/InfraStack/OSDependent/Linux/InfraStackModules/Skeletons/AppSrv/GenericDaemon.c'; fi`

wimaxd-LoadInstrumentation.o: $(top_srcdir)/InfraStack/OSDependent/Linux/InfraStackModules/Instrumentation/LoadInstrumentation.c
@am__fastdepCC_TRUE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(wimaxd_CFLAGS) $(CFLAGS) -MT wimaxd-LoadInstrumentation.o -MD -MP -MF $(DEPDIR)/wimaxd-LoadInstrumentation.Tpo -c -o wimaxd-LoadInstrumentation.o `test -f '$(top_srcdir)/InfraStack/OSDependent/Linux/InfraStackModules/Instrumentation/LoadInstrumentation.c' || echo '$(srcdir)/'`$(top_srcdir)/InfraStack/OSDependent/Linux/InfraStackModules/Instrumentation/LoadInstrumentation.c
@am__fastdepCC_TRUE@	$(am__mv) $(DEPDIR)/wimaxd-LoadInstrumentation.Tpo $(DEPDIR)/wimaxd-LoadInstrumentation.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='$(top_srcdir)/InfraStack/OSDependent/Linux/InfraStackModules/Instrumentation/LoadInstrumentation.c' object='wimaxd-LoadInstrumentation.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(wimaxd_CFLAGS) $(CFLAGS) -c -o wimaxd-LoadInstrumentation.o `test -f '$(top_srcdir)/InfraStack/OSDependent/Linux/InfraStackModules/Instrumentation/LoadInstrumentation.c' || echo '$(srcdir)/'`$(top_srcdir)/InfraStack/OSDependent/Linux/InfraStackModules/Instrumentation/LoadInstrumentation.c

wimaxd-LoadInstrumentation.obj: $(top_srcdir)/InfraStack/OSDependent/Linux/InfraStackModules/Instrumentation/LoadInstrumentation.c
@am__fastdepCC_TRUE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(wimaxd_CFLAGS) $(CFLAGS) -MT wimaxd-LoadInstrumentation.obj -MD -MP -MF $(DEPDIR)/wimaxd-LoadInstrumentation.Tpo -c -o wimaxd-LoadInstrumentation.obj `if test -f '$(top_srcdir)/InfraStack/OSDependent/Linux/InfraStackModules/Instrumentation/LoadInstrumentation.c'; then $(CYGPATH_W) '$(top_srcdir)/InfraStack/OSDependent/Linux/InfraStackModules/Instrumentation/LoadInstrumentation.c'; else $(CYGPATH_W) '$(srcdir)/$(top_srcdir)/InfraStack/OSDependent/Linux/InfraStackModules/Instrumentation/LoadInstrumentation.c'; fi`
@am__fastdepCC_TRUE@	$(am__mv) $(DEPDIR)/wimaxd-LoadInstrumentation.Tpo $(DEPDIR)/wimaxd-LoadInstrumentation.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='$(top_srcdir)/InfraStack/OSDependent/Linux/InfraStackModules/Instrumentation/LoadInstrumentation.c' object='wimaxd-LoadInstrumentation.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(wimaxd_CFLAGS) $(CFLAGS) -c -o wimaxd-LoadInstrumentation.obj `if test -f '$(top_srcdir)/InfraStack/OSDependent/Linux/InfraStackModules/Instrumentation/LoadInstrumentation.c'; then $(CYGPATH_W) '$(top_srcdir)/InfraStack/OSDependent/Linux/InfraStackModules/Instrumentation/LoadInstrumentation.c'; else $(CYGPATH_W) '$(srcdir)/$(top_srcdir)/InfraStack/OSDependent/Linux/InfraStackModules/Instrumentation/LoadInstrumentation.c'; fi`

wimaxd-DeviceConfiguration.o: $(srcdir)/DeviceConfiguration.c
@am__fastdepCC_TRUE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(wimaxd_CFLAGS) $(CFLAGS) -MT wimaxd-DeviceConfiguration.o -MD -MP -MF $(DEPDIR)/wimaxd-DeviceConfiguration.Tpo -c -o wimaxd-DeviceConfiguration.o `test -f '$(srcdir)/DeviceConfiguration.c' || echo '$(srcdir)/'`$(srcdir)/DeviceConfiguration.c
@am__fastdepCC_TRUE@	$(am__mv) $(DEPDIR)/wimaxd-DeviceConfiguration.Tpo $(DEPDIR)/wimaxd-DeviceConfiguration.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='$(srcdir)/DeviceConfiguration.c' object='wimaxd-DeviceConfiguration.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(wimaxd_CFLAGS) $(CFLAGS) -c -o wimaxd-DeviceConfiguration.o `test -f '$(srcdir)/DeviceConfiguration.c' || echo '$(srcdir)/'`$(srcdir)/DeviceConfiguration.c

wimaxd-DeviceConfiguration.obj: $(srcdir)/DeviceConfiguration.c
@am__fastdepCC_TRUE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(wimaxd_CFLAGS) $(CFLAGS) -MT wimaxd-DeviceConfiguration.obj -MD -MP -MF $(DEPDIR)/wimaxd-DeviceConfiguration.Tpo -c -o wimaxd-DeviceConfiguration.obj `if test -f '$(srcdir)/DeviceConfiguration.c'; then $(CYGPATH_W) '$(srcdir)/DeviceConfiguration.c'; else $(CYGPATH_W) '$(srcdir)/$(srcdir)/DeviceConfiguration.c'; fi`
@am__fastdepCC_TRUE@	$(am__mv) $(DEPDIR)/wimaxd-DeviceConfiguration.Tpo $(DEPDIR)/wimaxd-DeviceConfiguration.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='$(srcdir)/DeviceConfiguration.c' object='wimaxd-DeviceConfiguration.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(wimaxd_CFLAGS) $(CFLAGS) -c -o wimaxd-DeviceConfiguration.obj `if test -f '$(srcdir)/DeviceConfiguration.c'; then $(CYGPATH_W) '$(srcdir)/DeviceConfiguration.c'; else $(CYGPATH_W) '$(srcdir)/$(srcdir)/DeviceConfiguration.c'; fi`

mostlyclean-libtool:
	-rm -f *.lo

clean-libtool:
	-rm -rf .libs _libs
install-configDATA: $(config_DATA)
	@$(NORMAL_INSTALL)
	test -z "$(configdir)" || $(MKDIR_P) "$(DESTDIR)$(configdir)"
	@list='$(config_DATA)'; test -n "$(configdir)" || list=; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_DATA) $$files '$(DESTDIR)$(configdir)'"; \
	  $(INSTALL_DATA) $$files "$(DESTDIR)$(configdir)" || exit $$?; \
	done

uninstall-configDATA:
	@$(NORMAL_UNINSTALL)
	@list='$(config_DATA)'; test -n "$(configdir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	test -n "$$files" || exit 0; \
	echo " ( cd '$(DESTDIR)$(configdir)' && rm -f" $$files ")"; \
	cd "$(DESTDIR)$(configdir)" && rm -f $$files
install-modprobeDATA: $(modprobe_DATA)
	@$(NORMAL_INSTALL)
	test -z "$(modprobedir)" || $(MKDIR_P) "$(DESTDIR)$(modprobedir)"
	@list='$(modprobe_DATA)'; test -n "$(modprobedir)" || list=; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_DATA) $$files '$(DESTDIR)$(modprobedir)'"; \
	  $(INSTALL_DATA) $$files "$(DESTDIR)$(modprobedir)" || exit $$?; \
	done

uninstall-modprobeDATA:
	@$(NORMAL_UNINSTALL)
	@list='$(modprobe_DATA)'; test -n "$(modprobedir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	test -n "$$files" || exit 0; \
	echo " ( cd '$(DESTDIR)$(modprobedir)' && rm -f" $$files ")"; \
	cd "$(DESTDIR)$(modprobedir)" && rm -f $$files
install-pkgdataDATA: $(pkgdata_DATA)
	@$(NORMAL_INSTALL)
	test -z "$(pkgdatadir)" || $(MKDIR_P) "$(DESTDIR)$(pkgdatadir)"
	@list='$(pkgdata_DATA)'; test -n "$(pkgdatadir)" || list=; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_DATA) $$files '$(DESTDIR)$(pkgdatadir)'"; \
	  $(INSTALL_DATA) $$files "$(DESTDIR)$(pkgdatadir)" || exit $$?; \
	done

uninstall-pkgdataDATA:
	@$(NORMAL_UNINSTALL)
	@list='$(pkgdata_DATA)'; test -n "$(pkgdatadir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	test -n "$$files" || exit 0; \
	echo " ( cd '$(DESTDIR)$(pkgdatadir)' && rm -f" $$files ")"; \
	cd "$(DESTDIR)$(pkgdatadir)" && rm -f $$files
install-pkglocalstateDATA: $(pkglocalstate_DATA)
	@$(NORMAL_INSTALL)
	test -z "$(pkglocalstatedir)" || $(MKDIR_P) "$(DESTDIR)$(pkglocalstatedir)"
	@list='$(pkglocalstate_DATA)'; test -n "$(pkglocalstatedir)" || list=; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_DATA) $$files '$(DESTDIR)$(pkglocalstatedir)'"; \
	  $(INSTALL_DATA) $$files "$(DESTDIR)$(pkglocalstatedir)" || exit $$?; \
	done

uninstall-pkglocalstateDATA:
	@$(NORMAL_UNINSTALL)
	@list='$(pkglocalstate_DATA)'; test -n "$(pkglocalstatedir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	test -n "$$files" || exit 0; \
	echo " ( cd '$(DESTDIR)$(pkglocalstatedir)' && rm -f" $$files ")"; \
	cd "$(DESTDIR)$(pkglocalstatedir)" && rm -f $$files
install-udevrulesDATA: $(udevrules_DATA)
	@$(NORMAL_INSTALL)
	test -z "$(udevrulesdir)" || $(MKDIR_P) "$(DESTDIR)$(udevrulesdir)"
	@list='$(udevrules_DATA)'; test -n "$(udevrulesdir)" || list=; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_DATA) $$files '$(DESTDIR)$(udevrulesdir)'"; \
	  $(INSTALL_DATA) $$files "$(DESTDIR)$(udevrulesdir)" || exit $$?; \
	done

uninstall-udevrulesDATA:
	@$(NORMAL_UNINSTALL)
	@list='$(udevrules_DATA)'; test -n "$(udevrulesdir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	test -n "$$files" || exit 0; \
	echo " ( cd '$(DESTDIR)$(udevrulesdir)' && rm -f" $$files ")"; \
	cd "$(DESTDIR)$(udevrulesdir)" && rm -f $$files

ID: $(HEADERS) $(SOURCES) $(LISP) $(TAGS_FILES)
	list='$(SOURCES) $(HEADERS) $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	mkid -fID $$unique
tags: TAGS

TAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	set x; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	shift; \
	if test -z "$(ETAGS_ARGS)$$*$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  if test $$# -gt 0; then \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      "$$@" $$unique; \
	  else \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      $$unique; \
	  fi; \
	fi
ctags: CTAGS
CTAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	test -z "$(CTAGS_ARGS)$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && $(am__cd) $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) "$$here"

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

distdir: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	list='$(DISTFILES)'; \
	  dist_files=`for file in $$list; do echo $$file; done | \
	  sed -e "s|^$$srcdirstrip/||;t" \
	      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \
	case $$dist_files in \
	  */*) $(MKDIR_P) `echo "$$dist_files" | \
			   sed '/\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \
			   sort -u` ;; \
	esac; \
	for file in $$dist_files; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  if test -d $$d/$$file; then \
	    dir=`echo "/$$file" | sed -e 's,/[^/]*$$,,'`; \
	    if test -d "$(distdir)/$$file"; then \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -fpR $(srcdir)/$$file "$(distdir)$$dir" || exit 1; \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    cp -fpR $$d/$$file "$(distdir)$$dir" || exit 1; \
	  else \
	    test -f "$(distdir)/$$file" \
	    || cp -p $$d/$$file "$(distdir)/$$file" \
	    || exit 1; \
	  fi; \
	done
	$(MAKE) $(AM_MAKEFLAGS) \
	  top_distdir="$(top_distdir)" distdir="$(distdir)" \
	  dist-hook
check-am: all-am
check: check-am
all-am: Makefile $(PROGRAMS) $(DATA)
installdirs:
	for dir in "$(DESTDIR)$(bindir)" "$(DESTDIR)$(configdir)" "$(DESTDIR)$(modprobedir)" "$(DESTDIR)$(pkgdatadir)" "$(DESTDIR)$(pkglocalstatedir)" "$(DESTDIR)$(udevrulesdir)"; do \
	  test -z "$$dir" || $(MKDIR_P) "$$dir"; \
	done
install: install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	$(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	  install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	  `test -z '$(STRIP)' || \
	    echo "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'"` install
mostlyclean-generic:

clean-generic:
	-test -z "$(CLEANFILES)" || rm -f $(CLEANFILES)

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)
	-test . = "$(srcdir)" || test -z "$(CONFIG_CLEAN_VPATH_FILES)" || rm -f $(CONFIG_CLEAN_VPATH_FILES)
	-test -z "$(DISTCLEANFILES)" || rm -f $(DISTCLEANFILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
clean: clean-am

clean-am: clean-binPROGRAMS clean-generic clean-libtool mostlyclean-am

distclean: distclean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-tags

dvi: dvi-am

dvi-am:

html: html-am

html-am:

info: info-am

info-am:

install-data-am: install-configDATA install-modprobeDATA \
	install-pkgdataDATA install-pkglocalstateDATA \
	install-udevrulesDATA
	@$(NORMAL_INSTALL)
	$(MAKE) $(AM_MAKEFLAGS) install-data-hook
install-dvi: install-dvi-am

install-dvi-am:

install-exec-am: install-binPROGRAMS

install-html: install-html-am

install-html-am:

install-info: install-info-am

install-info-am:

install-man:

install-pdf: install-pdf-am

install-pdf-am:

install-ps: install-ps-am

install-ps-am:

installcheck-am:

maintainer-clean: maintainer-clean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool

pdf: pdf-am

pdf-am:

ps: ps-am

ps-am:

uninstall-am: uninstall-binPROGRAMS uninstall-configDATA \
	uninstall-modprobeDATA uninstall-pkgdataDATA \
	uninstall-pkglocalstateDATA uninstall-udevrulesDATA
	@$(NORMAL_INSTALL)
	$(MAKE) $(AM_MAKEFLAGS) uninstall-hook
.MAKE: install-am install-data-am install-strip uninstall-am

.PHONY: CTAGS GTAGS all all-am check check-am clean clean-binPROGRAMS \
	clean-generic clean-libtool ctags dist-hook distclean \
	distclean-compile distclean-generic distclean-libtool \
	distclean-tags distdir dvi dvi-am html html-am info info-am \
	install install-am install-binPROGRAMS install-configDATA \
	install-data install-data-am install-data-hook install-dvi \
	install-dvi-am install-exec install-exec-am install-html \
	install-html-am install-info install-info-am install-man \
	install-modprobeDATA install-pdf install-pdf-am \
	install-pkgdataDATA install-pkglocalstateDATA install-ps \
	install-ps-am install-strip install-udevrulesDATA installcheck \
	installcheck-am installdirs maintainer-clean \
	maintainer-clean-generic mostlyclean mostlyclean-compile \
	mostlyclean-generic mostlyclean-libtool pdf pdf-am ps ps-am \
	tags uninstall uninstall-am uninstall-binPROGRAMS \
	uninstall-configDATA uninstall-hook uninstall-modprobeDATA \
	uninstall-pkgdataDATA uninstall-pkglocalstateDATA \
	uninstall-udevrulesDATA


export LD_RUN_PATH=$(libdir)

WiMAX_DB.bin WiMAX_Def.bin: $(WIMAX_DB_BIN_FILE)
	cp $(WIMAX_DB_BIN_FILE) $@

# If we get here, this means the file has to be generated
$(top_distdir)/$(VER_INFO_BIN_FILE_SRC) \
$(top_buildir)/$(VER_INFO_BIN_FILE_SRC) \
	::
	@echo $@: generating distribution version
	@[ -z "$(git_version)" ] \
		&& echo "git-version-n/a" > $@ \
		|| echo $(git_version) > $@
# FIXME: find a better sollution for this
	@echo 3.5.2 >> $@
	@[ -z "$(git_version)" ] \
		&& echo "WARNING: Git version not available" 1>&2 \
		|| true

dist-hook: $(top_distdir)/$(VER_INFO_BIN_FILE_SRC)

# These rules are only used during build time, so packaging (make
# dist) is not affected.
#
# If the bindb is enabled, the version information comes from the
# build prepared and it has to be used yes-or-yes. If bindb is
# disabled, we either use the one that comes prepackaged or generate
# it on the run with git.
#
# FIXME: find a better sollution for the 3.5.2 thingie
#
# When generating, we take the original always as a reference and if
# the new one is different to the original, we just update it :)
Ver_info.bin: $(VER_INFO_BIN_FILE)
	cp $(VER_INFO_BIN_FILE) $@
@BINDB_ENABLED_FALSE@	@if ! [ -z "$(git_version)" ]; \
@BINDB_ENABLED_FALSE@	then \
@BINDB_ENABLED_FALSE@		echo $@: Generating, git version $(git_version); \
@BINDB_ENABLED_FALSE@		echo $(git_version) > $@.new; \
@BINDB_ENABLED_FALSE@		echo 3.5.2 >> $@.new; \
@BINDB_ENABLED_FALSE@		cmp $@ $@.new || mv $@.new $@ && rm -f $@.new; \
@BINDB_ENABLED_FALSE@	else \
@BINDB_ENABLED_FALSE@		echo $@: Git n/a, copying from original $(VER_INFO_BIN_FILE); \
@BINDB_ENABLED_FALSE@	fi 

config.xml: $(top_srcdir)/InfraStack/OSDependent/Linux/Config/config.xml.in
	sed \
	-e "s|@@pkgdatadir@@|$(pkgdatadir)|g" \
	-e "s|@@lib@@dir@@|$(libdir)|g" \
	-e "s|@@sup_lib_path@@|$(sup_lib_path)|g" \
	-e "s|@@use_inst@@|$(USE_INST)|g" \
	-e "s|<DisableObfuscate>.*\<DisableObfuscate>|<DisableObfuscate>$(DISABLE_OBFUSCATE)</DisableObfuscate>|" \
	$< > $@

dhcp_renew.sh: $(top_srcdir)/InfraStack/OSDependent/Linux/Config/dhcp_renew.sh.in
	sed \
	-e "s|@@varrundir@@|$(varrundir)|g" \
	-e "s|@@pkgvarlogdir@@|$(pkgvarlogdir)|g" \
	$< > $@

iwmxsdk.rules: iwmxsdk.rules.in
	sed \
	-e "s|@@bin@@dir@@|$(bindir)|g" \
	-e "s|@@WIMAXD_NAME@@|$(WIMAXD_NAME)|g" \
	$< > $@

install-data-hook:
# 	  Create log directory
	  test -z $(DESTDIR)$(LOGDIR) || $(MKDIR_P) $(DESTDIR)$(LOGDIR) 
	  chmod 777 $(DESTDIR)$(LOGDIR)	

#	  Set the permissions on the dhcp script.
	  chmod +x $(DESTDIR)$(pkgdatadir)/dhcp_renew.sh

uninstall-hook:
	rm -fr $(DESTDIR)$(LOGDIR)
	rm -f iwmxsdk.rules

# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
