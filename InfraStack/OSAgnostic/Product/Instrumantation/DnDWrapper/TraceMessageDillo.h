/*****************************************************************************
 * Automatically generated by Bitman2Base V4.2.5.0 (5.0) Bitman2 (exe) V4.2.5.0 (5.0) - DO NOT EDIT!
 * Generated at 1/22/2009 1:29:21 PM
 *
 * Project : Ofer
 * Module  : Trace
 * Author  : Igor Brainman
 * Date    : 23/07/2006
 * Purpose : Traces
 *****************************************************************************/

#if !defined(_BITMAN_TRACEMESSAGEDILLO_H_)
#define _BITMAN_TRACEMESSAGEDILLO_H_


/*lint ++flb */
// Include the Bitman common header file
#include "BitmanCommon.h"

// Include headers generated from XMLs (the source is both XMLs and the command-line)
#include "BasicBitmanTypes.h"

// Include user C header files

// Include user C header files (supplied in the command-line)


// Bitman version Accessor...
#ifndef BM_BITMAN_VERSION
#define BM_BITMAN_VERSION 	"Bitman2Base V4.2.5.0 (5.0) Bitman2 (exe) V4.2.5.0 (5.0)"
#endif 

// Definitions

#define BM_DilloMsgStatus_msgID_MASK (0x0FFF)

#define BM_DilloMsgStatus_msgID_OFFSET (0)

#define BM_DilloMsgStatus_msgID_SHIFTED_MASK (0x0FFF)

#define BM_DilloMsgStatus_numOfParams_MASK (0x0003)

#define BM_DilloMsgStatus_numOfParams_OFFSET (12)

#define BM_DilloMsgStatus_numOfParams_SHIFTED_MASK (0x3000)

#define BM_DilloMsgStatus_bufferOverrun_MASK (0x0001)

#define BM_DilloMsgStatus_bufferOverrun_OFFSET (14)

#define BM_DilloMsgStatus_bufferOverrun_SHIFTED_MASK (0x4000)

#define BM_DilloMsgStatus_timeStampPresent_MASK (0x0001)

#define BM_DilloMsgStatus_timeStampPresent_OFFSET (15)

#define BM_DilloMsgStatus_timeStampPresent_SHIFTED_MASK (0x8000)

// Maximal length of user string
#define USER_STR_MAX_LEN (1024)

// Maximal length of file name path
#define FILE_NAME_MAX_LEN (1024)

typedef UINT8 DilloCompileTimeMsgData[2056];

/*lint -save -e806 */ /* Small bit field is signed rather than unsigned*/
#ifdef BMI_ENDIANNESS_LITTLE
#if (!defined __arm && !defined __arc)
#pragma pack( push, 1 )
#endif
#ifdef __arm
typedef __packed struct
#elif defined __arc
typedef _Packed struct
#else
typedef struct
#endif
{
	UINT8 _severity : 8; //Trace severity, may be 0..7
	UINT8 _moduleID : 8; //Module ID, should be on of defined in TraceModules.bm
	BMS_LittleEndianness_Char _userString[1024]; //format string (zero terminated!) - like printf
	BMS_LittleEndianness_Char _fileName[1024]; //full file name path (zero terminated!)
	UINT16 _reserved : 16; //Reserved - to align to word boundaries
	UINT32 _lineNumber; //file line number
} BMS_DilloCompileTimeMsgData;

#if (!defined __arm && !defined __arc)
#pragma pack( pop )
#endif

#else /* BMI_ENDIANNESS_BIG */
#if (!defined __arm && !defined __arc)
#pragma pack( push, 1 )
#endif
#ifdef __arm
typedef __packed struct
#elif defined __arc
typedef _Packed struct
#else
typedef struct
#endif
{
	UINT32 _lineNumber; //file line number
	UINT16 _reserved : 16; //Reserved - to align to word boundaries
	BMS_LittleEndianness_Char _fileName[1024]; //full file name path (zero terminated!)
	BMS_LittleEndianness_Char _userString[1024]; //format string (zero terminated!) - like printf
	UINT8 _moduleID : 8; //Module ID, should be on of defined in TraceModules.bm
	UINT8 _severity : 8; //Trace severity, may be 0..7
} BMS_DilloCompileTimeMsgData;

#if (!defined __arm && !defined __arc)
#pragma pack( pop )
#endif

#endif	/*#ifdef BMI_ENDIANNESS_LITTLE*/
/*lint -restore */

// COMPOSITE: Full name: 'DilloCompileTimeMsgData' Type: 'DilloCompileTimeMsgData', Top-level, Non-instance, No bitoff root
#define BM_DilloCompileTimeMsgData_severity_GET_POS( base_ptr, out_ptr, out_bitoff )\
{\
	/*lint --e{*} */\
	out_ptr = base_ptr;\
	out_bitoff = 0;\
}

#define BM_DilloCompileTimeMsgData_severity_GET_POS_ALIGNED( base_ptr, out_ptr )\
{\
	/*lint --e{*} */\
	UINT bmlocal57_tmp_bitoff;\
	BM_DilloCompileTimeMsgData_severity_GET_POS( base_ptr, out_ptr, bmlocal57_tmp_bitoff );\
	BMI_NORMALIZE_BITOFF(out_ptr, bmlocal57_tmp_bitoff);\
}

#define BM_DilloCompileTimeMsgData_severity_POS_ALIGNED 0

// Alignment of DilloCompileTimeMsgData_severity: accumulated=(0,0, ABA=4), parent.base=(0,0, ABA=4)
#define BM_DilloCompileTimeMsgData_severity_GET_SIZE( base_ptr, out_bytes, out_bits )\
{\
	/*lint --e{*} */\
	out_bytes = 1;\
	out_bits = 0;\
	BMI_UNUSED_VAR( base_ptr );\
}

#define BM_DilloCompileTimeMsgData_severity_GET( base_ptr, out_val )\
{\
	/*lint --e{*} */\
	PVOID bmlocal58_my_ptr;\
	UINT bmlocal59_my_bitoff;\
	BM_DilloCompileTimeMsgData_severity_GET_POS( base_ptr, bmlocal58_my_ptr, bmlocal59_my_bitoff );\
	if( BMI_MACHINE_ARM_LITTLE == BMI_MACHINE_VALUE )\
	{\
		(out_val) = (UINT8)BMI_32BIT_EXTRACT( (BMI_GET_8BIT_PTR_CONTENTS( BMI_PTR_TO_NUMERIC_CAST(bmlocal58_my_ptr)) ), 0, 8, 0);\
	}\
	else if( BMI_MACHINE_INTEL_LITTLE == BMI_MACHINE_VALUE )\
	{\
		(out_val) = (UINT8)BMI_32BIT_EXTRACT( (BMI_GET_8BIT_PTR_CONTENTS( BMI_PTR_TO_NUMERIC_CAST(bmlocal58_my_ptr)) ), 0, 8, 0);\
	}\
	else\
	{\
		BMI_GENERIC_32BIT_LITTLE_GET( bmlocal58_my_ptr, bmlocal59_my_bitoff, 8, UINT8, out_val, 0x00000000 );\
	}\
}

BMI_INLINE UINT8 BM_INLINE_DilloCompileTimeMsgData_severity_GET(PVOID base_ptr)
{
	/*lint --e{*} */
	UINT8 bmlocal60_tmp_var;
	BM_DilloCompileTimeMsgData_severity_GET( base_ptr, bmlocal60_tmp_var );
	return bmlocal60_tmp_var;
}

#define BM_DilloCompileTimeMsgData_severity_SET( base_ptr, in_val )\
{\
	/*lint --e{*} */\
	PVOID bmlocal61_my_ptr;\
	UINT bmlocal62_my_bitoff;\
	BM_DilloCompileTimeMsgData_severity_GET_POS( base_ptr, bmlocal61_my_ptr, bmlocal62_my_bitoff );\
	if( BMI_MACHINE_ARM_LITTLE == BMI_MACHINE_VALUE )\
	{\
		BMI_32BIT_CLEAR_ASSIGN_TYPE( BMI_GET_8BIT_PTR_CONTENTS( BMI_PTR_TO_NUMERIC_CAST(bmlocal61_my_ptr) ), (in_val), 0, 0, 8, UINT8 );\
	}\
	else if( BMI_MACHINE_INTEL_LITTLE == BMI_MACHINE_VALUE )\
	{\
		BMI_32BIT_CLEAR_ASSIGN_TYPE( BMI_GET_8BIT_PTR_CONTENTS( BMI_PTR_TO_NUMERIC_CAST(bmlocal61_my_ptr) ), (in_val), 0, 0, 8, UINT8 );\
	}\
	else\
	{\
		BMI_GENERIC_32BIT_LITTLE_SET( bmlocal61_my_ptr, bmlocal62_my_bitoff, 8, in_val, 0x00000000 );\
	}\
}

// DilloCompileTimeMsgData_severity: IS_DEFAULT accessor is not defined because no default value was specified.
// DilloCompileTimeMsgData_severity: SET_DEFAULT accessor is not defined because no default value was specified.
// DilloCompileTimeMsgData_severity: IS_RESET accessor is not defined because no reset value was specified.
// DilloCompileTimeMsgData_severity: SET_RESET accessor is not defined because no reset value was specified.
// DilloCompileTimeMsgData_severity: CLEAR accessor is not defined because of incompatible access rights. Specified: RW Required: W1C, WO1C.
// DilloCompileTimeMsgData_severity: SET(W1S) accessor is not defined because of incompatible access rights. Specified: RW Required: W1S, WO1S.
#define BM_DilloCompileTimeMsgData_severity_DUMP_DEPTH( base_ptr, depth )\
{\
	/*lint --e{*} */\
	UINT8 bmlocal63_out_val;\
	BM_DilloCompileTimeMsgData_severity_GET( base_ptr, bmlocal63_out_val );\
	/*lint -e(571) */\
	BMI_FORMAT_DUMP(depth, "severity", 8, (UINT)(bmlocal63_out_val), "%d", 1);\
}

#define BM_DilloCompileTimeMsgData_severity_DUMP( base_ptr )\
{\
	/*lint --e{*} */\
	BM_DilloCompileTimeMsgData_severity_DUMP_DEPTH( base_ptr, 0 );\
}

#define BM_DilloCompileTimeMsgData_severity_INCREMENT( base_ptr )\
{\
	/*lint --e{*} */\
	PVOID bmlocal64_my_ptr;\
	UINT bmlocal65_my_bitoff;\
	BM_DilloCompileTimeMsgData_severity_GET_POS( base_ptr, bmlocal64_my_ptr, bmlocal65_my_bitoff );\
	(*((UINT8*)bmlocal64_my_ptr))++;\
	BMI_UNUSED_VAR( bmlocal65_my_bitoff );\
}

// DilloCompileTimeMsgData_severity: Validation accessors are not defined because validation condition was not specified.
#define BM_DilloCompileTimeMsgData_severity_GET_BYTES_SIZE( base_ptr, out_bytes )\
{\
	/*lint --e{*} */\
	UINT bmlocal66_tmp_bits;\
	BM_DilloCompileTimeMsgData_severity_GET_SIZE( base_ptr, out_bytes, bmlocal66_tmp_bits );\
	BMI_ROUND_UP_1BYTES( out_bytes, bmlocal66_tmp_bits );\
}

#define BM_DilloCompileTimeMsgData_severity_BYTES_SIZE 1

#define BM_DilloCompileTimeMsgData_moduleID_GET_POS( base_ptr, out_ptr, out_bitoff )\
{\
	/*lint --e{*} */\
	UINT bmlocal69_acc_bytes;\
	UINT bmlocal70_acc_bits;\
	out_ptr = base_ptr;\
	out_bitoff = 0;\
	bmlocal69_acc_bytes = 1;\
	bmlocal70_acc_bits = 0;\
	BMI_ADD_ASSIGN_PTR( out_ptr, bmlocal69_acc_bytes );\
	out_bitoff += bmlocal70_acc_bits;\
}

#define BM_DilloCompileTimeMsgData_moduleID_GET_POS_ALIGNED( base_ptr, out_ptr )\
{\
	/*lint --e{*} */\
	UINT bmlocal71_tmp_bitoff;\
	BM_DilloCompileTimeMsgData_moduleID_GET_POS( base_ptr, out_ptr, bmlocal71_tmp_bitoff );\
	BMI_NORMALIZE_BITOFF(out_ptr, bmlocal71_tmp_bitoff);\
}

#define BM_DilloCompileTimeMsgData_moduleID_POS_ALIGNED 1

// Alignment of DilloCompileTimeMsgData_moduleID: accumulated=(1,0, ABA=4), parent.base=(0,0, ABA=4)
#define BM_DilloCompileTimeMsgData_moduleID_GET_SIZE( base_ptr, out_bytes, out_bits )\
{\
	/*lint --e{*} */\
	out_bytes = 1;\
	out_bits = 0;\
	BMI_UNUSED_VAR( base_ptr );\
}

#define BM_DilloCompileTimeMsgData_moduleID_GET( base_ptr, out_val )\
{\
	/*lint --e{*} */\
	PVOID bmlocal72_my_ptr;\
	UINT bmlocal73_my_bitoff;\
	BM_DilloCompileTimeMsgData_moduleID_GET_POS( base_ptr, bmlocal72_my_ptr, bmlocal73_my_bitoff );\
	if( BMI_MACHINE_ARM_LITTLE == BMI_MACHINE_VALUE )\
	{\
		(out_val) = (UINT8)BMI_32BIT_EXTRACT( (BMI_GET_8BIT_PTR_CONTENTS( BMI_PTR_TO_NUMERIC_CAST(bmlocal72_my_ptr)) ), 0, 8, 0);\
	}\
	else if( BMI_MACHINE_INTEL_LITTLE == BMI_MACHINE_VALUE )\
	{\
		(out_val) = (UINT8)BMI_32BIT_EXTRACT( (BMI_GET_8BIT_PTR_CONTENTS( BMI_PTR_TO_NUMERIC_CAST(bmlocal72_my_ptr)) ), 0, 8, 0);\
	}\
	else\
	{\
		BMI_GENERIC_32BIT_LITTLE_GET( bmlocal72_my_ptr, bmlocal73_my_bitoff, 8, UINT8, out_val, 0x00000001 );\
	}\
}

BMI_INLINE UINT8 BM_INLINE_DilloCompileTimeMsgData_moduleID_GET(PVOID base_ptr)
{
	/*lint --e{*} */
	UINT8 bmlocal74_tmp_var;
	BM_DilloCompileTimeMsgData_moduleID_GET( base_ptr, bmlocal74_tmp_var );
	return bmlocal74_tmp_var;
}

#define BM_DilloCompileTimeMsgData_moduleID_SET( base_ptr, in_val )\
{\
	/*lint --e{*} */\
	PVOID bmlocal75_my_ptr;\
	UINT bmlocal76_my_bitoff;\
	BM_DilloCompileTimeMsgData_moduleID_GET_POS( base_ptr, bmlocal75_my_ptr, bmlocal76_my_bitoff );\
	if( BMI_MACHINE_ARM_LITTLE == BMI_MACHINE_VALUE )\
	{\
		BMI_32BIT_CLEAR_ASSIGN_TYPE( BMI_GET_8BIT_PTR_CONTENTS( BMI_PTR_TO_NUMERIC_CAST(bmlocal75_my_ptr) ), (in_val), 0, 0, 8, UINT8 );\
	}\
	else if( BMI_MACHINE_INTEL_LITTLE == BMI_MACHINE_VALUE )\
	{\
		BMI_32BIT_CLEAR_ASSIGN_TYPE( BMI_GET_8BIT_PTR_CONTENTS( BMI_PTR_TO_NUMERIC_CAST(bmlocal75_my_ptr) ), (in_val), 0, 0, 8, UINT8 );\
	}\
	else\
	{\
		BMI_GENERIC_32BIT_LITTLE_SET( bmlocal75_my_ptr, bmlocal76_my_bitoff, 8, in_val, 0x00000001 );\
	}\
}

// DilloCompileTimeMsgData_moduleID: IS_DEFAULT accessor is not defined because no default value was specified.
// DilloCompileTimeMsgData_moduleID: SET_DEFAULT accessor is not defined because no default value was specified.
// DilloCompileTimeMsgData_moduleID: IS_RESET accessor is not defined because no reset value was specified.
// DilloCompileTimeMsgData_moduleID: SET_RESET accessor is not defined because no reset value was specified.
// DilloCompileTimeMsgData_moduleID: CLEAR accessor is not defined because of incompatible access rights. Specified: RW Required: W1C, WO1C.
// DilloCompileTimeMsgData_moduleID: SET(W1S) accessor is not defined because of incompatible access rights. Specified: RW Required: W1S, WO1S.
#define BM_DilloCompileTimeMsgData_moduleID_DUMP_DEPTH( base_ptr, depth )\
{\
	/*lint --e{*} */\
	UINT8 bmlocal77_out_val;\
	BM_DilloCompileTimeMsgData_moduleID_GET( base_ptr, bmlocal77_out_val );\
	/*lint -e(571) */\
	BMI_FORMAT_DUMP(depth, "moduleID", 8, (UINT)(bmlocal77_out_val), "%d", 1);\
}

#define BM_DilloCompileTimeMsgData_moduleID_DUMP( base_ptr )\
{\
	/*lint --e{*} */\
	BM_DilloCompileTimeMsgData_moduleID_DUMP_DEPTH( base_ptr, 0 );\
}

#define BM_DilloCompileTimeMsgData_moduleID_INCREMENT( base_ptr )\
{\
	/*lint --e{*} */\
	PVOID bmlocal78_my_ptr;\
	UINT bmlocal79_my_bitoff;\
	BM_DilloCompileTimeMsgData_moduleID_GET_POS( base_ptr, bmlocal78_my_ptr, bmlocal79_my_bitoff );\
	(*((UINT8*)bmlocal78_my_ptr))++;\
	BMI_UNUSED_VAR( bmlocal79_my_bitoff );\
}

// DilloCompileTimeMsgData_moduleID: Validation accessors are not defined because validation condition was not specified.
#define BM_DilloCompileTimeMsgData_moduleID_GET_BYTES_SIZE( base_ptr, out_bytes )\
{\
	/*lint --e{*} */\
	UINT bmlocal80_tmp_bits;\
	BM_DilloCompileTimeMsgData_moduleID_GET_SIZE( base_ptr, out_bytes, bmlocal80_tmp_bits );\
	BMI_ROUND_UP_1BYTES( out_bytes, bmlocal80_tmp_bits );\
}

#define BM_DilloCompileTimeMsgData_moduleID_BYTES_SIZE 1

#define BM_DilloCompileTimeMsgData_userString_GET_POS( base_ptr, out_ptr, out_bitoff )\
{\
	/*lint --e{*} */\
	UINT bmlocal83_acc_bytes;\
	UINT bmlocal84_acc_bits;\
	out_ptr = base_ptr;\
	out_bitoff = 0;\
	bmlocal83_acc_bytes = 2;\
	bmlocal84_acc_bits = 0;\
	BMI_ADD_ASSIGN_PTR( out_ptr, bmlocal83_acc_bytes );\
	out_bitoff += bmlocal84_acc_bits;\
}

#define BM_DilloCompileTimeMsgData_userString_GET_POS_ALIGNED( base_ptr, out_ptr )\
{\
	/*lint --e{*} */\
	UINT bmlocal85_tmp_bitoff;\
	BM_DilloCompileTimeMsgData_userString_GET_POS( base_ptr, out_ptr, bmlocal85_tmp_bitoff );\
	BMI_NORMALIZE_BITOFF(out_ptr, bmlocal85_tmp_bitoff);\
}

#define BM_DilloCompileTimeMsgData_userString_POS_ALIGNED 2

// ARRAY: DilloCompileTimeMsgData_userString
#define BM_DilloCompileTimeMsgData_userString_GET_SIZE( base_ptr, out_bytes, out_bits )\
{\
	/*lint --e{*} */\
	out_bytes = 1024;\
	out_bits = 0;\
	BMI_UNUSED_VAR( base_ptr );\
}

BMI_INLINE UINT BM_INLINE_DilloCompileTimeMsgData_userString_GET_SIZE()
{
	/*lint --e{*} */
	return 1024;
}

#define BM_DilloCompileTimeMsgData_userString_GET_DIMENSION_ELEMENT_COUNT( base_ptr, index, out_element_count )\
{\
	/*lint --e{*} */\
	switch( index )\
	{\
		case (0):\
		out_element_count = 1024;\
		break;\
		default:\
		out_element_count = 0;\
		break;\
	}\
	BMI_UNUSED_VAR( base_ptr );\
}

#define BM_DilloCompileTimeMsgData_userString_GET_ELEMENT_POS( base_ptr, idx0, out_ptr, out_bitoff )\
{\
	/*lint --e{*} */\
	PVOID bmlocal86_out_ptr;\
	UINT bmlocal87_out_bitoff;\
	UINT bmlocal88_element_size_bytes;\
	UINT bmlocal89_element_size_bits;\
	BM_DilloCompileTimeMsgData_userString_GET_POS( base_ptr, bmlocal86_out_ptr, bmlocal87_out_bitoff );\
	bmlocal88_element_size_bytes = 1;\
	bmlocal89_element_size_bits = 0;\
	out_ptr = BMI_NUMBER_TO_PTR_CAST( BMI_PTR_TO_NUMERIC_CAST(bmlocal86_out_ptr) + (idx0) * bmlocal88_element_size_bytes );\
	out_bitoff = bmlocal87_out_bitoff;\
	BMI_UNUSED_VAR( bmlocal89_element_size_bits );\
}

// COMPOSITE: Full name: 'DilloCompileTimeMsgData_userString' Type: 'Char', Inner, Non-instance, No bitoff root
#define BM_DilloCompileTimeMsgData_userString_value_GET_POS( base_ptr, idx0, out_ptr, out_bitoff )\
{\
	/*lint --e{*} */\
	PVOID bmlocal90_parent_out_ptr;\
	BM_DilloCompileTimeMsgData_userString_GET_ELEMENT_POS( base_ptr, idx0, bmlocal90_parent_out_ptr, out_bitoff );\
	out_ptr = bmlocal90_parent_out_ptr;\
}

// Alignment of DilloCompileTimeMsgData_userString_value: accumulated=(0,0, ABA=1), parent.base=(0,0, ABA=1)
#define BM_DilloCompileTimeMsgData_userString_value_GET_SIZE( base_ptr, idx0, out_bytes, out_bits )\
{\
	/*lint --e{*} */\
	out_bytes = 1;\
	out_bits = 0;\
	BMI_UNUSED_VAR( base_ptr );\
	BMI_UNUSED_VAR( idx0 );\
}

#define BM_DilloCompileTimeMsgData_userString_value_GET( base_ptr, idx0, out_val )\
{\
	/*lint --e{*} */\
	PVOID bmlocal91_my_ptr;\
	UINT bmlocal92_my_bitoff;\
	BM_DilloCompileTimeMsgData_userString_value_GET_POS( base_ptr, idx0, bmlocal91_my_ptr, bmlocal92_my_bitoff );\
	if( BMI_MACHINE_ARM_LITTLE == BMI_MACHINE_VALUE )\
	{\
		(out_val) = (char)BMI_32BIT_EXTRACT( (BMI_GET_8BIT_PTR_CONTENTS( BMI_PTR_TO_NUMERIC_CAST(bmlocal91_my_ptr)) ), 0, 8, 0);\
	}\
	else if( BMI_MACHINE_INTEL_LITTLE == BMI_MACHINE_VALUE )\
	{\
		(out_val) = (char)BMI_32BIT_EXTRACT( (BMI_GET_8BIT_PTR_CONTENTS( BMI_PTR_TO_NUMERIC_CAST(bmlocal91_my_ptr)) ), 0, 8, 0);\
	}\
	else\
	{\
		BMI_GENERIC_32BIT_LITTLE_GET( bmlocal91_my_ptr, bmlocal92_my_bitoff, 8, char, out_val, 0xFFFFFFFF );\
	}\
}

BMI_INLINE char BM_INLINE_DilloCompileTimeMsgData_userString_value_GET(PVOID base_ptr, UINT idx0)
{
	/*lint --e{*} */
	char bmlocal93_tmp_var;
	BM_DilloCompileTimeMsgData_userString_value_GET( base_ptr, idx0, bmlocal93_tmp_var );
	return bmlocal93_tmp_var;
}

#define BM_DilloCompileTimeMsgData_userString_value_SET( base_ptr, idx0, in_val )\
{\
	/*lint --e{*} */\
	PVOID bmlocal94_my_ptr;\
	UINT bmlocal95_my_bitoff;\
	BM_DilloCompileTimeMsgData_userString_value_GET_POS( base_ptr, idx0, bmlocal94_my_ptr, bmlocal95_my_bitoff );\
	if( BMI_MACHINE_ARM_LITTLE == BMI_MACHINE_VALUE )\
	{\
		BMI_32BIT_CLEAR_ASSIGN_TYPE( BMI_GET_8BIT_PTR_CONTENTS( BMI_PTR_TO_NUMERIC_CAST(bmlocal94_my_ptr) ), (in_val), 0, 0, 8, UINT8 );\
	}\
	else if( BMI_MACHINE_INTEL_LITTLE == BMI_MACHINE_VALUE )\
	{\
		BMI_32BIT_CLEAR_ASSIGN_TYPE( BMI_GET_8BIT_PTR_CONTENTS( BMI_PTR_TO_NUMERIC_CAST(bmlocal94_my_ptr) ), (in_val), 0, 0, 8, UINT8 );\
	}\
	else\
	{\
		BMI_GENERIC_32BIT_LITTLE_SET( bmlocal94_my_ptr, bmlocal95_my_bitoff, 8, in_val, 0xFFFFFFFF );\
	}\
}

// DilloCompileTimeMsgData_userString_value: IS_DEFAULT accessor is not defined because no default value was specified.
// DilloCompileTimeMsgData_userString_value: SET_DEFAULT accessor is not defined because no default value was specified.
// DilloCompileTimeMsgData_userString_value: IS_RESET accessor is not defined because no reset value was specified.
// DilloCompileTimeMsgData_userString_value: SET_RESET accessor is not defined because no reset value was specified.
// DilloCompileTimeMsgData_userString_value: CLEAR accessor is not defined because of incompatible access rights. Specified: RW Required: W1C, WO1C.
// DilloCompileTimeMsgData_userString_value: SET(W1S) accessor is not defined because of incompatible access rights. Specified: RW Required: W1S, WO1S.
#define BM_DilloCompileTimeMsgData_userString_value_DUMP_DEPTH( base_ptr, idx0, depth )\
{\
	/*lint --e{*} */\
	char bmlocal96_out_val;\
	BM_DilloCompileTimeMsgData_userString_value_GET( base_ptr, idx0, bmlocal96_out_val );\
	/*lint -e(571) */\
	BMI_FORMAT_DUMP(depth, "value", 8, (UINT)(bmlocal96_out_val), "%d", 1);\
}

#define BM_DilloCompileTimeMsgData_userString_value_DUMP( base_ptr, idx0 )\
{\
	/*lint --e{*} */\
	BM_DilloCompileTimeMsgData_userString_value_DUMP_DEPTH( base_ptr, idx0, 0 );\
}

#define BM_DilloCompileTimeMsgData_userString_value_INCREMENT( base_ptr, idx0 )\
{\
	/*lint --e{*} */\
	PVOID bmlocal97_my_ptr;\
	UINT bmlocal98_my_bitoff;\
	BM_DilloCompileTimeMsgData_userString_value_GET_POS( base_ptr, idx0, bmlocal97_my_ptr, bmlocal98_my_bitoff );\
	(*((UINT8*)bmlocal97_my_ptr))++;\
	BMI_UNUSED_VAR( bmlocal98_my_bitoff );\
}

// DilloCompileTimeMsgData_userString_value: Validation accessors are not defined because validation condition was not specified.
#define BM_DilloCompileTimeMsgData_userString_value_GET_BYTES_SIZE( base_ptr, idx0, out_bytes )\
{\
	/*lint --e{*} */\
	UINT bmlocal99_tmp_bits;\
	BM_DilloCompileTimeMsgData_userString_value_GET_SIZE( base_ptr, idx0, out_bytes, bmlocal99_tmp_bits );\
	BMI_ROUND_UP_1BYTES( out_bytes, bmlocal99_tmp_bits );\
}

#define BM_DilloCompileTimeMsgData_userString_value_BYTES_SIZE 1

#define BM_DilloCompileTimeMsgData_userString_GET_CELL_SIZE( base_ptr, idx0, out_bytes, out_bits )\
{\
	/*lint --e{*} */\
	out_bytes = 1;\
	out_bits = 0;\
	BMI_UNUSED_VAR( base_ptr );\
	BMI_UNUSED_VAR( idx0 );\
}

#define BM_DilloCompileTimeMsgData_userString_GET_BYTES_CELL_SIZE( base_ptr, idx0, out_bytes )\
{\
	/*lint --e{*} */\
	UINT bmlocal102_tmp_bits;\
	BM_DilloCompileTimeMsgData_userString_GET_CELL_SIZE( base_ptr, idx0, out_bytes, bmlocal102_tmp_bits );\
	BMI_ROUND_UP_1BYTES( out_bytes, bmlocal102_tmp_bits );\
}

#define BM_DilloCompileTimeMsgData_userString_BYTES_CELL_SIZE 1

BMI_INLINE UINT BM_INLINE_DilloCompileTimeMsgData_userString_GET_CELL_SIZE()
{
	/*lint --e{*} */
	return 1;
}

#define BM_DilloCompileTimeMsgData_userString_DUMP_DEPTH_IDX( base_ptr, idx0, depth )\
{\
	/*lint --e{*} */\
	BM_DilloCompileTimeMsgData_userString_value_DUMP_DEPTH( base_ptr, idx0, (depth + 1) );\
	BMI_UNUSED_VAR( base_ptr );\
	BMI_UNUSED_VAR( idx0 );\
}

#define BM_DilloCompileTimeMsgData_userString_DUMP_IDX( base_ptr, idx0 )\
{\
	/*lint --e{*} */\
	BM_DilloCompileTimeMsgData_userString_DUMP_DEPTH_IDX( base_ptr, idx0, 0 );\
}

#define BM_DilloCompileTimeMsgData_userString_DUMP_DEPTH( base_ptr, depth )\
{\
	/*lint --e{*} */\
	UINT bmlocal103_dim_size0;\
	UINT bmlocal104_idx0;\
	bmlocal103_dim_size0 = 1024;\
	BMI_FORMAT_NONVALUE_DUMP(depth, "userString", 1);\
	for( bmlocal104_idx0=0; bmlocal104_idx0<bmlocal103_dim_size0; bmlocal104_idx0++ )\
	{\
		BMI_FORMAT_NONVALUE_DUMP((depth + 1), "(", 0);\
		/*lint -e(571) */\
		BMI_FORMAT_DUMP(0, "", 32, (UINT)(bmlocal104_idx0), "%d", 0);\
		BMI_FORMAT_NONVALUE_DUMP(0, ")", 1);\
		BM_DilloCompileTimeMsgData_userString_DUMP_DEPTH_IDX( base_ptr, bmlocal104_idx0, depth );\
	}\
	BMI_UNUSED_VAR( base_ptr );\
}

#define BM_DilloCompileTimeMsgData_userString_DUMP( base_ptr )\
{\
	/*lint --e{*} */\
	BM_DilloCompileTimeMsgData_userString_DUMP_DEPTH( base_ptr, 0 );\
}

#define BM_DilloCompileTimeMsgData_userString_GET_BYTES_SIZE( base_ptr, out_bytes )\
{\
	/*lint --e{*} */\
	UINT bmlocal105_tmp_bits;\
	BM_DilloCompileTimeMsgData_userString_GET_SIZE( base_ptr, out_bytes, bmlocal105_tmp_bits );\
	BMI_ROUND_UP_1BYTES( out_bytes, bmlocal105_tmp_bits );\
}

#define BM_DilloCompileTimeMsgData_userString_BYTES_SIZE 1024

#define BM_DilloCompileTimeMsgData_fileName_GET_POS( base_ptr, out_ptr, out_bitoff )\
{\
	/*lint --e{*} */\
	UINT bmlocal106_tmp_bytes = 0;\
	UINT bmlocal107_tmp_bits = 0;\
	UINT bmlocal108_acc_bytes;\
	UINT bmlocal109_acc_bits;\
	out_ptr = base_ptr;\
	out_bitoff = 0;\
	bmlocal108_acc_bytes = 2;\
	bmlocal109_acc_bits = 0;\
	BM_DilloCompileTimeMsgData_userString_GET_SIZE( base_ptr, bmlocal106_tmp_bytes, bmlocal107_tmp_bits );\
	bmlocal108_acc_bytes += bmlocal106_tmp_bytes;\
	bmlocal109_acc_bits += bmlocal107_tmp_bits;\
	BMI_ADD_ASSIGN_PTR( out_ptr, bmlocal108_acc_bytes );\
	out_bitoff += bmlocal109_acc_bits;\
}

#define BM_DilloCompileTimeMsgData_fileName_GET_POS_ALIGNED( base_ptr, out_ptr )\
{\
	/*lint --e{*} */\
	UINT bmlocal110_tmp_bitoff;\
	BM_DilloCompileTimeMsgData_fileName_GET_POS( base_ptr, out_ptr, bmlocal110_tmp_bitoff );\
	BMI_NORMALIZE_BITOFF(out_ptr, bmlocal110_tmp_bitoff);\
}

#define BM_DilloCompileTimeMsgData_fileName_POS_ALIGNED 1026

// ARRAY: DilloCompileTimeMsgData_fileName
#define BM_DilloCompileTimeMsgData_fileName_GET_SIZE( base_ptr, out_bytes, out_bits )\
{\
	/*lint --e{*} */\
	out_bytes = 1024;\
	out_bits = 0;\
	BMI_UNUSED_VAR( base_ptr );\
}

BMI_INLINE UINT BM_INLINE_DilloCompileTimeMsgData_fileName_GET_SIZE()
{
	/*lint --e{*} */
	return 1024;
}

#define BM_DilloCompileTimeMsgData_fileName_GET_DIMENSION_ELEMENT_COUNT( base_ptr, index, out_element_count )\
{\
	/*lint --e{*} */\
	switch( index )\
	{\
		case (0):\
		out_element_count = 1024;\
		break;\
		default:\
		out_element_count = 0;\
		break;\
	}\
	BMI_UNUSED_VAR( base_ptr );\
}

#define BM_DilloCompileTimeMsgData_fileName_GET_ELEMENT_POS( base_ptr, idx0, out_ptr, out_bitoff )\
{\
	/*lint --e{*} */\
	PVOID bmlocal111_out_ptr;\
	UINT bmlocal112_out_bitoff;\
	UINT bmlocal113_element_size_bytes;\
	UINT bmlocal114_element_size_bits;\
	BM_DilloCompileTimeMsgData_fileName_GET_POS( base_ptr, bmlocal111_out_ptr, bmlocal112_out_bitoff );\
	bmlocal113_element_size_bytes = 1;\
	bmlocal114_element_size_bits = 0;\
	out_ptr = BMI_NUMBER_TO_PTR_CAST( BMI_PTR_TO_NUMERIC_CAST(bmlocal111_out_ptr) + (idx0) * bmlocal113_element_size_bytes );\
	out_bitoff = bmlocal112_out_bitoff;\
	BMI_UNUSED_VAR( bmlocal114_element_size_bits );\
}

// COMPOSITE: Full name: 'DilloCompileTimeMsgData_fileName' Type: 'Char', Inner, Non-instance, No bitoff root
#define BM_DilloCompileTimeMsgData_fileName_value_GET_POS( base_ptr, idx0, out_ptr, out_bitoff )\
{\
	/*lint --e{*} */\
	PVOID bmlocal115_parent_out_ptr;\
	BM_DilloCompileTimeMsgData_fileName_GET_ELEMENT_POS( base_ptr, idx0, bmlocal115_parent_out_ptr, out_bitoff );\
	out_ptr = bmlocal115_parent_out_ptr;\
}

// Alignment of DilloCompileTimeMsgData_fileName_value: accumulated=(0,0, ABA=1), parent.base=(0,0, ABA=1)
#define BM_DilloCompileTimeMsgData_fileName_value_GET_SIZE( base_ptr, idx0, out_bytes, out_bits )\
{\
	/*lint --e{*} */\
	out_bytes = 1;\
	out_bits = 0;\
	BMI_UNUSED_VAR( base_ptr );\
	BMI_UNUSED_VAR( idx0 );\
}

#define BM_DilloCompileTimeMsgData_fileName_value_GET( base_ptr, idx0, out_val )\
{\
	/*lint --e{*} */\
	PVOID bmlocal116_my_ptr;\
	UINT bmlocal117_my_bitoff;\
	BM_DilloCompileTimeMsgData_fileName_value_GET_POS( base_ptr, idx0, bmlocal116_my_ptr, bmlocal117_my_bitoff );\
	if( BMI_MACHINE_ARM_LITTLE == BMI_MACHINE_VALUE )\
	{\
		(out_val) = (char)BMI_32BIT_EXTRACT( (BMI_GET_8BIT_PTR_CONTENTS( BMI_PTR_TO_NUMERIC_CAST(bmlocal116_my_ptr)) ), 0, 8, 0);\
	}\
	else if( BMI_MACHINE_INTEL_LITTLE == BMI_MACHINE_VALUE )\
	{\
		(out_val) = (char)BMI_32BIT_EXTRACT( (BMI_GET_8BIT_PTR_CONTENTS( BMI_PTR_TO_NUMERIC_CAST(bmlocal116_my_ptr)) ), 0, 8, 0);\
	}\
	else\
	{\
		BMI_GENERIC_32BIT_LITTLE_GET( bmlocal116_my_ptr, bmlocal117_my_bitoff, 8, char, out_val, 0xFFFFFFFF );\
	}\
}

BMI_INLINE char BM_INLINE_DilloCompileTimeMsgData_fileName_value_GET(PVOID base_ptr, UINT idx0)
{
	/*lint --e{*} */
	char bmlocal118_tmp_var;
	BM_DilloCompileTimeMsgData_fileName_value_GET( base_ptr, idx0, bmlocal118_tmp_var );
	return bmlocal118_tmp_var;
}

#define BM_DilloCompileTimeMsgData_fileName_value_SET( base_ptr, idx0, in_val )\
{\
	/*lint --e{*} */\
	PVOID bmlocal119_my_ptr;\
	UINT bmlocal120_my_bitoff;\
	BM_DilloCompileTimeMsgData_fileName_value_GET_POS( base_ptr, idx0, bmlocal119_my_ptr, bmlocal120_my_bitoff );\
	if( BMI_MACHINE_ARM_LITTLE == BMI_MACHINE_VALUE )\
	{\
		BMI_32BIT_CLEAR_ASSIGN_TYPE( BMI_GET_8BIT_PTR_CONTENTS( BMI_PTR_TO_NUMERIC_CAST(bmlocal119_my_ptr) ), (in_val), 0, 0, 8, UINT8 );\
	}\
	else if( BMI_MACHINE_INTEL_LITTLE == BMI_MACHINE_VALUE )\
	{\
		BMI_32BIT_CLEAR_ASSIGN_TYPE( BMI_GET_8BIT_PTR_CONTENTS( BMI_PTR_TO_NUMERIC_CAST(bmlocal119_my_ptr) ), (in_val), 0, 0, 8, UINT8 );\
	}\
	else\
	{\
		BMI_GENERIC_32BIT_LITTLE_SET( bmlocal119_my_ptr, bmlocal120_my_bitoff, 8, in_val, 0xFFFFFFFF );\
	}\
}

// DilloCompileTimeMsgData_fileName_value: IS_DEFAULT accessor is not defined because no default value was specified.
// DilloCompileTimeMsgData_fileName_value: SET_DEFAULT accessor is not defined because no default value was specified.
// DilloCompileTimeMsgData_fileName_value: IS_RESET accessor is not defined because no reset value was specified.
// DilloCompileTimeMsgData_fileName_value: SET_RESET accessor is not defined because no reset value was specified.
// DilloCompileTimeMsgData_fileName_value: CLEAR accessor is not defined because of incompatible access rights. Specified: RW Required: W1C, WO1C.
// DilloCompileTimeMsgData_fileName_value: SET(W1S) accessor is not defined because of incompatible access rights. Specified: RW Required: W1S, WO1S.
#define BM_DilloCompileTimeMsgData_fileName_value_DUMP_DEPTH( base_ptr, idx0, depth )\
{\
	/*lint --e{*} */\
	char bmlocal121_out_val;\
	BM_DilloCompileTimeMsgData_fileName_value_GET( base_ptr, idx0, bmlocal121_out_val );\
	/*lint -e(571) */\
	BMI_FORMAT_DUMP(depth, "value", 8, (UINT)(bmlocal121_out_val), "%d", 1);\
}

#define BM_DilloCompileTimeMsgData_fileName_value_DUMP( base_ptr, idx0 )\
{\
	/*lint --e{*} */\
	BM_DilloCompileTimeMsgData_fileName_value_DUMP_DEPTH( base_ptr, idx0, 0 );\
}

#define BM_DilloCompileTimeMsgData_fileName_value_INCREMENT( base_ptr, idx0 )\
{\
	/*lint --e{*} */\
	PVOID bmlocal122_my_ptr;\
	UINT bmlocal123_my_bitoff;\
	BM_DilloCompileTimeMsgData_fileName_value_GET_POS( base_ptr, idx0, bmlocal122_my_ptr, bmlocal123_my_bitoff );\
	(*((UINT8*)bmlocal122_my_ptr))++;\
	BMI_UNUSED_VAR( bmlocal123_my_bitoff );\
}

// DilloCompileTimeMsgData_fileName_value: Validation accessors are not defined because validation condition was not specified.
#define BM_DilloCompileTimeMsgData_fileName_value_GET_BYTES_SIZE( base_ptr, idx0, out_bytes )\
{\
	/*lint --e{*} */\
	UINT bmlocal124_tmp_bits;\
	BM_DilloCompileTimeMsgData_fileName_value_GET_SIZE( base_ptr, idx0, out_bytes, bmlocal124_tmp_bits );\
	BMI_ROUND_UP_1BYTES( out_bytes, bmlocal124_tmp_bits );\
}

#define BM_DilloCompileTimeMsgData_fileName_value_BYTES_SIZE 1

#define BM_DilloCompileTimeMsgData_fileName_GET_CELL_SIZE( base_ptr, idx0, out_bytes, out_bits )\
{\
	/*lint --e{*} */\
	out_bytes = 1;\
	out_bits = 0;\
	BMI_UNUSED_VAR( base_ptr );\
	BMI_UNUSED_VAR( idx0 );\
}

#define BM_DilloCompileTimeMsgData_fileName_GET_BYTES_CELL_SIZE( base_ptr, idx0, out_bytes )\
{\
	/*lint --e{*} */\
	UINT bmlocal127_tmp_bits;\
	BM_DilloCompileTimeMsgData_fileName_GET_CELL_SIZE( base_ptr, idx0, out_bytes, bmlocal127_tmp_bits );\
	BMI_ROUND_UP_1BYTES( out_bytes, bmlocal127_tmp_bits );\
}

#define BM_DilloCompileTimeMsgData_fileName_BYTES_CELL_SIZE 1

BMI_INLINE UINT BM_INLINE_DilloCompileTimeMsgData_fileName_GET_CELL_SIZE()
{
	/*lint --e{*} */
	return 1;
}

#define BM_DilloCompileTimeMsgData_fileName_DUMP_DEPTH_IDX( base_ptr, idx0, depth )\
{\
	/*lint --e{*} */\
	BM_DilloCompileTimeMsgData_fileName_value_DUMP_DEPTH( base_ptr, idx0, (depth + 1) );\
	BMI_UNUSED_VAR( base_ptr );\
	BMI_UNUSED_VAR( idx0 );\
}

#define BM_DilloCompileTimeMsgData_fileName_DUMP_IDX( base_ptr, idx0 )\
{\
	/*lint --e{*} */\
	BM_DilloCompileTimeMsgData_fileName_DUMP_DEPTH_IDX( base_ptr, idx0, 0 );\
}

#define BM_DilloCompileTimeMsgData_fileName_DUMP_DEPTH( base_ptr, depth )\
{\
	/*lint --e{*} */\
	UINT bmlocal128_dim_size0;\
	UINT bmlocal129_idx0;\
	bmlocal128_dim_size0 = 1024;\
	BMI_FORMAT_NONVALUE_DUMP(depth, "fileName", 1);\
	for( bmlocal129_idx0=0; bmlocal129_idx0<bmlocal128_dim_size0; bmlocal129_idx0++ )\
	{\
		BMI_FORMAT_NONVALUE_DUMP((depth + 1), "(", 0);\
		/*lint -e(571) */\
		BMI_FORMAT_DUMP(0, "", 32, (UINT)(bmlocal129_idx0), "%d", 0);\
		BMI_FORMAT_NONVALUE_DUMP(0, ")", 1);\
		BM_DilloCompileTimeMsgData_fileName_DUMP_DEPTH_IDX( base_ptr, bmlocal129_idx0, depth );\
	}\
	BMI_UNUSED_VAR( base_ptr );\
}

#define BM_DilloCompileTimeMsgData_fileName_DUMP( base_ptr )\
{\
	/*lint --e{*} */\
	BM_DilloCompileTimeMsgData_fileName_DUMP_DEPTH( base_ptr, 0 );\
}

#define BM_DilloCompileTimeMsgData_fileName_GET_BYTES_SIZE( base_ptr, out_bytes )\
{\
	/*lint --e{*} */\
	UINT bmlocal130_tmp_bits;\
	BM_DilloCompileTimeMsgData_fileName_GET_SIZE( base_ptr, out_bytes, bmlocal130_tmp_bits );\
	BMI_ROUND_UP_1BYTES( out_bytes, bmlocal130_tmp_bits );\
}

#define BM_DilloCompileTimeMsgData_fileName_BYTES_SIZE 1024

#define BM_DilloCompileTimeMsgData_reserved_GET_POS( base_ptr, out_ptr, out_bitoff )\
{\
	/*lint --e{*} */\
	UINT bmlocal131_tmp_bytes = 0;\
	UINT bmlocal132_tmp_bits = 0;\
	UINT bmlocal133_acc_bytes;\
	UINT bmlocal134_acc_bits;\
	out_ptr = base_ptr;\
	out_bitoff = 0;\
	bmlocal133_acc_bytes = 2;\
	bmlocal134_acc_bits = 0;\
	BM_DilloCompileTimeMsgData_userString_GET_SIZE( base_ptr, bmlocal131_tmp_bytes, bmlocal132_tmp_bits );\
	bmlocal133_acc_bytes += bmlocal131_tmp_bytes;\
	bmlocal134_acc_bits += bmlocal132_tmp_bits;\
	BM_DilloCompileTimeMsgData_fileName_GET_SIZE( base_ptr, bmlocal131_tmp_bytes, bmlocal132_tmp_bits );\
	bmlocal133_acc_bytes += bmlocal131_tmp_bytes;\
	bmlocal134_acc_bits += bmlocal132_tmp_bits;\
	BMI_ADD_ASSIGN_PTR( out_ptr, bmlocal133_acc_bytes );\
	out_bitoff += bmlocal134_acc_bits;\
}

#define BM_DilloCompileTimeMsgData_reserved_GET_POS_ALIGNED( base_ptr, out_ptr )\
{\
	/*lint --e{*} */\
	UINT bmlocal135_tmp_bitoff;\
	BM_DilloCompileTimeMsgData_reserved_GET_POS( base_ptr, out_ptr, bmlocal135_tmp_bitoff );\
	BMI_NORMALIZE_BITOFF(out_ptr, bmlocal135_tmp_bitoff);\
}

#define BM_DilloCompileTimeMsgData_reserved_POS_ALIGNED 2050

// Alignment of DilloCompileTimeMsgData_reserved: accumulated=(2,0, ABA=4), parent.base=(0,0, ABA=4)
#define BM_DilloCompileTimeMsgData_reserved_GET_SIZE( base_ptr, out_bytes, out_bits )\
{\
	/*lint --e{*} */\
	out_bytes = 2;\
	out_bits = 0;\
	BMI_UNUSED_VAR( base_ptr );\
}

#define BM_DilloCompileTimeMsgData_reserved_GET( base_ptr, out_val )\
{\
	/*lint --e{*} */\
	PVOID bmlocal136_my_ptr;\
	UINT bmlocal137_my_bitoff;\
	BM_DilloCompileTimeMsgData_reserved_GET_POS( base_ptr, bmlocal136_my_ptr, bmlocal137_my_bitoff );\
	if( BMI_MACHINE_ARM_LITTLE == BMI_MACHINE_VALUE )\
	{\
		(out_val) = (UINT16)BMI_32BIT_EXTRACT( (BMI_GET_16BIT_PTR_CONTENTS( BMI_PTR_TO_NUMERIC_CAST(bmlocal136_my_ptr)) ), 0, 16, 0);\
	}\
	else if( BMI_MACHINE_INTEL_LITTLE == BMI_MACHINE_VALUE )\
	{\
		(out_val) = (UINT16)BMI_32BIT_EXTRACT( (BMI_GET_16BIT_PTR_CONTENTS( BMI_PTR_TO_NUMERIC_CAST(bmlocal136_my_ptr)) ), 0, 16, 0);\
	}\
	else\
	{\
		BMI_GENERIC_32BIT_LITTLE_GET( bmlocal136_my_ptr, bmlocal137_my_bitoff, 16, UINT16, out_val, 0x00000002 );\
	}\
}

BMI_INLINE UINT16 BM_INLINE_DilloCompileTimeMsgData_reserved_GET(PVOID base_ptr)
{
	/*lint --e{*} */
	UINT16 bmlocal138_tmp_var;
	BM_DilloCompileTimeMsgData_reserved_GET( base_ptr, bmlocal138_tmp_var );
	return bmlocal138_tmp_var;
}

#define BM_DilloCompileTimeMsgData_reserved_SET( base_ptr, in_val )\
{\
	/*lint --e{*} */\
	PVOID bmlocal139_my_ptr;\
	UINT bmlocal140_my_bitoff;\
	BM_DilloCompileTimeMsgData_reserved_GET_POS( base_ptr, bmlocal139_my_ptr, bmlocal140_my_bitoff );\
	if( BMI_MACHINE_ARM_LITTLE == BMI_MACHINE_VALUE )\
	{\
		BMI_32BIT_CLEAR_ASSIGN_TYPE( BMI_GET_16BIT_PTR_CONTENTS( BMI_PTR_TO_NUMERIC_CAST(bmlocal139_my_ptr) ), (in_val), 0, 0, 16, UINT16 );\
	}\
	else if( BMI_MACHINE_INTEL_LITTLE == BMI_MACHINE_VALUE )\
	{\
		BMI_32BIT_CLEAR_ASSIGN_TYPE( BMI_GET_16BIT_PTR_CONTENTS( BMI_PTR_TO_NUMERIC_CAST(bmlocal139_my_ptr) ), (in_val), 0, 0, 16, UINT16 );\
	}\
	else\
	{\
		BMI_GENERIC_32BIT_LITTLE_SET( bmlocal139_my_ptr, bmlocal140_my_bitoff, 16, in_val, 0x00000002 );\
	}\
}

// DilloCompileTimeMsgData_reserved: IS_DEFAULT accessor is not defined because no default value was specified.
// DilloCompileTimeMsgData_reserved: SET_DEFAULT accessor is not defined because no default value was specified.
// DilloCompileTimeMsgData_reserved: IS_RESET accessor is not defined because no reset value was specified.
// DilloCompileTimeMsgData_reserved: SET_RESET accessor is not defined because no reset value was specified.
// DilloCompileTimeMsgData_reserved: CLEAR accessor is not defined because of incompatible access rights. Specified: RW Required: W1C, WO1C.
// DilloCompileTimeMsgData_reserved: SET(W1S) accessor is not defined because of incompatible access rights. Specified: RW Required: W1S, WO1S.
#define BM_DilloCompileTimeMsgData_reserved_DUMP_DEPTH( base_ptr, depth )\
{\
	/*lint --e{*} */\
	UINT16 bmlocal141_out_val;\
	BM_DilloCompileTimeMsgData_reserved_GET( base_ptr, bmlocal141_out_val );\
	/*lint -e(571) */\
	BMI_FORMAT_DUMP(depth, "reserved", 16, (UINT)(bmlocal141_out_val), "%d", 1);\
}

#define BM_DilloCompileTimeMsgData_reserved_DUMP( base_ptr )\
{\
	/*lint --e{*} */\
	BM_DilloCompileTimeMsgData_reserved_DUMP_DEPTH( base_ptr, 0 );\
}

#define BM_DilloCompileTimeMsgData_reserved_INCREMENT( base_ptr )\
{\
	/*lint --e{*} */\
	PVOID bmlocal142_my_ptr;\
	UINT bmlocal143_my_bitoff;\
	BM_DilloCompileTimeMsgData_reserved_GET_POS( base_ptr, bmlocal142_my_ptr, bmlocal143_my_bitoff );\
	(*((UINT16*)bmlocal142_my_ptr))++;\
	BMI_UNUSED_VAR( bmlocal143_my_bitoff );\
}

// DilloCompileTimeMsgData_reserved: Validation accessors are not defined because validation condition was not specified.
#define BM_DilloCompileTimeMsgData_reserved_GET_BYTES_SIZE( base_ptr, out_bytes )\
{\
	/*lint --e{*} */\
	UINT bmlocal144_tmp_bits;\
	BM_DilloCompileTimeMsgData_reserved_GET_SIZE( base_ptr, out_bytes, bmlocal144_tmp_bits );\
	BMI_ROUND_UP_1BYTES( out_bytes, bmlocal144_tmp_bits );\
}

#define BM_DilloCompileTimeMsgData_reserved_BYTES_SIZE 2

#define BM_DilloCompileTimeMsgData_lineNumber_GET_POS( base_ptr, out_ptr, out_bitoff )\
{\
	/*lint --e{*} */\
	UINT bmlocal145_tmp_bytes = 0;\
	UINT bmlocal146_tmp_bits = 0;\
	UINT bmlocal147_acc_bytes;\
	UINT bmlocal148_acc_bits;\
	out_ptr = base_ptr;\
	out_bitoff = 0;\
	bmlocal147_acc_bytes = 4;\
	bmlocal148_acc_bits = 0;\
	BM_DilloCompileTimeMsgData_userString_GET_SIZE( base_ptr, bmlocal145_tmp_bytes, bmlocal146_tmp_bits );\
	bmlocal147_acc_bytes += bmlocal145_tmp_bytes;\
	bmlocal148_acc_bits += bmlocal146_tmp_bits;\
	BM_DilloCompileTimeMsgData_fileName_GET_SIZE( base_ptr, bmlocal145_tmp_bytes, bmlocal146_tmp_bits );\
	bmlocal147_acc_bytes += bmlocal145_tmp_bytes;\
	bmlocal148_acc_bits += bmlocal146_tmp_bits;\
	BMI_ADD_ASSIGN_PTR( out_ptr, bmlocal147_acc_bytes );\
	out_bitoff += bmlocal148_acc_bits;\
}

#define BM_DilloCompileTimeMsgData_lineNumber_GET_POS_ALIGNED( base_ptr, out_ptr )\
{\
	/*lint --e{*} */\
	UINT bmlocal149_tmp_bitoff;\
	BM_DilloCompileTimeMsgData_lineNumber_GET_POS( base_ptr, out_ptr, bmlocal149_tmp_bitoff );\
	BMI_NORMALIZE_BITOFF(out_ptr, bmlocal149_tmp_bitoff);\
}

#define BM_DilloCompileTimeMsgData_lineNumber_POS_ALIGNED 2052

// Alignment of DilloCompileTimeMsgData_lineNumber: accumulated=(0,0, ABA=4), parent.base=(0,0, ABA=4)
#define BM_DilloCompileTimeMsgData_lineNumber_GET_SIZE( base_ptr, out_bytes, out_bits )\
{\
	/*lint --e{*} */\
	out_bytes = 4;\
	out_bits = 0;\
	BMI_UNUSED_VAR( base_ptr );\
}

#define BM_DilloCompileTimeMsgData_lineNumber_GET( base_ptr, out_val )\
{\
	/*lint --e{*} */\
	PVOID bmlocal150_my_ptr;\
	UINT bmlocal151_my_bitoff;\
	BM_DilloCompileTimeMsgData_lineNumber_GET_POS( base_ptr, bmlocal150_my_ptr, bmlocal151_my_bitoff );\
	if( BMI_MACHINE_ARM_LITTLE == BMI_MACHINE_VALUE )\
	{\
		(out_val) = (UINT32)BMI_32BIT_EXTRACT( (BMI_GET_32BIT_PTR_CONTENTS( BMI_PTR_TO_NUMERIC_CAST(bmlocal150_my_ptr)) ), 0, 32, 0);\
	}\
	else if( BMI_MACHINE_INTEL_LITTLE == BMI_MACHINE_VALUE )\
	{\
		(out_val) = (UINT32)BMI_32BIT_EXTRACT( (BMI_GET_32BIT_PTR_CONTENTS( BMI_PTR_TO_NUMERIC_CAST(bmlocal150_my_ptr)) ), 0, 32, 0);\
	}\
	else\
	{\
		BMI_GENERIC_32BIT_LITTLE_GET( bmlocal150_my_ptr, bmlocal151_my_bitoff, 32, UINT32, out_val, 0x00000000 );\
	}\
}

BMI_INLINE UINT32 BM_INLINE_DilloCompileTimeMsgData_lineNumber_GET(PVOID base_ptr)
{
	/*lint --e{*} */
	UINT32 bmlocal152_tmp_var;
	BM_DilloCompileTimeMsgData_lineNumber_GET( base_ptr, bmlocal152_tmp_var );
	return bmlocal152_tmp_var;
}

#define BM_DilloCompileTimeMsgData_lineNumber_SET( base_ptr, in_val )\
{\
	/*lint --e{*} */\
	PVOID bmlocal153_my_ptr;\
	UINT bmlocal154_my_bitoff;\
	BM_DilloCompileTimeMsgData_lineNumber_GET_POS( base_ptr, bmlocal153_my_ptr, bmlocal154_my_bitoff );\
	if( BMI_MACHINE_ARM_LITTLE == BMI_MACHINE_VALUE )\
	{\
		BMI_32BIT_CLEAR_ASSIGN_TYPE( BMI_GET_32BIT_PTR_CONTENTS( BMI_PTR_TO_NUMERIC_CAST(bmlocal153_my_ptr) ), (in_val), 0, 0, 32, UINT32 );\
	}\
	else if( BMI_MACHINE_INTEL_LITTLE == BMI_MACHINE_VALUE )\
	{\
		BMI_32BIT_CLEAR_ASSIGN_TYPE( BMI_GET_32BIT_PTR_CONTENTS( BMI_PTR_TO_NUMERIC_CAST(bmlocal153_my_ptr) ), (in_val), 0, 0, 32, UINT32 );\
	}\
	else\
	{\
		BMI_GENERIC_32BIT_LITTLE_SET( bmlocal153_my_ptr, bmlocal154_my_bitoff, 32, in_val, 0x00000000 );\
	}\
}

// DilloCompileTimeMsgData_lineNumber: IS_DEFAULT accessor is not defined because no default value was specified.
// DilloCompileTimeMsgData_lineNumber: SET_DEFAULT accessor is not defined because no default value was specified.
// DilloCompileTimeMsgData_lineNumber: IS_RESET accessor is not defined because no reset value was specified.
// DilloCompileTimeMsgData_lineNumber: SET_RESET accessor is not defined because no reset value was specified.
// DilloCompileTimeMsgData_lineNumber: CLEAR accessor is not defined because of incompatible access rights. Specified: RW Required: W1C, WO1C.
// DilloCompileTimeMsgData_lineNumber: SET(W1S) accessor is not defined because of incompatible access rights. Specified: RW Required: W1S, WO1S.
#define BM_DilloCompileTimeMsgData_lineNumber_DUMP_DEPTH( base_ptr, depth )\
{\
	/*lint --e{*} */\
	UINT32 bmlocal155_out_val;\
	BM_DilloCompileTimeMsgData_lineNumber_GET( base_ptr, bmlocal155_out_val );\
	/*lint -e(571) */\
	BMI_FORMAT_DUMP(depth, "lineNumber", 32, (UINT)(bmlocal155_out_val), "%d", 1);\
}

#define BM_DilloCompileTimeMsgData_lineNumber_DUMP( base_ptr )\
{\
	/*lint --e{*} */\
	BM_DilloCompileTimeMsgData_lineNumber_DUMP_DEPTH( base_ptr, 0 );\
}

#define BM_DilloCompileTimeMsgData_lineNumber_INCREMENT( base_ptr )\
{\
	/*lint --e{*} */\
	PVOID bmlocal156_my_ptr;\
	UINT bmlocal157_my_bitoff;\
	BM_DilloCompileTimeMsgData_lineNumber_GET_POS( base_ptr, bmlocal156_my_ptr, bmlocal157_my_bitoff );\
	(*((UINT32*)bmlocal156_my_ptr))++;\
	BMI_UNUSED_VAR( bmlocal157_my_bitoff );\
}

// DilloCompileTimeMsgData_lineNumber: Validation accessors are not defined because validation condition was not specified.
#define BM_DilloCompileTimeMsgData_lineNumber_GET_BYTES_SIZE( base_ptr, out_bytes )\
{\
	/*lint --e{*} */\
	UINT bmlocal158_tmp_bits;\
	BM_DilloCompileTimeMsgData_lineNumber_GET_SIZE( base_ptr, out_bytes, bmlocal158_tmp_bits );\
	BMI_ROUND_UP_1BYTES( out_bytes, bmlocal158_tmp_bits );\
}

#define BM_DilloCompileTimeMsgData_lineNumber_BYTES_SIZE 4

#define BM_DilloCompileTimeMsgData_GET_SIZE( base_ptr, out_bytes, out_bits )\
{\
	/*lint --e{*} */\
	UINT bmlocal159_tmp_bytes = 0;\
	UINT bmlocal160_tmp_bits = 0;\
	out_bytes = 8;\
	out_bits = 0;\
	BM_DilloCompileTimeMsgData_userString_GET_SIZE( base_ptr, bmlocal159_tmp_bytes, bmlocal160_tmp_bits );\
	out_bytes += bmlocal159_tmp_bytes;\
	out_bits += bmlocal160_tmp_bits;\
	BM_DilloCompileTimeMsgData_fileName_GET_SIZE( base_ptr, bmlocal159_tmp_bytes, bmlocal160_tmp_bits );\
	out_bytes += bmlocal159_tmp_bytes;\
	out_bits += bmlocal160_tmp_bits;\
}

#define BM_DilloCompileTimeMsgData_GET_BYTES_SIZE( base_ptr, out_bytes )\
{\
	/*lint --e{*} */\
	UINT bmlocal161_tmp_bits;\
	BM_DilloCompileTimeMsgData_GET_SIZE( base_ptr, out_bytes, bmlocal161_tmp_bits );\
	BMI_ROUND_UP_1BYTES( out_bytes, bmlocal161_tmp_bits );\
}

#define BM_DilloCompileTimeMsgData_BYTES_SIZE 2056

#define BM_DilloCompileTimeMsgData_DUMP_DEPTH( base_ptr, depth )\
{\
	/*lint --e{*} */\
	BMI_FORMAT_NONVALUE_DUMP(depth, "DilloCompileTimeMsgData", 1);\
	BM_DilloCompileTimeMsgData_severity_DUMP_DEPTH( base_ptr, (depth + 1) );\
	BM_DilloCompileTimeMsgData_moduleID_DUMP_DEPTH( base_ptr, (depth + 1) );\
	BM_DilloCompileTimeMsgData_userString_DUMP_DEPTH( base_ptr, (depth + 1) );\
	BM_DilloCompileTimeMsgData_fileName_DUMP_DEPTH( base_ptr, (depth + 1) );\
	BM_DilloCompileTimeMsgData_reserved_DUMP_DEPTH( base_ptr, (depth + 1) );\
	BM_DilloCompileTimeMsgData_lineNumber_DUMP_DEPTH( base_ptr, (depth + 1) );\
	BMI_UNUSED_VAR( base_ptr );\
}

#define BM_DilloCompileTimeMsgData_DUMP( base_ptr )\
{\
	/*lint --e{*} */\
	BM_DilloCompileTimeMsgData_DUMP_DEPTH( base_ptr, 0 );\
}


typedef UINT8 DilloMsgStatus[2];

/*lint -save -e806 */ /* Small bit field is signed rather than unsigned*/
#ifdef BMI_ENDIANNESS_LITTLE
#if (!defined __arm && !defined __arc)
#pragma pack( push, 1 )
#endif
#ifdef __arm
typedef __packed union
#elif defined __arc
typedef _Packed union
#else
typedef union
#endif
{
	UINT16 reg;
#ifdef __arm
	__packed struct
#elif defined __arc
_Packed struct
#else
	struct
#endif
	{
		UINT16 _msgID : 12; //an index in trace string table file
		UINT16 _numOfParams : 2; //may be 0..3
		UINT16 _bufferOverrun : 1; //set to TRUE, if buffer overflow happened
		UINT16 _timeStampPresent : 1; //set to TRUE, if time stamp is attached
	} fields;
} BMS_DilloMsgStatus;

#if (!defined __arm && !defined __arc)
#pragma pack( pop )
#endif

#else /* BMI_ENDIANNESS_BIG */
#if (!defined __arm && !defined __arc)
#pragma pack( push, 1 )
#endif
#ifdef __arm
typedef __packed union
#elif defined __arc
typedef _Packed union
#else
typedef union
#endif
{
	UINT16 reg;
#ifdef __arm
	__packed struct
#elif defined __arc
_Packed struct
#else
	struct
#endif
	{
		UINT16 _timeStampPresent : 1; //set to TRUE, if time stamp is attached
		UINT16 _bufferOverrun : 1; //set to TRUE, if buffer overflow happened
		UINT16 _numOfParams : 2; //may be 0..3
		UINT16 _msgID : 12; //an index in trace string table file
	} fields;
} BMS_DilloMsgStatus;

#if (!defined __arm && !defined __arc)
#pragma pack( pop )
#endif

#endif	/*#ifdef BMI_ENDIANNESS_LITTLE*/
/*lint -restore */

// COMPOSITE: Full name: 'DilloMsgStatus' Type: 'DilloMsgStatus', Top-level, Non-instance, No bitoff root
#define BM_DilloMsgStatus_msgID_GET_POS( base_ptr, out_ptr, out_bitoff )\
{\
	/*lint --e{*} */\
	out_ptr = base_ptr;\
	out_bitoff = 0;\
}

#define BM_DilloMsgStatus_msgID_GET_POS_ALIGNED( base_ptr, out_ptr )\
{\
	/*lint --e{*} */\
	UINT bmlocal162_tmp_bitoff;\
	BM_DilloMsgStatus_msgID_GET_POS( base_ptr, out_ptr, bmlocal162_tmp_bitoff );\
	BMI_NORMALIZE_BITOFF(out_ptr, bmlocal162_tmp_bitoff);\
}

#define BM_DilloMsgStatus_msgID_POS_ALIGNED 0

// Alignment of DilloMsgStatus_msgID: accumulated=(0,0, ABA=2), parent.base=(0,0, ABA=2)
#define BM_DilloMsgStatus_msgID_GET_SIZE( base_ptr, out_bytes, out_bits )\
{\
	/*lint --e{*} */\
	out_bytes = 1;\
	out_bits = 4;\
	BMI_UNUSED_VAR( base_ptr );\
}

#define BM_DilloMsgStatus_msgID_GET( base_ptr, out_val )\
{\
	/*lint --e{*} */\
	PVOID bmlocal163_my_ptr;\
	UINT bmlocal164_my_bitoff;\
	BM_DilloMsgStatus_msgID_GET_POS( base_ptr, bmlocal163_my_ptr, bmlocal164_my_bitoff );\
	BMI_GENERIC_16BIT_LITTLE_GET_VOLATILE_NOSPAN( bmlocal163_my_ptr, bmlocal164_my_bitoff, 12, UINT16, out_val, 0x00000000 );\
}

BMI_INLINE UINT16 BM_INLINE_DilloMsgStatus_msgID_GET(PVOID base_ptr)
{
	/*lint --e{*} */
	UINT16 bmlocal165_tmp_var;
	BM_DilloMsgStatus_msgID_GET( base_ptr, bmlocal165_tmp_var );
	return bmlocal165_tmp_var;
}

#define BM_DilloMsgStatus_msgID_SET( base_ptr, in_val )\
{\
	/*lint --e{*} */\
	PVOID bmlocal166_my_ptr;\
	UINT bmlocal167_my_bitoff;\
	BM_DilloMsgStatus_msgID_GET_POS( base_ptr, bmlocal166_my_ptr, bmlocal167_my_bitoff );\
	BMI_GENERIC_16BIT_LITTLE_SET_VOLATILE_NOSPAN( bmlocal166_my_ptr, bmlocal167_my_bitoff, 12, in_val, 0x00000000 );\
}

// DilloMsgStatus_msgID: IS_DEFAULT accessor is not defined because no default value was specified.
// DilloMsgStatus_msgID: SET_DEFAULT accessor is not defined because no default value was specified.
// DilloMsgStatus_msgID: IS_RESET accessor is not defined because no reset value was specified.
// DilloMsgStatus_msgID: SET_RESET accessor is not defined because no reset value was specified.
// DilloMsgStatus_msgID: CLEAR accessor is not defined because of incompatible access rights. Specified: RW Required: W1C, WO1C.
// DilloMsgStatus_msgID: SET(W1S) accessor is not defined because of incompatible access rights. Specified: RW Required: W1S, WO1S.
#define BM_DilloMsgStatus_msgID_DUMP_DEPTH( base_ptr, depth )\
{\
	/*lint --e{*} */\
	UINT16 bmlocal168_out_val;\
	BM_DilloMsgStatus_msgID_GET( base_ptr, bmlocal168_out_val );\
	/*lint -e(571) */\
	BMI_FORMAT_DUMP(depth, "msgID", 12, (UINT)(bmlocal168_out_val), "%d", 1);\
}

#define BM_DilloMsgStatus_msgID_DUMP( base_ptr )\
{\
	/*lint --e{*} */\
	BM_DilloMsgStatus_msgID_DUMP_DEPTH( base_ptr, 0 );\
}

#define BM_DilloMsgStatus_msgID_INCREMENT( base_ptr )\
{\
	/*lint --e{*} */\
	UINT16 bmlocal169_val;\
	BM_DilloMsgStatus_msgID_GET( base_ptr, bmlocal169_val );\
	(bmlocal169_val)++;\
	BM_DilloMsgStatus_msgID_SET( base_ptr, bmlocal169_val );\
}

// DilloMsgStatus_msgID: Validation accessors are not defined because validation condition was not specified.
#define BM_DilloMsgStatus_msgID_GET_BYTES_SIZE( base_ptr, out_bytes )\
{\
	/*lint --e{*} */\
	UINT bmlocal170_tmp_bits;\
	BM_DilloMsgStatus_msgID_GET_SIZE( base_ptr, out_bytes, bmlocal170_tmp_bits );\
	BMI_ROUND_UP_1BYTES( out_bytes, bmlocal170_tmp_bits );\
}

#define BM_DilloMsgStatus_msgID_BYTES_SIZE 2

#define BM_DilloMsgStatus_numOfParams_GET_POS( base_ptr, out_ptr, out_bitoff )\
{\
	/*lint --e{*} */\
	UINT bmlocal173_acc_bytes;\
	UINT bmlocal174_acc_bits;\
	out_ptr = base_ptr;\
	out_bitoff = 0;\
	bmlocal173_acc_bytes = 1;\
	bmlocal174_acc_bits = 4;\
	BMI_ADD_ASSIGN_PTR( out_ptr, bmlocal173_acc_bytes );\
	out_bitoff += bmlocal174_acc_bits;\
}

// Alignment of DilloMsgStatus_numOfParams: accumulated=(1,4, ABA=2), parent.base=(0,0, ABA=2)
#define BM_DilloMsgStatus_numOfParams_GET_SIZE( base_ptr, out_bytes, out_bits )\
{\
	/*lint --e{*} */\
	out_bytes = 0;\
	out_bits = 2;\
	BMI_UNUSED_VAR( base_ptr );\
}

#define BM_DilloMsgStatus_numOfParams_GET( base_ptr, out_val )\
{\
	/*lint --e{*} */\
	PVOID bmlocal175_my_ptr;\
	UINT bmlocal176_my_bitoff;\
	BM_DilloMsgStatus_numOfParams_GET_POS( base_ptr, bmlocal175_my_ptr, bmlocal176_my_bitoff );\
	BMI_GENERIC_16BIT_LITTLE_GET_VOLATILE_NOSPAN( bmlocal175_my_ptr, bmlocal176_my_bitoff, 2, UINT16, out_val, 0x00000001 );\
}

BMI_INLINE UINT16 BM_INLINE_DilloMsgStatus_numOfParams_GET(PVOID base_ptr)
{
	/*lint --e{*} */
	UINT16 bmlocal177_tmp_var;
	BM_DilloMsgStatus_numOfParams_GET( base_ptr, bmlocal177_tmp_var );
	return bmlocal177_tmp_var;
}

#define BM_DilloMsgStatus_numOfParams_SET( base_ptr, in_val )\
{\
	/*lint --e{*} */\
	PVOID bmlocal178_my_ptr;\
	UINT bmlocal179_my_bitoff;\
	BM_DilloMsgStatus_numOfParams_GET_POS( base_ptr, bmlocal178_my_ptr, bmlocal179_my_bitoff );\
	BMI_GENERIC_16BIT_LITTLE_SET_VOLATILE_NOSPAN( bmlocal178_my_ptr, bmlocal179_my_bitoff, 2, in_val, 0x00000001 );\
}

// DilloMsgStatus_numOfParams: IS_DEFAULT accessor is not defined because no default value was specified.
// DilloMsgStatus_numOfParams: SET_DEFAULT accessor is not defined because no default value was specified.
// DilloMsgStatus_numOfParams: IS_RESET accessor is not defined because no reset value was specified.
// DilloMsgStatus_numOfParams: SET_RESET accessor is not defined because no reset value was specified.
// DilloMsgStatus_numOfParams: CLEAR accessor is not defined because of incompatible access rights. Specified: RW Required: W1C, WO1C.
// DilloMsgStatus_numOfParams: SET(W1S) accessor is not defined because of incompatible access rights. Specified: RW Required: W1S, WO1S.
#define BM_DilloMsgStatus_numOfParams_DUMP_DEPTH( base_ptr, depth )\
{\
	/*lint --e{*} */\
	UINT16 bmlocal180_out_val;\
	BM_DilloMsgStatus_numOfParams_GET( base_ptr, bmlocal180_out_val );\
	/*lint -e(571) */\
	BMI_FORMAT_DUMP(depth, "numOfParams", 2, (UINT)(bmlocal180_out_val), "%d", 1);\
}

#define BM_DilloMsgStatus_numOfParams_DUMP( base_ptr )\
{\
	/*lint --e{*} */\
	BM_DilloMsgStatus_numOfParams_DUMP_DEPTH( base_ptr, 0 );\
}

#define BM_DilloMsgStatus_numOfParams_INCREMENT( base_ptr )\
{\
	/*lint --e{*} */\
	UINT16 bmlocal181_val;\
	BM_DilloMsgStatus_numOfParams_GET( base_ptr, bmlocal181_val );\
	(bmlocal181_val)++;\
	BM_DilloMsgStatus_numOfParams_SET( base_ptr, bmlocal181_val );\
}

// DilloMsgStatus_numOfParams: Validation accessors are not defined because validation condition was not specified.
#define BM_DilloMsgStatus_numOfParams_GET_BYTES_SIZE( base_ptr, out_bytes )\
{\
	/*lint --e{*} */\
	UINT bmlocal182_tmp_bits;\
	BM_DilloMsgStatus_numOfParams_GET_SIZE( base_ptr, out_bytes, bmlocal182_tmp_bits );\
	BMI_ROUND_UP_1BYTES( out_bytes, bmlocal182_tmp_bits );\
}

#define BM_DilloMsgStatus_numOfParams_BYTES_SIZE 1

#define BM_DilloMsgStatus_bufferOverrun_GET_POS( base_ptr, out_ptr, out_bitoff )\
{\
	/*lint --e{*} */\
	UINT bmlocal185_acc_bytes;\
	UINT bmlocal186_acc_bits;\
	out_ptr = base_ptr;\
	out_bitoff = 0;\
	bmlocal185_acc_bytes = 1;\
	bmlocal186_acc_bits = 6;\
	BMI_ADD_ASSIGN_PTR( out_ptr, bmlocal185_acc_bytes );\
	out_bitoff += bmlocal186_acc_bits;\
}

// Alignment of DilloMsgStatus_bufferOverrun: accumulated=(1,6, ABA=2), parent.base=(0,0, ABA=2)
#define BM_DilloMsgStatus_bufferOverrun_GET_SIZE( base_ptr, out_bytes, out_bits )\
{\
	/*lint --e{*} */\
	out_bytes = 0;\
	out_bits = 1;\
	BMI_UNUSED_VAR( base_ptr );\
}

#define BM_DilloMsgStatus_bufferOverrun_GET( base_ptr, out_val )\
{\
	/*lint --e{*} */\
	PVOID bmlocal187_my_ptr;\
	UINT bmlocal188_my_bitoff;\
	BM_DilloMsgStatus_bufferOverrun_GET_POS( base_ptr, bmlocal187_my_ptr, bmlocal188_my_bitoff );\
	BMI_GENERIC_16BIT_LITTLE_GET_VOLATILE_NOSPAN( bmlocal187_my_ptr, bmlocal188_my_bitoff, 1, UINT16, out_val, 0x00000001 );\
}

BMI_INLINE UINT16 BM_INLINE_DilloMsgStatus_bufferOverrun_GET(PVOID base_ptr)
{
	/*lint --e{*} */
	UINT16 bmlocal189_tmp_var;
	BM_DilloMsgStatus_bufferOverrun_GET( base_ptr, bmlocal189_tmp_var );
	return bmlocal189_tmp_var;
}

#define BM_DilloMsgStatus_bufferOverrun_SET( base_ptr, in_val )\
{\
	/*lint --e{*} */\
	PVOID bmlocal190_my_ptr;\
	UINT bmlocal191_my_bitoff;\
	BM_DilloMsgStatus_bufferOverrun_GET_POS( base_ptr, bmlocal190_my_ptr, bmlocal191_my_bitoff );\
	BMI_GENERIC_16BIT_LITTLE_SET_VOLATILE_NOSPAN( bmlocal190_my_ptr, bmlocal191_my_bitoff, 1, in_val, 0x00000001 );\
}

// DilloMsgStatus_bufferOverrun: IS_DEFAULT accessor is not defined because no default value was specified.
// DilloMsgStatus_bufferOverrun: SET_DEFAULT accessor is not defined because no default value was specified.
// DilloMsgStatus_bufferOverrun: IS_RESET accessor is not defined because no reset value was specified.
// DilloMsgStatus_bufferOverrun: SET_RESET accessor is not defined because no reset value was specified.
// DilloMsgStatus_bufferOverrun: CLEAR accessor is not defined because of incompatible access rights. Specified: RW Required: W1C, WO1C.
// DilloMsgStatus_bufferOverrun: SET(W1S) accessor is not defined because of incompatible access rights. Specified: RW Required: W1S, WO1S.
#define BM_DilloMsgStatus_bufferOverrun_DUMP_DEPTH( base_ptr, depth )\
{\
	/*lint --e{*} */\
	UINT16 bmlocal192_out_val;\
	BM_DilloMsgStatus_bufferOverrun_GET( base_ptr, bmlocal192_out_val );\
	/*lint -e(571) */\
	BMI_FORMAT_DUMP(depth, "bufferOverrun", 1, (UINT)(bmlocal192_out_val), "%d", 1);\
}

#define BM_DilloMsgStatus_bufferOverrun_DUMP( base_ptr )\
{\
	/*lint --e{*} */\
	BM_DilloMsgStatus_bufferOverrun_DUMP_DEPTH( base_ptr, 0 );\
}

#define BM_DilloMsgStatus_bufferOverrun_INCREMENT( base_ptr )\
{\
	/*lint --e{*} */\
	UINT16 bmlocal193_val;\
	BM_DilloMsgStatus_bufferOverrun_GET( base_ptr, bmlocal193_val );\
	(bmlocal193_val)++;\
	BM_DilloMsgStatus_bufferOverrun_SET( base_ptr, bmlocal193_val );\
}

// DilloMsgStatus_bufferOverrun: Validation accessors are not defined because validation condition was not specified.
#define BM_DilloMsgStatus_bufferOverrun_GET_BYTES_SIZE( base_ptr, out_bytes )\
{\
	/*lint --e{*} */\
	UINT bmlocal194_tmp_bits;\
	BM_DilloMsgStatus_bufferOverrun_GET_SIZE( base_ptr, out_bytes, bmlocal194_tmp_bits );\
	BMI_ROUND_UP_1BYTES( out_bytes, bmlocal194_tmp_bits );\
}

#define BM_DilloMsgStatus_bufferOverrun_BYTES_SIZE 1

#define BM_DilloMsgStatus_timeStampPresent_GET_POS( base_ptr, out_ptr, out_bitoff )\
{\
	/*lint --e{*} */\
	UINT bmlocal197_acc_bytes;\
	UINT bmlocal198_acc_bits;\
	out_ptr = base_ptr;\
	out_bitoff = 0;\
	bmlocal197_acc_bytes = 1;\
	bmlocal198_acc_bits = 7;\
	BMI_ADD_ASSIGN_PTR( out_ptr, bmlocal197_acc_bytes );\
	out_bitoff += bmlocal198_acc_bits;\
}

// Alignment of DilloMsgStatus_timeStampPresent: accumulated=(1,7, ABA=2), parent.base=(0,0, ABA=2)
#define BM_DilloMsgStatus_timeStampPresent_GET_SIZE( base_ptr, out_bytes, out_bits )\
{\
	/*lint --e{*} */\
	out_bytes = 0;\
	out_bits = 1;\
	BMI_UNUSED_VAR( base_ptr );\
}

#define BM_DilloMsgStatus_timeStampPresent_GET( base_ptr, out_val )\
{\
	/*lint --e{*} */\
	PVOID bmlocal199_my_ptr;\
	UINT bmlocal200_my_bitoff;\
	BM_DilloMsgStatus_timeStampPresent_GET_POS( base_ptr, bmlocal199_my_ptr, bmlocal200_my_bitoff );\
	BMI_GENERIC_16BIT_LITTLE_GET_VOLATILE_NOSPAN( bmlocal199_my_ptr, bmlocal200_my_bitoff, 1, UINT16, out_val, 0x00000001 );\
}

BMI_INLINE UINT16 BM_INLINE_DilloMsgStatus_timeStampPresent_GET(PVOID base_ptr)
{
	/*lint --e{*} */
	UINT16 bmlocal201_tmp_var;
	BM_DilloMsgStatus_timeStampPresent_GET( base_ptr, bmlocal201_tmp_var );
	return bmlocal201_tmp_var;
}

#define BM_DilloMsgStatus_timeStampPresent_SET( base_ptr, in_val )\
{\
	/*lint --e{*} */\
	PVOID bmlocal202_my_ptr;\
	UINT bmlocal203_my_bitoff;\
	BM_DilloMsgStatus_timeStampPresent_GET_POS( base_ptr, bmlocal202_my_ptr, bmlocal203_my_bitoff );\
	BMI_GENERIC_16BIT_LITTLE_SET_VOLATILE_NOSPAN( bmlocal202_my_ptr, bmlocal203_my_bitoff, 1, in_val, 0x00000001 );\
}

// DilloMsgStatus_timeStampPresent: IS_DEFAULT accessor is not defined because no default value was specified.
// DilloMsgStatus_timeStampPresent: SET_DEFAULT accessor is not defined because no default value was specified.
// DilloMsgStatus_timeStampPresent: IS_RESET accessor is not defined because no reset value was specified.
// DilloMsgStatus_timeStampPresent: SET_RESET accessor is not defined because no reset value was specified.
// DilloMsgStatus_timeStampPresent: CLEAR accessor is not defined because of incompatible access rights. Specified: RW Required: W1C, WO1C.
// DilloMsgStatus_timeStampPresent: SET(W1S) accessor is not defined because of incompatible access rights. Specified: RW Required: W1S, WO1S.
#define BM_DilloMsgStatus_timeStampPresent_DUMP_DEPTH( base_ptr, depth )\
{\
	/*lint --e{*} */\
	UINT16 bmlocal204_out_val;\
	BM_DilloMsgStatus_timeStampPresent_GET( base_ptr, bmlocal204_out_val );\
	/*lint -e(571) */\
	BMI_FORMAT_DUMP(depth, "timeStampPresent", 1, (UINT)(bmlocal204_out_val), "%d", 1);\
}

#define BM_DilloMsgStatus_timeStampPresent_DUMP( base_ptr )\
{\
	/*lint --e{*} */\
	BM_DilloMsgStatus_timeStampPresent_DUMP_DEPTH( base_ptr, 0 );\
}

#define BM_DilloMsgStatus_timeStampPresent_INCREMENT( base_ptr )\
{\
	/*lint --e{*} */\
	UINT16 bmlocal205_val;\
	BM_DilloMsgStatus_timeStampPresent_GET( base_ptr, bmlocal205_val );\
	(bmlocal205_val)++;\
	BM_DilloMsgStatus_timeStampPresent_SET( base_ptr, bmlocal205_val );\
}

// DilloMsgStatus_timeStampPresent: Validation accessors are not defined because validation condition was not specified.
#define BM_DilloMsgStatus_timeStampPresent_GET_BYTES_SIZE( base_ptr, out_bytes )\
{\
	/*lint --e{*} */\
	UINT bmlocal206_tmp_bits;\
	BM_DilloMsgStatus_timeStampPresent_GET_SIZE( base_ptr, out_bytes, bmlocal206_tmp_bits );\
	BMI_ROUND_UP_1BYTES( out_bytes, bmlocal206_tmp_bits );\
}

#define BM_DilloMsgStatus_timeStampPresent_BYTES_SIZE 1

#define BM_DilloMsgStatus_GET_SIZE( base_ptr, out_bytes, out_bits )\
{\
	/*lint --e{*} */\
	out_bytes = 2;\
	out_bits = 0;\
	BMI_UNUSED_VAR( base_ptr );\
}

#define BM_DilloMsgStatus_GET_BYTES_SIZE( base_ptr, out_bytes )\
{\
	/*lint --e{*} */\
	UINT bmlocal209_tmp_bits;\
	BM_DilloMsgStatus_GET_SIZE( base_ptr, out_bytes, bmlocal209_tmp_bits );\
	BMI_ROUND_UP_1BYTES( out_bytes, bmlocal209_tmp_bits );\
}

#define BM_DilloMsgStatus_BYTES_SIZE 2

BMI_INLINE UINT BM_INLINE_DilloMsgStatus_GET_SIZE()
{
	/*lint --e{*} */
	return 2;
}

#define BM_DilloMsgStatus_GET( base_ptr, out_val )\
{\
	/*lint --e{*} */\
	PVOID bmlocal210_my_ptr;\
	UINT bmlocal211_my_bitoff;\
	BM_DilloMsgStatus_msgID_GET_POS( base_ptr, bmlocal210_my_ptr, bmlocal211_my_bitoff );\
	BMI_GENERIC_16BIT_LITTLE_GET_VOLATILE_NOSPAN( bmlocal210_my_ptr, bmlocal211_my_bitoff, 16, UINT16, out_val, 0x00000000 );\
}

BMI_INLINE UINT16 BM_INLINE_DilloMsgStatus_GET(PVOID base_ptr)
{
	/*lint --e{*} */
	UINT16 bmlocal212_tmp_var;
	BM_DilloMsgStatus_GET( base_ptr, bmlocal212_tmp_var );
	return bmlocal212_tmp_var;
}

#define BM_DilloMsgStatus_SET( base_ptr, in_val )\
{\
	/*lint --e{*} */\
	PVOID bmlocal213_my_ptr;\
	UINT bmlocal214_my_bitoff;\
	BM_DilloMsgStatus_msgID_GET_POS( base_ptr, bmlocal213_my_ptr, bmlocal214_my_bitoff );\
	BMI_GENERIC_16BIT_LITTLE_SET_VOLATILE_NOSPAN( bmlocal213_my_ptr, bmlocal214_my_bitoff, 16, in_val, 0x00000000 );\
}

// DilloMsgStatus: IS_DEFAULT accessor is not defined because no default value was specified.
// DilloMsgStatus: SET_DEFAULT accessor is not defined because no default value was specified.
// DilloMsgStatus: IS_RESET accessor is not defined because no reset value was specified.
// DilloMsgStatus: SET_RESET accessor is not defined because no reset value was specified.
#define BM_DilloMsgStatus_GET_ALL( base_ptr, param_msgID, param_numOfParams, param_bufferOverrun, param_timeStampPresent )\
{\
	/*lint --e{*} */\
	UINT16 bmlocal215_val;\
	BM_DilloMsgStatus_GET( base_ptr, bmlocal215_val );\
	param_msgID = (UINT16)(((bmlocal215_val&BM_DilloMsgStatus_msgID_SHIFTED_MASK) >> BM_DilloMsgStatus_msgID_OFFSET));\
	param_numOfParams = (UINT8)(((bmlocal215_val&BM_DilloMsgStatus_numOfParams_SHIFTED_MASK) >> BM_DilloMsgStatus_numOfParams_OFFSET));\
	param_bufferOverrun = (UINT8)(((bmlocal215_val&BM_DilloMsgStatus_bufferOverrun_SHIFTED_MASK) >> BM_DilloMsgStatus_bufferOverrun_OFFSET));\
	param_timeStampPresent = (UINT8)(((bmlocal215_val&BM_DilloMsgStatus_timeStampPresent_SHIFTED_MASK) >> BM_DilloMsgStatus_timeStampPresent_OFFSET));\
}

#define BM_DilloMsgStatus_SET_ALL( base_ptr, param_msgID, param_numOfParams, param_bufferOverrun, param_timeStampPresent )\
{\
	/*lint --e{*} */\
	UINT16 bmlocal216_varToWrite = (UINT16)(((param_msgID&BM_DilloMsgStatus_msgID_MASK) << BM_DilloMsgStatus_msgID_OFFSET) | ((param_numOfParams&BM_DilloMsgStatus_numOfParams_MASK) << BM_DilloMsgStatus_numOfParams_OFFSET) | ((param_bufferOverrun&BM_DilloMsgStatus_bufferOverrun_MASK) << BM_DilloMsgStatus_bufferOverrun_OFFSET) | ((param_timeStampPresent&BM_DilloMsgStatus_timeStampPresent_MASK) << BM_DilloMsgStatus_timeStampPresent_OFFSET));\
	BM_DilloMsgStatus_SET( base_ptr, bmlocal216_varToWrite );\
}

#define BM_DilloMsgStatus_STRICT_SET_ALL( base_ptr, param_msgID, param_numOfParams, param_bufferOverrun, param_timeStampPresent )\
{\
	/*lint --e{*} */\
	UINT16 bmlocal217_varToWrite = (UINT16)((param_msgID << BM_DilloMsgStatus_msgID_OFFSET) | (param_numOfParams << BM_DilloMsgStatus_numOfParams_OFFSET) | (param_bufferOverrun << BM_DilloMsgStatus_bufferOverrun_OFFSET) | (param_timeStampPresent << BM_DilloMsgStatus_timeStampPresent_OFFSET));\
	BM_DilloMsgStatus_SET( base_ptr, bmlocal217_varToWrite );\
}

#define BM_DilloMsgStatus_DUMP_DEPTH( base_ptr, depth )\
{\
	/*lint --e{*} */\
	BMI_FORMAT_NONVALUE_DUMP(depth, "DilloMsgStatus", 1);\
	BM_DilloMsgStatus_msgID_DUMP_DEPTH( base_ptr, (depth + 1) );\
	BM_DilloMsgStatus_numOfParams_DUMP_DEPTH( base_ptr, (depth + 1) );\
	BM_DilloMsgStatus_bufferOverrun_DUMP_DEPTH( base_ptr, (depth + 1) );\
	BM_DilloMsgStatus_timeStampPresent_DUMP_DEPTH( base_ptr, (depth + 1) );\
	BMI_UNUSED_VAR( base_ptr );\
}

#define BM_DilloMsgStatus_DUMP( base_ptr )\
{\
	/*lint --e{*} */\
	BM_DilloMsgStatus_DUMP_DEPTH( base_ptr, 0 );\
}


typedef UINT8 DilloTimeStamp[4];

/*lint -save -e806 */ /* Small bit field is signed rather than unsigned*/
#ifdef BMI_ENDIANNESS_LITTLE
#if (!defined __arm && !defined __arc)
#pragma pack( push, 1 )
#endif
#ifdef __arm
typedef __packed struct
#elif defined __arc
typedef _Packed struct
#else
typedef struct
#endif
{
	UINT16 _leastSignificant : 16; //Least Significant Word (16bits) of Timestamp
	UINT16 _mostSignificant : 16; //Most Significant Word (16bits) of Timestamp
} BMS_DilloTimeStamp;

#if (!defined __arm && !defined __arc)
#pragma pack( pop )
#endif

#else /* BMI_ENDIANNESS_BIG */
#if (!defined __arm && !defined __arc)
#pragma pack( push, 1 )
#endif
#ifdef __arm
typedef __packed struct
#elif defined __arc
typedef _Packed struct
#else
typedef struct
#endif
{
	UINT16 _mostSignificant : 16; //Most Significant Word (16bits) of Timestamp
	UINT16 _leastSignificant : 16; //Least Significant Word (16bits) of Timestamp
} BMS_DilloTimeStamp;

#if (!defined __arm && !defined __arc)
#pragma pack( pop )
#endif

#endif	/*#ifdef BMI_ENDIANNESS_LITTLE*/
/*lint -restore */

// COMPOSITE: Full name: 'DilloTimeStamp' Type: 'DilloTimeStamp', Top-level, Non-instance, No bitoff root
#define BM_DilloTimeStamp_leastSignificant_GET_POS( base_ptr, out_ptr, out_bitoff )\
{\
	/*lint --e{*} */\
	out_ptr = base_ptr;\
	out_bitoff = 0;\
}

#define BM_DilloTimeStamp_leastSignificant_GET_POS_ALIGNED( base_ptr, out_ptr )\
{\
	/*lint --e{*} */\
	UINT bmlocal218_tmp_bitoff;\
	BM_DilloTimeStamp_leastSignificant_GET_POS( base_ptr, out_ptr, bmlocal218_tmp_bitoff );\
	BMI_NORMALIZE_BITOFF(out_ptr, bmlocal218_tmp_bitoff);\
}

#define BM_DilloTimeStamp_leastSignificant_POS_ALIGNED 0

// Alignment of DilloTimeStamp_leastSignificant: accumulated=(0,0, ABA=2), parent.base=(0,0, ABA=2)
#define BM_DilloTimeStamp_leastSignificant_GET_SIZE( base_ptr, out_bytes, out_bits )\
{\
	/*lint --e{*} */\
	out_bytes = 2;\
	out_bits = 0;\
	BMI_UNUSED_VAR( base_ptr );\
}

#define BM_DilloTimeStamp_leastSignificant_GET( base_ptr, out_val )\
{\
	/*lint --e{*} */\
	PVOID bmlocal219_my_ptr;\
	UINT bmlocal220_my_bitoff;\
	BM_DilloTimeStamp_leastSignificant_GET_POS( base_ptr, bmlocal219_my_ptr, bmlocal220_my_bitoff );\
	if( BMI_MACHINE_ARM_LITTLE == BMI_MACHINE_VALUE )\
	{\
		(out_val) = (UINT16)BMI_32BIT_EXTRACT( (BMI_GET_16BIT_PTR_CONTENTS( BMI_PTR_TO_NUMERIC_CAST(bmlocal219_my_ptr)) ), 0, 16, 0);\
	}\
	else if( BMI_MACHINE_INTEL_LITTLE == BMI_MACHINE_VALUE )\
	{\
		(out_val) = (UINT16)BMI_32BIT_EXTRACT( (BMI_GET_16BIT_PTR_CONTENTS( BMI_PTR_TO_NUMERIC_CAST(bmlocal219_my_ptr)) ), 0, 16, 0);\
	}\
	else\
	{\
		BMI_GENERIC_32BIT_LITTLE_GET( bmlocal219_my_ptr, bmlocal220_my_bitoff, 16, UINT16, out_val, 0xFFFFFFFF );\
	}\
}

BMI_INLINE UINT16 BM_INLINE_DilloTimeStamp_leastSignificant_GET(PVOID base_ptr)
{
	/*lint --e{*} */
	UINT16 bmlocal221_tmp_var;
	BM_DilloTimeStamp_leastSignificant_GET( base_ptr, bmlocal221_tmp_var );
	return bmlocal221_tmp_var;
}

#define BM_DilloTimeStamp_leastSignificant_SET( base_ptr, in_val )\
{\
	/*lint --e{*} */\
	PVOID bmlocal222_my_ptr;\
	UINT bmlocal223_my_bitoff;\
	BM_DilloTimeStamp_leastSignificant_GET_POS( base_ptr, bmlocal222_my_ptr, bmlocal223_my_bitoff );\
	if( BMI_MACHINE_ARM_LITTLE == BMI_MACHINE_VALUE )\
	{\
		BMI_32BIT_CLEAR_ASSIGN_TYPE( BMI_GET_16BIT_PTR_CONTENTS( BMI_PTR_TO_NUMERIC_CAST(bmlocal222_my_ptr) ), (in_val), 0, 0, 16, UINT16 );\
	}\
	else if( BMI_MACHINE_INTEL_LITTLE == BMI_MACHINE_VALUE )\
	{\
		BMI_32BIT_CLEAR_ASSIGN_TYPE( BMI_GET_16BIT_PTR_CONTENTS( BMI_PTR_TO_NUMERIC_CAST(bmlocal222_my_ptr) ), (in_val), 0, 0, 16, UINT16 );\
	}\
	else\
	{\
		BMI_GENERIC_32BIT_LITTLE_SET( bmlocal222_my_ptr, bmlocal223_my_bitoff, 16, in_val, 0xFFFFFFFF );\
	}\
}

// DilloTimeStamp_leastSignificant: IS_DEFAULT accessor is not defined because no default value was specified.
// DilloTimeStamp_leastSignificant: SET_DEFAULT accessor is not defined because no default value was specified.
// DilloTimeStamp_leastSignificant: IS_RESET accessor is not defined because no reset value was specified.
// DilloTimeStamp_leastSignificant: SET_RESET accessor is not defined because no reset value was specified.
// DilloTimeStamp_leastSignificant: CLEAR accessor is not defined because of incompatible access rights. Specified: RW Required: W1C, WO1C.
// DilloTimeStamp_leastSignificant: SET(W1S) accessor is not defined because of incompatible access rights. Specified: RW Required: W1S, WO1S.
#define BM_DilloTimeStamp_leastSignificant_DUMP_DEPTH( base_ptr, depth )\
{\
	/*lint --e{*} */\
	UINT16 bmlocal224_out_val;\
	BM_DilloTimeStamp_leastSignificant_GET( base_ptr, bmlocal224_out_val );\
	/*lint -e(571) */\
	BMI_FORMAT_DUMP(depth, "leastSignificant", 16, (UINT)(bmlocal224_out_val), "%d", 1);\
}

#define BM_DilloTimeStamp_leastSignificant_DUMP( base_ptr )\
{\
	/*lint --e{*} */\
	BM_DilloTimeStamp_leastSignificant_DUMP_DEPTH( base_ptr, 0 );\
}

#define BM_DilloTimeStamp_leastSignificant_INCREMENT( base_ptr )\
{\
	/*lint --e{*} */\
	PVOID bmlocal225_my_ptr;\
	UINT bmlocal226_my_bitoff;\
	BM_DilloTimeStamp_leastSignificant_GET_POS( base_ptr, bmlocal225_my_ptr, bmlocal226_my_bitoff );\
	(*((UINT16*)bmlocal225_my_ptr))++;\
	BMI_UNUSED_VAR( bmlocal226_my_bitoff );\
}

// DilloTimeStamp_leastSignificant: Validation accessors are not defined because validation condition was not specified.
#define BM_DilloTimeStamp_leastSignificant_GET_BYTES_SIZE( base_ptr, out_bytes )\
{\
	/*lint --e{*} */\
	UINT bmlocal227_tmp_bits;\
	BM_DilloTimeStamp_leastSignificant_GET_SIZE( base_ptr, out_bytes, bmlocal227_tmp_bits );\
	BMI_ROUND_UP_1BYTES( out_bytes, bmlocal227_tmp_bits );\
}

#define BM_DilloTimeStamp_leastSignificant_BYTES_SIZE 2

#define BM_DilloTimeStamp_mostSignificant_GET_POS( base_ptr, out_ptr, out_bitoff )\
{\
	/*lint --e{*} */\
	UINT bmlocal230_acc_bytes;\
	UINT bmlocal231_acc_bits;\
	out_ptr = base_ptr;\
	out_bitoff = 0;\
	bmlocal230_acc_bytes = 2;\
	bmlocal231_acc_bits = 0;\
	BMI_ADD_ASSIGN_PTR( out_ptr, bmlocal230_acc_bytes );\
	out_bitoff += bmlocal231_acc_bits;\
}

#define BM_DilloTimeStamp_mostSignificant_GET_POS_ALIGNED( base_ptr, out_ptr )\
{\
	/*lint --e{*} */\
	UINT bmlocal232_tmp_bitoff;\
	BM_DilloTimeStamp_mostSignificant_GET_POS( base_ptr, out_ptr, bmlocal232_tmp_bitoff );\
	BMI_NORMALIZE_BITOFF(out_ptr, bmlocal232_tmp_bitoff);\
}

#define BM_DilloTimeStamp_mostSignificant_POS_ALIGNED 2

// Alignment of DilloTimeStamp_mostSignificant: accumulated=(0,0, ABA=2), parent.base=(0,0, ABA=2)
#define BM_DilloTimeStamp_mostSignificant_GET_SIZE( base_ptr, out_bytes, out_bits )\
{\
	/*lint --e{*} */\
	out_bytes = 2;\
	out_bits = 0;\
	BMI_UNUSED_VAR( base_ptr );\
}

#define BM_DilloTimeStamp_mostSignificant_GET( base_ptr, out_val )\
{\
	/*lint --e{*} */\
	PVOID bmlocal233_my_ptr;\
	UINT bmlocal234_my_bitoff;\
	BM_DilloTimeStamp_mostSignificant_GET_POS( base_ptr, bmlocal233_my_ptr, bmlocal234_my_bitoff );\
	if( BMI_MACHINE_ARM_LITTLE == BMI_MACHINE_VALUE )\
	{\
		(out_val) = (UINT16)BMI_32BIT_EXTRACT( (BMI_GET_16BIT_PTR_CONTENTS( BMI_PTR_TO_NUMERIC_CAST(bmlocal233_my_ptr)) ), 0, 16, 0);\
	}\
	else if( BMI_MACHINE_INTEL_LITTLE == BMI_MACHINE_VALUE )\
	{\
		(out_val) = (UINT16)BMI_32BIT_EXTRACT( (BMI_GET_16BIT_PTR_CONTENTS( BMI_PTR_TO_NUMERIC_CAST(bmlocal233_my_ptr)) ), 0, 16, 0);\
	}\
	else\
	{\
		BMI_GENERIC_32BIT_LITTLE_GET( bmlocal233_my_ptr, bmlocal234_my_bitoff, 16, UINT16, out_val, 0xFFFFFFFF );\
	}\
}

BMI_INLINE UINT16 BM_INLINE_DilloTimeStamp_mostSignificant_GET(PVOID base_ptr)
{
	/*lint --e{*} */
	UINT16 bmlocal235_tmp_var;
	BM_DilloTimeStamp_mostSignificant_GET( base_ptr, bmlocal235_tmp_var );
	return bmlocal235_tmp_var;
}

#define BM_DilloTimeStamp_mostSignificant_SET( base_ptr, in_val )\
{\
	/*lint --e{*} */\
	PVOID bmlocal236_my_ptr;\
	UINT bmlocal237_my_bitoff;\
	BM_DilloTimeStamp_mostSignificant_GET_POS( base_ptr, bmlocal236_my_ptr, bmlocal237_my_bitoff );\
	if( BMI_MACHINE_ARM_LITTLE == BMI_MACHINE_VALUE )\
	{\
		BMI_32BIT_CLEAR_ASSIGN_TYPE( BMI_GET_16BIT_PTR_CONTENTS( BMI_PTR_TO_NUMERIC_CAST(bmlocal236_my_ptr) ), (in_val), 0, 0, 16, UINT16 );\
	}\
	else if( BMI_MACHINE_INTEL_LITTLE == BMI_MACHINE_VALUE )\
	{\
		BMI_32BIT_CLEAR_ASSIGN_TYPE( BMI_GET_16BIT_PTR_CONTENTS( BMI_PTR_TO_NUMERIC_CAST(bmlocal236_my_ptr) ), (in_val), 0, 0, 16, UINT16 );\
	}\
	else\
	{\
		BMI_GENERIC_32BIT_LITTLE_SET( bmlocal236_my_ptr, bmlocal237_my_bitoff, 16, in_val, 0xFFFFFFFF );\
	}\
}

// DilloTimeStamp_mostSignificant: IS_DEFAULT accessor is not defined because no default value was specified.
// DilloTimeStamp_mostSignificant: SET_DEFAULT accessor is not defined because no default value was specified.
// DilloTimeStamp_mostSignificant: IS_RESET accessor is not defined because no reset value was specified.
// DilloTimeStamp_mostSignificant: SET_RESET accessor is not defined because no reset value was specified.
// DilloTimeStamp_mostSignificant: CLEAR accessor is not defined because of incompatible access rights. Specified: RW Required: W1C, WO1C.
// DilloTimeStamp_mostSignificant: SET(W1S) accessor is not defined because of incompatible access rights. Specified: RW Required: W1S, WO1S.
#define BM_DilloTimeStamp_mostSignificant_DUMP_DEPTH( base_ptr, depth )\
{\
	/*lint --e{*} */\
	UINT16 bmlocal238_out_val;\
	BM_DilloTimeStamp_mostSignificant_GET( base_ptr, bmlocal238_out_val );\
	/*lint -e(571) */\
	BMI_FORMAT_DUMP(depth, "mostSignificant", 16, (UINT)(bmlocal238_out_val), "%d", 1);\
}

#define BM_DilloTimeStamp_mostSignificant_DUMP( base_ptr )\
{\
	/*lint --e{*} */\
	BM_DilloTimeStamp_mostSignificant_DUMP_DEPTH( base_ptr, 0 );\
}

#define BM_DilloTimeStamp_mostSignificant_INCREMENT( base_ptr )\
{\
	/*lint --e{*} */\
	PVOID bmlocal239_my_ptr;\
	UINT bmlocal240_my_bitoff;\
	BM_DilloTimeStamp_mostSignificant_GET_POS( base_ptr, bmlocal239_my_ptr, bmlocal240_my_bitoff );\
	(*((UINT16*)bmlocal239_my_ptr))++;\
	BMI_UNUSED_VAR( bmlocal240_my_bitoff );\
}

// DilloTimeStamp_mostSignificant: Validation accessors are not defined because validation condition was not specified.
#define BM_DilloTimeStamp_mostSignificant_GET_BYTES_SIZE( base_ptr, out_bytes )\
{\
	/*lint --e{*} */\
	UINT bmlocal241_tmp_bits;\
	BM_DilloTimeStamp_mostSignificant_GET_SIZE( base_ptr, out_bytes, bmlocal241_tmp_bits );\
	BMI_ROUND_UP_1BYTES( out_bytes, bmlocal241_tmp_bits );\
}

#define BM_DilloTimeStamp_mostSignificant_BYTES_SIZE 2

#define BM_DilloTimeStamp_GET_SIZE( base_ptr, out_bytes, out_bits )\
{\
	/*lint --e{*} */\
	out_bytes = 4;\
	out_bits = 0;\
	BMI_UNUSED_VAR( base_ptr );\
}

#define BM_DilloTimeStamp_GET_BYTES_SIZE( base_ptr, out_bytes )\
{\
	/*lint --e{*} */\
	UINT bmlocal244_tmp_bits;\
	BM_DilloTimeStamp_GET_SIZE( base_ptr, out_bytes, bmlocal244_tmp_bits );\
	BMI_ROUND_UP_1BYTES( out_bytes, bmlocal244_tmp_bits );\
}

#define BM_DilloTimeStamp_BYTES_SIZE 4

#define BM_DilloTimeStamp_DUMP_DEPTH( base_ptr, depth )\
{\
	/*lint --e{*} */\
	BMI_FORMAT_NONVALUE_DUMP(depth, "DilloTimeStamp", 1);\
	BM_DilloTimeStamp_leastSignificant_DUMP_DEPTH( base_ptr, (depth + 1) );\
	BM_DilloTimeStamp_mostSignificant_DUMP_DEPTH( base_ptr, (depth + 1) );\
	BMI_UNUSED_VAR( base_ptr );\
}

#define BM_DilloTimeStamp_DUMP( base_ptr )\
{\
	/*lint --e{*} */\
	BM_DilloTimeStamp_DUMP_DEPTH( base_ptr, 0 );\
}


typedef UINT8 DilloRunTimeMsgData[2];

// COMPOSITE: Full name: 'DilloRunTimeMsgData' Type: 'DilloRunTimeMsgData', Top-level, Non-instance, No bitoff root
#define BM_DilloRunTimeMsgData_status_GET_POS( base_ptr, out_ptr, out_bitoff )\
{\
	/*lint --e{*} */\
	out_ptr = base_ptr;\
	out_bitoff = 0;\
}

#define BM_DilloRunTimeMsgData_status_GET_POS_ALIGNED( base_ptr, out_ptr )\
{\
	/*lint --e{*} */\
	UINT bmlocal245_tmp_bitoff;\
	BM_DilloRunTimeMsgData_status_GET_POS( base_ptr, out_ptr, bmlocal245_tmp_bitoff );\
	BMI_NORMALIZE_BITOFF(out_ptr, bmlocal245_tmp_bitoff);\
}

#define BM_DilloRunTimeMsgData_status_POS_ALIGNED 0

// COMPOSITE: Full name: 'DilloRunTimeMsgData_status' Type: 'DilloMsgStatus', Inner, Non-instance, No bitoff root
#define BM_DilloRunTimeMsgData_status_msgID_GET_POS( base_ptr, out_ptr, out_bitoff )\
{\
	/*lint --e{*} */\
	PVOID bmlocal246_parent_out_ptr;\
	BM_DilloRunTimeMsgData_status_GET_POS( base_ptr, bmlocal246_parent_out_ptr, out_bitoff );\
	out_ptr = bmlocal246_parent_out_ptr;\
}

#define BM_DilloRunTimeMsgData_status_msgID_GET_POS_ALIGNED( base_ptr, out_ptr )\
{\
	/*lint --e{*} */\
	UINT bmlocal247_tmp_bitoff;\
	BM_DilloRunTimeMsgData_status_msgID_GET_POS( base_ptr, out_ptr, bmlocal247_tmp_bitoff );\
	BMI_NORMALIZE_BITOFF(out_ptr, bmlocal247_tmp_bitoff);\
}

#define BM_DilloRunTimeMsgData_status_msgID_POS_ALIGNED 0

// Alignment of DilloRunTimeMsgData_status_msgID: accumulated=(0,0, ABA=2), parent.base=(0,0, ABA=2)
#define BM_DilloRunTimeMsgData_status_msgID_GET_SIZE( base_ptr, out_bytes, out_bits )\
{\
	/*lint --e{*} */\
	out_bytes = 1;\
	out_bits = 4;\
	BMI_UNUSED_VAR( base_ptr );\
}

#define BM_DilloRunTimeMsgData_status_msgID_GET( base_ptr, out_val )\
{\
	/*lint --e{*} */\
	PVOID bmlocal248_my_ptr;\
	UINT bmlocal249_my_bitoff;\
	BM_DilloRunTimeMsgData_status_msgID_GET_POS( base_ptr, bmlocal248_my_ptr, bmlocal249_my_bitoff );\
	BMI_GENERIC_16BIT_LITTLE_GET_VOLATILE_NOSPAN( bmlocal248_my_ptr, bmlocal249_my_bitoff, 12, UINT16, out_val, 0x00000000 );\
}

BMI_INLINE UINT16 BM_INLINE_DilloRunTimeMsgData_status_msgID_GET(PVOID base_ptr)
{
	/*lint --e{*} */
	UINT16 bmlocal250_tmp_var;
	BM_DilloRunTimeMsgData_status_msgID_GET( base_ptr, bmlocal250_tmp_var );
	return bmlocal250_tmp_var;
}

#define BM_DilloRunTimeMsgData_status_msgID_SET( base_ptr, in_val )\
{\
	/*lint --e{*} */\
	PVOID bmlocal251_my_ptr;\
	UINT bmlocal252_my_bitoff;\
	BM_DilloRunTimeMsgData_status_msgID_GET_POS( base_ptr, bmlocal251_my_ptr, bmlocal252_my_bitoff );\
	BMI_GENERIC_16BIT_LITTLE_SET_VOLATILE_NOSPAN( bmlocal251_my_ptr, bmlocal252_my_bitoff, 12, in_val, 0x00000000 );\
}

// DilloRunTimeMsgData_status_msgID: IS_DEFAULT accessor is not defined because no default value was specified.
// DilloRunTimeMsgData_status_msgID: SET_DEFAULT accessor is not defined because no default value was specified.
// DilloRunTimeMsgData_status_msgID: IS_RESET accessor is not defined because no reset value was specified.
// DilloRunTimeMsgData_status_msgID: SET_RESET accessor is not defined because no reset value was specified.
// DilloRunTimeMsgData_status_msgID: CLEAR accessor is not defined because of incompatible access rights. Specified: RW Required: W1C, WO1C.
// DilloRunTimeMsgData_status_msgID: SET(W1S) accessor is not defined because of incompatible access rights. Specified: RW Required: W1S, WO1S.
#define BM_DilloRunTimeMsgData_status_msgID_DUMP_DEPTH( base_ptr, depth )\
{\
	/*lint --e{*} */\
	UINT16 bmlocal253_out_val;\
	BM_DilloRunTimeMsgData_status_msgID_GET( base_ptr, bmlocal253_out_val );\
	/*lint -e(571) */\
	BMI_FORMAT_DUMP(depth, "msgID", 12, (UINT)(bmlocal253_out_val), "%d", 1);\
}

#define BM_DilloRunTimeMsgData_status_msgID_DUMP( base_ptr )\
{\
	/*lint --e{*} */\
	BM_DilloRunTimeMsgData_status_msgID_DUMP_DEPTH( base_ptr, 0 );\
}

#define BM_DilloRunTimeMsgData_status_msgID_INCREMENT( base_ptr )\
{\
	/*lint --e{*} */\
	UINT16 bmlocal254_val;\
	BM_DilloRunTimeMsgData_status_msgID_GET( base_ptr, bmlocal254_val );\
	(bmlocal254_val)++;\
	BM_DilloRunTimeMsgData_status_msgID_SET( base_ptr, bmlocal254_val );\
}

// DilloRunTimeMsgData_status_msgID: Validation accessors are not defined because validation condition was not specified.
#define BM_DilloRunTimeMsgData_status_msgID_GET_BYTES_SIZE( base_ptr, out_bytes )\
{\
	/*lint --e{*} */\
	UINT bmlocal255_tmp_bits;\
	BM_DilloRunTimeMsgData_status_msgID_GET_SIZE( base_ptr, out_bytes, bmlocal255_tmp_bits );\
	BMI_ROUND_UP_1BYTES( out_bytes, bmlocal255_tmp_bits );\
}

#define BM_DilloRunTimeMsgData_status_msgID_BYTES_SIZE 2

#define BM_DilloRunTimeMsgData_status_numOfParams_GET_POS( base_ptr, out_ptr, out_bitoff )\
{\
	/*lint --e{*} */\
	UINT bmlocal258_acc_bytes;\
	UINT bmlocal259_acc_bits;\
	PVOID bmlocal260_parent_out_ptr;\
	BM_DilloRunTimeMsgData_status_GET_POS( base_ptr, bmlocal260_parent_out_ptr, out_bitoff );\
	out_ptr = bmlocal260_parent_out_ptr;\
	bmlocal258_acc_bytes = 1;\
	bmlocal259_acc_bits = 4;\
	BMI_ADD_ASSIGN_PTR( out_ptr, bmlocal258_acc_bytes );\
	out_bitoff += bmlocal259_acc_bits;\
}

// Alignment of DilloRunTimeMsgData_status_numOfParams: accumulated=(1,4, ABA=2), parent.base=(0,0, ABA=2)
#define BM_DilloRunTimeMsgData_status_numOfParams_GET_SIZE( base_ptr, out_bytes, out_bits )\
{\
	/*lint --e{*} */\
	out_bytes = 0;\
	out_bits = 2;\
	BMI_UNUSED_VAR( base_ptr );\
}

#define BM_DilloRunTimeMsgData_status_numOfParams_GET( base_ptr, out_val )\
{\
	/*lint --e{*} */\
	PVOID bmlocal261_my_ptr;\
	UINT bmlocal262_my_bitoff;\
	BM_DilloRunTimeMsgData_status_numOfParams_GET_POS( base_ptr, bmlocal261_my_ptr, bmlocal262_my_bitoff );\
	BMI_GENERIC_16BIT_LITTLE_GET_VOLATILE_NOSPAN( bmlocal261_my_ptr, bmlocal262_my_bitoff, 2, UINT16, out_val, 0x00000001 );\
}

BMI_INLINE UINT16 BM_INLINE_DilloRunTimeMsgData_status_numOfParams_GET(PVOID base_ptr)
{
	/*lint --e{*} */
	UINT16 bmlocal263_tmp_var;
	BM_DilloRunTimeMsgData_status_numOfParams_GET( base_ptr, bmlocal263_tmp_var );
	return bmlocal263_tmp_var;
}

#define BM_DilloRunTimeMsgData_status_numOfParams_SET( base_ptr, in_val )\
{\
	/*lint --e{*} */\
	PVOID bmlocal264_my_ptr;\
	UINT bmlocal265_my_bitoff;\
	BM_DilloRunTimeMsgData_status_numOfParams_GET_POS( base_ptr, bmlocal264_my_ptr, bmlocal265_my_bitoff );\
	BMI_GENERIC_16BIT_LITTLE_SET_VOLATILE_NOSPAN( bmlocal264_my_ptr, bmlocal265_my_bitoff, 2, in_val, 0x00000001 );\
}

// DilloRunTimeMsgData_status_numOfParams: IS_DEFAULT accessor is not defined because no default value was specified.
// DilloRunTimeMsgData_status_numOfParams: SET_DEFAULT accessor is not defined because no default value was specified.
// DilloRunTimeMsgData_status_numOfParams: IS_RESET accessor is not defined because no reset value was specified.
// DilloRunTimeMsgData_status_numOfParams: SET_RESET accessor is not defined because no reset value was specified.
// DilloRunTimeMsgData_status_numOfParams: CLEAR accessor is not defined because of incompatible access rights. Specified: RW Required: W1C, WO1C.
// DilloRunTimeMsgData_status_numOfParams: SET(W1S) accessor is not defined because of incompatible access rights. Specified: RW Required: W1S, WO1S.
#define BM_DilloRunTimeMsgData_status_numOfParams_DUMP_DEPTH( base_ptr, depth )\
{\
	/*lint --e{*} */\
	UINT16 bmlocal266_out_val;\
	BM_DilloRunTimeMsgData_status_numOfParams_GET( base_ptr, bmlocal266_out_val );\
	/*lint -e(571) */\
	BMI_FORMAT_DUMP(depth, "numOfParams", 2, (UINT)(bmlocal266_out_val), "%d", 1);\
}

#define BM_DilloRunTimeMsgData_status_numOfParams_DUMP( base_ptr )\
{\
	/*lint --e{*} */\
	BM_DilloRunTimeMsgData_status_numOfParams_DUMP_DEPTH( base_ptr, 0 );\
}

#define BM_DilloRunTimeMsgData_status_numOfParams_INCREMENT( base_ptr )\
{\
	/*lint --e{*} */\
	UINT16 bmlocal267_val;\
	BM_DilloRunTimeMsgData_status_numOfParams_GET( base_ptr, bmlocal267_val );\
	(bmlocal267_val)++;\
	BM_DilloRunTimeMsgData_status_numOfParams_SET( base_ptr, bmlocal267_val );\
}

// DilloRunTimeMsgData_status_numOfParams: Validation accessors are not defined because validation condition was not specified.
#define BM_DilloRunTimeMsgData_status_numOfParams_GET_BYTES_SIZE( base_ptr, out_bytes )\
{\
	/*lint --e{*} */\
	UINT bmlocal268_tmp_bits;\
	BM_DilloRunTimeMsgData_status_numOfParams_GET_SIZE( base_ptr, out_bytes, bmlocal268_tmp_bits );\
	BMI_ROUND_UP_1BYTES( out_bytes, bmlocal268_tmp_bits );\
}

#define BM_DilloRunTimeMsgData_status_numOfParams_BYTES_SIZE 1

#define BM_DilloRunTimeMsgData_status_bufferOverrun_GET_POS( base_ptr, out_ptr, out_bitoff )\
{\
	/*lint --e{*} */\
	UINT bmlocal271_acc_bytes;\
	UINT bmlocal272_acc_bits;\
	PVOID bmlocal273_parent_out_ptr;\
	BM_DilloRunTimeMsgData_status_GET_POS( base_ptr, bmlocal273_parent_out_ptr, out_bitoff );\
	out_ptr = bmlocal273_parent_out_ptr;\
	bmlocal271_acc_bytes = 1;\
	bmlocal272_acc_bits = 6;\
	BMI_ADD_ASSIGN_PTR( out_ptr, bmlocal271_acc_bytes );\
	out_bitoff += bmlocal272_acc_bits;\
}

// Alignment of DilloRunTimeMsgData_status_bufferOverrun: accumulated=(1,6, ABA=2), parent.base=(0,0, ABA=2)
#define BM_DilloRunTimeMsgData_status_bufferOverrun_GET_SIZE( base_ptr, out_bytes, out_bits )\
{\
	/*lint --e{*} */\
	out_bytes = 0;\
	out_bits = 1;\
	BMI_UNUSED_VAR( base_ptr );\
}

#define BM_DilloRunTimeMsgData_status_bufferOverrun_GET( base_ptr, out_val )\
{\
	/*lint --e{*} */\
	PVOID bmlocal274_my_ptr;\
	UINT bmlocal275_my_bitoff;\
	BM_DilloRunTimeMsgData_status_bufferOverrun_GET_POS( base_ptr, bmlocal274_my_ptr, bmlocal275_my_bitoff );\
	BMI_GENERIC_16BIT_LITTLE_GET_VOLATILE_NOSPAN( bmlocal274_my_ptr, bmlocal275_my_bitoff, 1, UINT16, out_val, 0x00000001 );\
}

BMI_INLINE UINT16 BM_INLINE_DilloRunTimeMsgData_status_bufferOverrun_GET(PVOID base_ptr)
{
	/*lint --e{*} */
	UINT16 bmlocal276_tmp_var;
	BM_DilloRunTimeMsgData_status_bufferOverrun_GET( base_ptr, bmlocal276_tmp_var );
	return bmlocal276_tmp_var;
}

#define BM_DilloRunTimeMsgData_status_bufferOverrun_SET( base_ptr, in_val )\
{\
	/*lint --e{*} */\
	PVOID bmlocal277_my_ptr;\
	UINT bmlocal278_my_bitoff;\
	BM_DilloRunTimeMsgData_status_bufferOverrun_GET_POS( base_ptr, bmlocal277_my_ptr, bmlocal278_my_bitoff );\
	BMI_GENERIC_16BIT_LITTLE_SET_VOLATILE_NOSPAN( bmlocal277_my_ptr, bmlocal278_my_bitoff, 1, in_val, 0x00000001 );\
}

// DilloRunTimeMsgData_status_bufferOverrun: IS_DEFAULT accessor is not defined because no default value was specified.
// DilloRunTimeMsgData_status_bufferOverrun: SET_DEFAULT accessor is not defined because no default value was specified.
// DilloRunTimeMsgData_status_bufferOverrun: IS_RESET accessor is not defined because no reset value was specified.
// DilloRunTimeMsgData_status_bufferOverrun: SET_RESET accessor is not defined because no reset value was specified.
// DilloRunTimeMsgData_status_bufferOverrun: CLEAR accessor is not defined because of incompatible access rights. Specified: RW Required: W1C, WO1C.
// DilloRunTimeMsgData_status_bufferOverrun: SET(W1S) accessor is not defined because of incompatible access rights. Specified: RW Required: W1S, WO1S.
#define BM_DilloRunTimeMsgData_status_bufferOverrun_DUMP_DEPTH( base_ptr, depth )\
{\
	/*lint --e{*} */\
	UINT16 bmlocal279_out_val;\
	BM_DilloRunTimeMsgData_status_bufferOverrun_GET( base_ptr, bmlocal279_out_val );\
	/*lint -e(571) */\
	BMI_FORMAT_DUMP(depth, "bufferOverrun", 1, (UINT)(bmlocal279_out_val), "%d", 1);\
}

#define BM_DilloRunTimeMsgData_status_bufferOverrun_DUMP( base_ptr )\
{\
	/*lint --e{*} */\
	BM_DilloRunTimeMsgData_status_bufferOverrun_DUMP_DEPTH( base_ptr, 0 );\
}

#define BM_DilloRunTimeMsgData_status_bufferOverrun_INCREMENT( base_ptr )\
{\
	/*lint --e{*} */\
	UINT16 bmlocal280_val;\
	BM_DilloRunTimeMsgData_status_bufferOverrun_GET( base_ptr, bmlocal280_val );\
	(bmlocal280_val)++;\
	BM_DilloRunTimeMsgData_status_bufferOverrun_SET( base_ptr, bmlocal280_val );\
}

// DilloRunTimeMsgData_status_bufferOverrun: Validation accessors are not defined because validation condition was not specified.
#define BM_DilloRunTimeMsgData_status_bufferOverrun_GET_BYTES_SIZE( base_ptr, out_bytes )\
{\
	/*lint --e{*} */\
	UINT bmlocal281_tmp_bits;\
	BM_DilloRunTimeMsgData_status_bufferOverrun_GET_SIZE( base_ptr, out_bytes, bmlocal281_tmp_bits );\
	BMI_ROUND_UP_1BYTES( out_bytes, bmlocal281_tmp_bits );\
}

#define BM_DilloRunTimeMsgData_status_bufferOverrun_BYTES_SIZE 1

#define BM_DilloRunTimeMsgData_status_timeStampPresent_GET_POS( base_ptr, out_ptr, out_bitoff )\
{\
	/*lint --e{*} */\
	UINT bmlocal284_acc_bytes;\
	UINT bmlocal285_acc_bits;\
	PVOID bmlocal286_parent_out_ptr;\
	BM_DilloRunTimeMsgData_status_GET_POS( base_ptr, bmlocal286_parent_out_ptr, out_bitoff );\
	out_ptr = bmlocal286_parent_out_ptr;\
	bmlocal284_acc_bytes = 1;\
	bmlocal285_acc_bits = 7;\
	BMI_ADD_ASSIGN_PTR( out_ptr, bmlocal284_acc_bytes );\
	out_bitoff += bmlocal285_acc_bits;\
}

// Alignment of DilloRunTimeMsgData_status_timeStampPresent: accumulated=(1,7, ABA=2), parent.base=(0,0, ABA=2)
#define BM_DilloRunTimeMsgData_status_timeStampPresent_GET_SIZE( base_ptr, out_bytes, out_bits )\
{\
	/*lint --e{*} */\
	out_bytes = 0;\
	out_bits = 1;\
	BMI_UNUSED_VAR( base_ptr );\
}

#define BM_DilloRunTimeMsgData_status_timeStampPresent_GET( base_ptr, out_val )\
{\
	/*lint --e{*} */\
	PVOID bmlocal287_my_ptr;\
	UINT bmlocal288_my_bitoff;\
	BM_DilloRunTimeMsgData_status_timeStampPresent_GET_POS( base_ptr, bmlocal287_my_ptr, bmlocal288_my_bitoff );\
	BMI_GENERIC_16BIT_LITTLE_GET_VOLATILE_NOSPAN( bmlocal287_my_ptr, bmlocal288_my_bitoff, 1, UINT16, out_val, 0x00000001 );\
}

BMI_INLINE UINT16 BM_INLINE_DilloRunTimeMsgData_status_timeStampPresent_GET(PVOID base_ptr)
{
	/*lint --e{*} */
	UINT16 bmlocal289_tmp_var;
	BM_DilloRunTimeMsgData_status_timeStampPresent_GET( base_ptr, bmlocal289_tmp_var );
	return bmlocal289_tmp_var;
}

#define BM_DilloRunTimeMsgData_status_timeStampPresent_SET( base_ptr, in_val )\
{\
	/*lint --e{*} */\
	PVOID bmlocal290_my_ptr;\
	UINT bmlocal291_my_bitoff;\
	BM_DilloRunTimeMsgData_status_timeStampPresent_GET_POS( base_ptr, bmlocal290_my_ptr, bmlocal291_my_bitoff );\
	BMI_GENERIC_16BIT_LITTLE_SET_VOLATILE_NOSPAN( bmlocal290_my_ptr, bmlocal291_my_bitoff, 1, in_val, 0x00000001 );\
}

// DilloRunTimeMsgData_status_timeStampPresent: IS_DEFAULT accessor is not defined because no default value was specified.
// DilloRunTimeMsgData_status_timeStampPresent: SET_DEFAULT accessor is not defined because no default value was specified.
// DilloRunTimeMsgData_status_timeStampPresent: IS_RESET accessor is not defined because no reset value was specified.
// DilloRunTimeMsgData_status_timeStampPresent: SET_RESET accessor is not defined because no reset value was specified.
// DilloRunTimeMsgData_status_timeStampPresent: CLEAR accessor is not defined because of incompatible access rights. Specified: RW Required: W1C, WO1C.
// DilloRunTimeMsgData_status_timeStampPresent: SET(W1S) accessor is not defined because of incompatible access rights. Specified: RW Required: W1S, WO1S.
#define BM_DilloRunTimeMsgData_status_timeStampPresent_DUMP_DEPTH( base_ptr, depth )\
{\
	/*lint --e{*} */\
	UINT16 bmlocal292_out_val;\
	BM_DilloRunTimeMsgData_status_timeStampPresent_GET( base_ptr, bmlocal292_out_val );\
	/*lint -e(571) */\
	BMI_FORMAT_DUMP(depth, "timeStampPresent", 1, (UINT)(bmlocal292_out_val), "%d", 1);\
}

#define BM_DilloRunTimeMsgData_status_timeStampPresent_DUMP( base_ptr )\
{\
	/*lint --e{*} */\
	BM_DilloRunTimeMsgData_status_timeStampPresent_DUMP_DEPTH( base_ptr, 0 );\
}

#define BM_DilloRunTimeMsgData_status_timeStampPresent_INCREMENT( base_ptr )\
{\
	/*lint --e{*} */\
	UINT16 bmlocal293_val;\
	BM_DilloRunTimeMsgData_status_timeStampPresent_GET( base_ptr, bmlocal293_val );\
	(bmlocal293_val)++;\
	BM_DilloRunTimeMsgData_status_timeStampPresent_SET( base_ptr, bmlocal293_val );\
}

// DilloRunTimeMsgData_status_timeStampPresent: Validation accessors are not defined because validation condition was not specified.
#define BM_DilloRunTimeMsgData_status_timeStampPresent_GET_BYTES_SIZE( base_ptr, out_bytes )\
{\
	/*lint --e{*} */\
	UINT bmlocal294_tmp_bits;\
	BM_DilloRunTimeMsgData_status_timeStampPresent_GET_SIZE( base_ptr, out_bytes, bmlocal294_tmp_bits );\
	BMI_ROUND_UP_1BYTES( out_bytes, bmlocal294_tmp_bits );\
}

#define BM_DilloRunTimeMsgData_status_timeStampPresent_BYTES_SIZE 1

#define BM_DilloRunTimeMsgData_status_GET_SIZE( base_ptr, out_bytes, out_bits )\
{\
	/*lint --e{*} */\
	out_bytes = 2;\
	out_bits = 0;\
	BMI_UNUSED_VAR( base_ptr );\
}

#define BM_DilloRunTimeMsgData_status_GET_BYTES_SIZE( base_ptr, out_bytes )\
{\
	/*lint --e{*} */\
	UINT bmlocal297_tmp_bits;\
	BM_DilloRunTimeMsgData_status_GET_SIZE( base_ptr, out_bytes, bmlocal297_tmp_bits );\
	BMI_ROUND_UP_1BYTES( out_bytes, bmlocal297_tmp_bits );\
}

#define BM_DilloRunTimeMsgData_status_BYTES_SIZE 2

BMI_INLINE UINT BM_INLINE_DilloRunTimeMsgData_status_GET_SIZE()
{
	/*lint --e{*} */
	return 2;
}

#define BM_DilloRunTimeMsgData_status_GET( base_ptr, out_val )\
{\
	/*lint --e{*} */\
	PVOID bmlocal298_my_ptr;\
	UINT bmlocal299_my_bitoff;\
	BM_DilloRunTimeMsgData_status_msgID_GET_POS( base_ptr, bmlocal298_my_ptr, bmlocal299_my_bitoff );\
	BMI_GENERIC_16BIT_LITTLE_GET_VOLATILE_NOSPAN( bmlocal298_my_ptr, bmlocal299_my_bitoff, 16, UINT16, out_val, 0x00000000 );\
}

BMI_INLINE UINT16 BM_INLINE_DilloRunTimeMsgData_status_GET(PVOID base_ptr)
{
	/*lint --e{*} */
	UINT16 bmlocal300_tmp_var;
	BM_DilloRunTimeMsgData_status_GET( base_ptr, bmlocal300_tmp_var );
	return bmlocal300_tmp_var;
}

#define BM_DilloRunTimeMsgData_status_SET( base_ptr, in_val )\
{\
	/*lint --e{*} */\
	PVOID bmlocal301_my_ptr;\
	UINT bmlocal302_my_bitoff;\
	BM_DilloRunTimeMsgData_status_msgID_GET_POS( base_ptr, bmlocal301_my_ptr, bmlocal302_my_bitoff );\
	BMI_GENERIC_16BIT_LITTLE_SET_VOLATILE_NOSPAN( bmlocal301_my_ptr, bmlocal302_my_bitoff, 16, in_val, 0x00000000 );\
}

// DilloRunTimeMsgData_status: IS_DEFAULT accessor is not defined because no default value was specified.
// DilloRunTimeMsgData_status: SET_DEFAULT accessor is not defined because no default value was specified.
// DilloRunTimeMsgData_status: IS_RESET accessor is not defined because no reset value was specified.
// DilloRunTimeMsgData_status: SET_RESET accessor is not defined because no reset value was specified.
#define BM_DilloRunTimeMsgData_status_GET_ALL( base_ptr, param_msgID, param_numOfParams, param_bufferOverrun, param_timeStampPresent )\
{\
	/*lint --e{*} */\
	UINT16 bmlocal303_val;\
	BM_DilloRunTimeMsgData_status_GET( base_ptr, bmlocal303_val );\
	param_msgID = (UINT16)(((bmlocal303_val&BM_DilloMsgStatus_msgID_SHIFTED_MASK) >> BM_DilloMsgStatus_msgID_OFFSET));\
	param_numOfParams = (UINT8)(((bmlocal303_val&BM_DilloMsgStatus_numOfParams_SHIFTED_MASK) >> BM_DilloMsgStatus_numOfParams_OFFSET));\
	param_bufferOverrun = (UINT8)(((bmlocal303_val&BM_DilloMsgStatus_bufferOverrun_SHIFTED_MASK) >> BM_DilloMsgStatus_bufferOverrun_OFFSET));\
	param_timeStampPresent = (UINT8)(((bmlocal303_val&BM_DilloMsgStatus_timeStampPresent_SHIFTED_MASK) >> BM_DilloMsgStatus_timeStampPresent_OFFSET));\
}

#define BM_DilloRunTimeMsgData_status_SET_ALL( base_ptr, param_msgID, param_numOfParams, param_bufferOverrun, param_timeStampPresent )\
{\
	/*lint --e{*} */\
	UINT16 bmlocal304_varToWrite = (UINT16)(((param_msgID&BM_DilloMsgStatus_msgID_MASK) << BM_DilloMsgStatus_msgID_OFFSET) | ((param_numOfParams&BM_DilloMsgStatus_numOfParams_MASK) << BM_DilloMsgStatus_numOfParams_OFFSET) | ((param_bufferOverrun&BM_DilloMsgStatus_bufferOverrun_MASK) << BM_DilloMsgStatus_bufferOverrun_OFFSET) | ((param_timeStampPresent&BM_DilloMsgStatus_timeStampPresent_MASK) << BM_DilloMsgStatus_timeStampPresent_OFFSET));\
	BM_DilloRunTimeMsgData_status_SET( base_ptr, bmlocal304_varToWrite );\
}

#define BM_DilloRunTimeMsgData_status_STRICT_SET_ALL( base_ptr, param_msgID, param_numOfParams, param_bufferOverrun, param_timeStampPresent )\
{\
	/*lint --e{*} */\
	UINT16 bmlocal305_varToWrite = (UINT16)((param_msgID << BM_DilloMsgStatus_msgID_OFFSET) | (param_numOfParams << BM_DilloMsgStatus_numOfParams_OFFSET) | (param_bufferOverrun << BM_DilloMsgStatus_bufferOverrun_OFFSET) | (param_timeStampPresent << BM_DilloMsgStatus_timeStampPresent_OFFSET));\
	BM_DilloRunTimeMsgData_status_SET( base_ptr, bmlocal305_varToWrite );\
}

#define BM_DilloRunTimeMsgData_status_DUMP_DEPTH( base_ptr, depth )\
{\
	/*lint --e{*} */\
	BMI_FORMAT_NONVALUE_DUMP(depth, "status", 1);\
	BM_DilloRunTimeMsgData_status_msgID_DUMP_DEPTH( base_ptr, (depth + 1) );\
	BM_DilloRunTimeMsgData_status_numOfParams_DUMP_DEPTH( base_ptr, (depth + 1) );\
	BM_DilloRunTimeMsgData_status_bufferOverrun_DUMP_DEPTH( base_ptr, (depth + 1) );\
	BM_DilloRunTimeMsgData_status_timeStampPresent_DUMP_DEPTH( base_ptr, (depth + 1) );\
	BMI_UNUSED_VAR( base_ptr );\
}

#define BM_DilloRunTimeMsgData_status_DUMP( base_ptr )\
{\
	/*lint --e{*} */\
	BM_DilloRunTimeMsgData_status_DUMP_DEPTH( base_ptr, 0 );\
}


#define BM_DilloRunTimeMsgData_params_GET_POS( base_ptr, out_ptr, out_bitoff )\
{\
	/*lint --e{*} */\
	UINT bmlocal308_acc_bytes;\
	UINT bmlocal309_acc_bits;\
	out_ptr = base_ptr;\
	out_bitoff = 0;\
	bmlocal308_acc_bytes = 2;\
	bmlocal309_acc_bits = 0;\
	BMI_ADD_ASSIGN_PTR( out_ptr, bmlocal308_acc_bytes );\
	out_bitoff += bmlocal309_acc_bits;\
}

#define BM_DilloRunTimeMsgData_params_GET_POS_ALIGNED( base_ptr, out_ptr )\
{\
	/*lint --e{*} */\
	UINT bmlocal310_tmp_bitoff;\
	BM_DilloRunTimeMsgData_params_GET_POS( base_ptr, out_ptr, bmlocal310_tmp_bitoff );\
	BMI_NORMALIZE_BITOFF(out_ptr, bmlocal310_tmp_bitoff);\
}

#define BM_DilloRunTimeMsgData_params_POS_ALIGNED 2

// ARRAY: DilloRunTimeMsgData_params
#define BM_DilloRunTimeMsgData_params_GET_SIZE( base_ptr, out_bytes, out_bits )\
{\
	/*lint --e{*} */\
	{\
		UINT16 bmlocal311_var0;\
		BM_DilloRunTimeMsgData_status_numOfParams_GET( base_ptr, bmlocal311_var0 );\
		out_bytes = (UINT)(2*(1*bmlocal311_var0));\
	}\
	out_bits = 0;\
	BMI_UNUSED_VAR( base_ptr );\
}

BMI_INLINE UINT BM_INLINE_DilloRunTimeMsgData_params_GET_SIZE(PVOID base_ptr)
{
	/*lint --e{*} */
	UINT bmlocal312_my_bytes;
	UINT bmlocal313_my_bits;
	BM_DilloRunTimeMsgData_params_GET_SIZE( base_ptr, bmlocal312_my_bytes, bmlocal313_my_bits );
	BMI_NORMALIZE_BITSIZE(bmlocal312_my_bytes, bmlocal313_my_bits);
	BMI_UNUSED_VAR( bmlocal313_my_bits );
	return bmlocal312_my_bytes;
}

#define BM_DilloRunTimeMsgData_params_GET_DIMENSION_ELEMENT_COUNT( base_ptr, index, out_element_count )\
{\
	/*lint --e{*} */\
	switch( index )\
	{\
		case (0):\
		{\
			UINT16 bmlocal314_var0;\
			BM_DilloRunTimeMsgData_status_numOfParams_GET( base_ptr, bmlocal314_var0 );\
			out_element_count = (UINT)(bmlocal314_var0);\
		}\
		break;\
		default:\
		out_element_count = 0;\
		break;\
	}\
	BMI_UNUSED_VAR( base_ptr );\
}

#define BM_DilloRunTimeMsgData_params_GET_ELEMENT_POS( base_ptr, idx0, out_ptr, out_bitoff )\
{\
	/*lint --e{*} */\
	PVOID bmlocal315_out_ptr;\
	UINT bmlocal316_out_bitoff;\
	UINT bmlocal317_element_size_bytes;\
	UINT bmlocal318_element_size_bits;\
	BM_DilloRunTimeMsgData_params_GET_POS( base_ptr, bmlocal315_out_ptr, bmlocal316_out_bitoff );\
	bmlocal317_element_size_bytes = 2;\
	bmlocal318_element_size_bits = 0;\
	out_ptr = BMI_NUMBER_TO_PTR_CAST( BMI_PTR_TO_NUMERIC_CAST(bmlocal315_out_ptr) + (idx0) * bmlocal317_element_size_bytes );\
	out_bitoff = bmlocal316_out_bitoff;\
	BMI_UNUSED_VAR( bmlocal318_element_size_bits );\
}

// COMPOSITE: Full name: 'DilloRunTimeMsgData_params' Type: 'Uint16', Inner, Non-instance, No bitoff root
#define BM_DilloRunTimeMsgData_params_value_GET_POS( base_ptr, idx0, out_ptr, out_bitoff )\
{\
	/*lint --e{*} */\
	PVOID bmlocal319_parent_out_ptr;\
	BM_DilloRunTimeMsgData_params_GET_ELEMENT_POS( base_ptr, idx0, bmlocal319_parent_out_ptr, out_bitoff );\
	out_ptr = bmlocal319_parent_out_ptr;\
}

// Alignment of DilloRunTimeMsgData_params_value: accumulated=(0,0, ABA=2), parent.base=(0,0, ABA=2)
#define BM_DilloRunTimeMsgData_params_value_GET_SIZE( base_ptr, idx0, out_bytes, out_bits )\
{\
	/*lint --e{*} */\
	out_bytes = 2;\
	out_bits = 0;\
	BMI_UNUSED_VAR( base_ptr );\
	BMI_UNUSED_VAR( idx0 );\
}

#define BM_DilloRunTimeMsgData_params_value_GET( base_ptr, idx0, out_val )\
{\
	/*lint --e{*} */\
	PVOID bmlocal320_my_ptr;\
	UINT bmlocal321_my_bitoff;\
	BM_DilloRunTimeMsgData_params_value_GET_POS( base_ptr, idx0, bmlocal320_my_ptr, bmlocal321_my_bitoff );\
	if( BMI_MACHINE_ARM_LITTLE == BMI_MACHINE_VALUE )\
	{\
		(out_val) = (UINT16)BMI_32BIT_EXTRACT( (BMI_GET_16BIT_PTR_CONTENTS( BMI_PTR_TO_NUMERIC_CAST(bmlocal320_my_ptr)) ), 0, 16, 0);\
	}\
	else if( BMI_MACHINE_INTEL_LITTLE == BMI_MACHINE_VALUE )\
	{\
		(out_val) = (UINT16)BMI_32BIT_EXTRACT( (BMI_GET_16BIT_PTR_CONTENTS( BMI_PTR_TO_NUMERIC_CAST(bmlocal320_my_ptr)) ), 0, 16, 0);\
	}\
	else\
	{\
		BMI_GENERIC_32BIT_LITTLE_GET( bmlocal320_my_ptr, bmlocal321_my_bitoff, 16, UINT16, out_val, 0xFFFFFFFF );\
	}\
}

BMI_INLINE UINT16 BM_INLINE_DilloRunTimeMsgData_params_value_GET(PVOID base_ptr, UINT idx0)
{
	/*lint --e{*} */
	UINT16 bmlocal322_tmp_var;
	BM_DilloRunTimeMsgData_params_value_GET( base_ptr, idx0, bmlocal322_tmp_var );
	return bmlocal322_tmp_var;
}

#define BM_DilloRunTimeMsgData_params_value_SET( base_ptr, idx0, in_val )\
{\
	/*lint --e{*} */\
	PVOID bmlocal323_my_ptr;\
	UINT bmlocal324_my_bitoff;\
	BM_DilloRunTimeMsgData_params_value_GET_POS( base_ptr, idx0, bmlocal323_my_ptr, bmlocal324_my_bitoff );\
	if( BMI_MACHINE_ARM_LITTLE == BMI_MACHINE_VALUE )\
	{\
		BMI_32BIT_CLEAR_ASSIGN_TYPE( BMI_GET_16BIT_PTR_CONTENTS( BMI_PTR_TO_NUMERIC_CAST(bmlocal323_my_ptr) ), (in_val), 0, 0, 16, UINT16 );\
	}\
	else if( BMI_MACHINE_INTEL_LITTLE == BMI_MACHINE_VALUE )\
	{\
		BMI_32BIT_CLEAR_ASSIGN_TYPE( BMI_GET_16BIT_PTR_CONTENTS( BMI_PTR_TO_NUMERIC_CAST(bmlocal323_my_ptr) ), (in_val), 0, 0, 16, UINT16 );\
	}\
	else\
	{\
		BMI_GENERIC_32BIT_LITTLE_SET( bmlocal323_my_ptr, bmlocal324_my_bitoff, 16, in_val, 0xFFFFFFFF );\
	}\
}

// DilloRunTimeMsgData_params_value: IS_DEFAULT accessor is not defined because no default value was specified.
// DilloRunTimeMsgData_params_value: SET_DEFAULT accessor is not defined because no default value was specified.
// DilloRunTimeMsgData_params_value: IS_RESET accessor is not defined because no reset value was specified.
// DilloRunTimeMsgData_params_value: SET_RESET accessor is not defined because no reset value was specified.
// DilloRunTimeMsgData_params_value: CLEAR accessor is not defined because of incompatible access rights. Specified: RW Required: W1C, WO1C.
// DilloRunTimeMsgData_params_value: SET(W1S) accessor is not defined because of incompatible access rights. Specified: RW Required: W1S, WO1S.
#define BM_DilloRunTimeMsgData_params_value_DUMP_DEPTH( base_ptr, idx0, depth )\
{\
	/*lint --e{*} */\
	UINT16 bmlocal325_out_val;\
	BM_DilloRunTimeMsgData_params_value_GET( base_ptr, idx0, bmlocal325_out_val );\
	/*lint -e(571) */\
	BMI_FORMAT_DUMP(depth, "value", 16, (UINT)(bmlocal325_out_val), "%u", 1);\
}

#define BM_DilloRunTimeMsgData_params_value_DUMP( base_ptr, idx0 )\
{\
	/*lint --e{*} */\
	BM_DilloRunTimeMsgData_params_value_DUMP_DEPTH( base_ptr, idx0, 0 );\
}

#define BM_DilloRunTimeMsgData_params_value_INCREMENT( base_ptr, idx0 )\
{\
	/*lint --e{*} */\
	PVOID bmlocal326_my_ptr;\
	UINT bmlocal327_my_bitoff;\
	BM_DilloRunTimeMsgData_params_value_GET_POS( base_ptr, idx0, bmlocal326_my_ptr, bmlocal327_my_bitoff );\
	(*((UINT16*)bmlocal326_my_ptr))++;\
	BMI_UNUSED_VAR( bmlocal327_my_bitoff );\
}

// DilloRunTimeMsgData_params_value: Validation accessors are not defined because validation condition was not specified.
#define BM_DilloRunTimeMsgData_params_value_GET_BYTES_SIZE( base_ptr, idx0, out_bytes )\
{\
	/*lint --e{*} */\
	UINT bmlocal328_tmp_bits;\
	BM_DilloRunTimeMsgData_params_value_GET_SIZE( base_ptr, idx0, out_bytes, bmlocal328_tmp_bits );\
	BMI_ROUND_UP_1BYTES( out_bytes, bmlocal328_tmp_bits );\
}

#define BM_DilloRunTimeMsgData_params_value_BYTES_SIZE 2

#define BM_DilloRunTimeMsgData_params_GET_CELL_SIZE( base_ptr, idx0, out_bytes, out_bits )\
{\
	/*lint --e{*} */\
	out_bytes = 2;\
	out_bits = 0;\
	BMI_UNUSED_VAR( base_ptr );\
	BMI_UNUSED_VAR( idx0 );\
}

#define BM_DilloRunTimeMsgData_params_GET_BYTES_CELL_SIZE( base_ptr, idx0, out_bytes )\
{\
	/*lint --e{*} */\
	UINT bmlocal331_tmp_bits;\
	BM_DilloRunTimeMsgData_params_GET_CELL_SIZE( base_ptr, idx0, out_bytes, bmlocal331_tmp_bits );\
	BMI_ROUND_UP_1BYTES( out_bytes, bmlocal331_tmp_bits );\
}

#define BM_DilloRunTimeMsgData_params_BYTES_CELL_SIZE 2

BMI_INLINE UINT BM_INLINE_DilloRunTimeMsgData_params_GET_CELL_SIZE()
{
	/*lint --e{*} */
	return 2;
}

#define BM_DilloRunTimeMsgData_params_DUMP_DEPTH_IDX( base_ptr, idx0, depth )\
{\
	/*lint --e{*} */\
	BM_DilloRunTimeMsgData_params_value_DUMP_DEPTH( base_ptr, idx0, (depth + 1) );\
	BMI_UNUSED_VAR( base_ptr );\
	BMI_UNUSED_VAR( idx0 );\
}

#define BM_DilloRunTimeMsgData_params_DUMP_IDX( base_ptr, idx0 )\
{\
	/*lint --e{*} */\
	BM_DilloRunTimeMsgData_params_DUMP_DEPTH_IDX( base_ptr, idx0, 0 );\
}

#define BM_DilloRunTimeMsgData_params_DUMP_DEPTH( base_ptr, depth )\
{\
	/*lint --e{*} */\
	UINT bmlocal332_dim_size0;\
	UINT bmlocal333_idx0;\
	{\
		UINT16 bmlocal334_var0;\
		BM_DilloRunTimeMsgData_status_numOfParams_GET( base_ptr, bmlocal334_var0 );\
		bmlocal332_dim_size0 = (UINT)(bmlocal334_var0);\
	}\
	BMI_FORMAT_NONVALUE_DUMP(depth, "params", 1);\
	for( bmlocal333_idx0=0; bmlocal333_idx0<bmlocal332_dim_size0; bmlocal333_idx0++ )\
	{\
		BMI_FORMAT_NONVALUE_DUMP((depth + 1), "(", 0);\
		/*lint -e(571) */\
		BMI_FORMAT_DUMP(0, "", 32, (UINT)(bmlocal333_idx0), "%d", 0);\
		BMI_FORMAT_NONVALUE_DUMP(0, ")", 1);\
		BM_DilloRunTimeMsgData_params_DUMP_DEPTH_IDX( base_ptr, bmlocal333_idx0, depth );\
	}\
	BMI_UNUSED_VAR( base_ptr );\
}

#define BM_DilloRunTimeMsgData_params_DUMP( base_ptr )\
{\
	/*lint --e{*} */\
	BM_DilloRunTimeMsgData_params_DUMP_DEPTH( base_ptr, 0 );\
}

#define BM_DilloRunTimeMsgData_params_GET_BYTES_SIZE( base_ptr, out_bytes )\
{\
	/*lint --e{*} */\
	UINT bmlocal335_tmp_bits;\
	BM_DilloRunTimeMsgData_params_GET_SIZE( base_ptr, out_bytes, bmlocal335_tmp_bits );\
	BMI_ROUND_UP_1BYTES( out_bytes, bmlocal335_tmp_bits );\
}


#define BM_DilloRunTimeMsgData_timeStampOpt_GET_POS( base_ptr, out_ptr, out_bitoff )\
{\
	/*lint --e{*} */\
	UINT bmlocal336_tmp_bytes = 0;\
	UINT bmlocal337_tmp_bits = 0;\
	UINT bmlocal338_acc_bytes;\
	UINT bmlocal339_acc_bits;\
	out_ptr = base_ptr;\
	out_bitoff = 0;\
	bmlocal338_acc_bytes = 2;\
	bmlocal339_acc_bits = 0;\
	BM_DilloRunTimeMsgData_params_GET_SIZE( base_ptr, bmlocal336_tmp_bytes, bmlocal337_tmp_bits );\
	bmlocal338_acc_bytes += bmlocal336_tmp_bytes;\
	bmlocal339_acc_bits += bmlocal337_tmp_bits;\
	BMI_ADD_ASSIGN_PTR( out_ptr, bmlocal338_acc_bytes );\
	out_bitoff += bmlocal339_acc_bits;\
}

#define BM_DilloRunTimeMsgData_timeStampOpt_timeStamp_GET_POS( base_ptr, out_ptr, out_bitoff )\
{\
	/*lint --e{*} */\
	PVOID bmlocal340_parent_out_ptr;\
	BM_DilloRunTimeMsgData_timeStampOpt_GET_POS( base_ptr, bmlocal340_parent_out_ptr, out_bitoff );\
	out_ptr = bmlocal340_parent_out_ptr;\
}

// COMPOSITE: Full name: 'DilloRunTimeMsgData_timeStampOpt_timeStamp' Type: 'DilloTimeStamp', Inner, Non-instance, No bitoff root
#define BM_DilloRunTimeMsgData_timeStampOpt_timeStamp_leastSignificant_GET_POS( base_ptr, out_ptr, out_bitoff )\
{\
	/*lint --e{*} */\
	PVOID bmlocal341_parent_out_ptr;\
	BM_DilloRunTimeMsgData_timeStampOpt_timeStamp_GET_POS( base_ptr, bmlocal341_parent_out_ptr, out_bitoff );\
	out_ptr = bmlocal341_parent_out_ptr;\
}

#define BM_DilloRunTimeMsgData_timeStampOpt_timeStamp_leastSignificant_GET_POS_ALIGNED( base_ptr, out_ptr )\
{\
	/*lint --e{*} */\
	UINT bmlocal342_tmp_bitoff;\
	BM_DilloRunTimeMsgData_timeStampOpt_timeStamp_leastSignificant_GET_POS( base_ptr, out_ptr, bmlocal342_tmp_bitoff );\
	BMI_NORMALIZE_BITOFF(out_ptr, bmlocal342_tmp_bitoff);\
}

// Alignment of DilloRunTimeMsgData_timeStampOpt_timeStamp_leastSignificant: accumulated=(Variable), parent.base=(Variable)
#define BM_DilloRunTimeMsgData_timeStampOpt_timeStamp_leastSignificant_GET_SIZE( base_ptr, out_bytes, out_bits )\
{\
	/*lint --e{*} */\
	out_bytes = 2;\
	out_bits = 0;\
	BMI_UNUSED_VAR( base_ptr );\
}

#define BM_DilloRunTimeMsgData_timeStampOpt_timeStamp_leastSignificant_GET( base_ptr, out_val )\
{\
	/*lint --e{*} */\
	PVOID bmlocal343_my_ptr;\
	UINT bmlocal344_my_bitoff;\
	BM_DilloRunTimeMsgData_timeStampOpt_timeStamp_leastSignificant_GET_POS( base_ptr, bmlocal343_my_ptr, bmlocal344_my_bitoff );\
	BMI_GENERIC_32BIT_LITTLE_GET( bmlocal343_my_ptr, bmlocal344_my_bitoff, 16, UINT16, out_val, 0xFFFFFFFF );\
}

BMI_INLINE UINT16 BM_INLINE_DilloRunTimeMsgData_timeStampOpt_timeStamp_leastSignificant_GET(PVOID base_ptr)
{
	/*lint --e{*} */
	UINT16 bmlocal345_tmp_var;
	BM_DilloRunTimeMsgData_timeStampOpt_timeStamp_leastSignificant_GET( base_ptr, bmlocal345_tmp_var );
	return bmlocal345_tmp_var;
}

#define BM_DilloRunTimeMsgData_timeStampOpt_timeStamp_leastSignificant_SET( base_ptr, in_val )\
{\
	/*lint --e{*} */\
	PVOID bmlocal346_my_ptr;\
	UINT bmlocal347_my_bitoff;\
	BM_DilloRunTimeMsgData_timeStampOpt_timeStamp_leastSignificant_GET_POS( base_ptr, bmlocal346_my_ptr, bmlocal347_my_bitoff );\
	BMI_GENERIC_32BIT_LITTLE_SET( bmlocal346_my_ptr, bmlocal347_my_bitoff, 16, in_val, 0xFFFFFFFF );\
}

// DilloRunTimeMsgData_timeStampOpt_timeStamp_leastSignificant: IS_DEFAULT accessor is not defined because no default value was specified.
// DilloRunTimeMsgData_timeStampOpt_timeStamp_leastSignificant: SET_DEFAULT accessor is not defined because no default value was specified.
// DilloRunTimeMsgData_timeStampOpt_timeStamp_leastSignificant: IS_RESET accessor is not defined because no reset value was specified.
// DilloRunTimeMsgData_timeStampOpt_timeStamp_leastSignificant: SET_RESET accessor is not defined because no reset value was specified.
// DilloRunTimeMsgData_timeStampOpt_timeStamp_leastSignificant: CLEAR accessor is not defined because of incompatible access rights. Specified: RW Required: W1C, WO1C.
// DilloRunTimeMsgData_timeStampOpt_timeStamp_leastSignificant: SET(W1S) accessor is not defined because of incompatible access rights. Specified: RW Required: W1S, WO1S.
#define BM_DilloRunTimeMsgData_timeStampOpt_timeStamp_leastSignificant_DUMP_DEPTH( base_ptr, depth )\
{\
	/*lint --e{*} */\
	UINT16 bmlocal348_out_val;\
	BM_DilloRunTimeMsgData_timeStampOpt_timeStamp_leastSignificant_GET( base_ptr, bmlocal348_out_val );\
	/*lint -e(571) */\
	BMI_FORMAT_DUMP(depth, "leastSignificant", 16, (UINT)(bmlocal348_out_val), "%d", 1);\
}

#define BM_DilloRunTimeMsgData_timeStampOpt_timeStamp_leastSignificant_DUMP( base_ptr )\
{\
	/*lint --e{*} */\
	BM_DilloRunTimeMsgData_timeStampOpt_timeStamp_leastSignificant_DUMP_DEPTH( base_ptr, 0 );\
}

#define BM_DilloRunTimeMsgData_timeStampOpt_timeStamp_leastSignificant_INCREMENT( base_ptr )\
{\
	/*lint --e{*} */\
	UINT16 bmlocal349_val;\
	BM_DilloRunTimeMsgData_timeStampOpt_timeStamp_leastSignificant_GET( base_ptr, bmlocal349_val );\
	(bmlocal349_val)++;\
	BM_DilloRunTimeMsgData_timeStampOpt_timeStamp_leastSignificant_SET( base_ptr, bmlocal349_val );\
}

// DilloRunTimeMsgData_timeStampOpt_timeStamp_leastSignificant: Validation accessors are not defined because validation condition was not specified.
#define BM_DilloRunTimeMsgData_timeStampOpt_timeStamp_leastSignificant_GET_BYTES_SIZE( base_ptr, out_bytes )\
{\
	/*lint --e{*} */\
	UINT bmlocal350_tmp_bits;\
	BM_DilloRunTimeMsgData_timeStampOpt_timeStamp_leastSignificant_GET_SIZE( base_ptr, out_bytes, bmlocal350_tmp_bits );\
	BMI_ROUND_UP_1BYTES( out_bytes, bmlocal350_tmp_bits );\
}

#define BM_DilloRunTimeMsgData_timeStampOpt_timeStamp_leastSignificant_BYTES_SIZE 2

#define BM_DilloRunTimeMsgData_timeStampOpt_timeStamp_mostSignificant_GET_POS( base_ptr, out_ptr, out_bitoff )\
{\
	/*lint --e{*} */\
	UINT bmlocal353_acc_bytes;\
	UINT bmlocal354_acc_bits;\
	PVOID bmlocal355_parent_out_ptr;\
	BM_DilloRunTimeMsgData_timeStampOpt_timeStamp_GET_POS( base_ptr, bmlocal355_parent_out_ptr, out_bitoff );\
	out_ptr = bmlocal355_parent_out_ptr;\
	bmlocal353_acc_bytes = 2;\
	bmlocal354_acc_bits = 0;\
	BMI_ADD_ASSIGN_PTR( out_ptr, bmlocal353_acc_bytes );\
	out_bitoff += bmlocal354_acc_bits;\
}

#define BM_DilloRunTimeMsgData_timeStampOpt_timeStamp_mostSignificant_GET_POS_ALIGNED( base_ptr, out_ptr )\
{\
	/*lint --e{*} */\
	UINT bmlocal356_tmp_bitoff;\
	BM_DilloRunTimeMsgData_timeStampOpt_timeStamp_mostSignificant_GET_POS( base_ptr, out_ptr, bmlocal356_tmp_bitoff );\
	BMI_NORMALIZE_BITOFF(out_ptr, bmlocal356_tmp_bitoff);\
}

// Alignment of DilloRunTimeMsgData_timeStampOpt_timeStamp_mostSignificant: accumulated=(Variable), parent.base=(Variable)
#define BM_DilloRunTimeMsgData_timeStampOpt_timeStamp_mostSignificant_GET_SIZE( base_ptr, out_bytes, out_bits )\
{\
	/*lint --e{*} */\
	out_bytes = 2;\
	out_bits = 0;\
	BMI_UNUSED_VAR( base_ptr );\
}

#define BM_DilloRunTimeMsgData_timeStampOpt_timeStamp_mostSignificant_GET( base_ptr, out_val )\
{\
	/*lint --e{*} */\
	PVOID bmlocal357_my_ptr;\
	UINT bmlocal358_my_bitoff;\
	BM_DilloRunTimeMsgData_timeStampOpt_timeStamp_mostSignificant_GET_POS( base_ptr, bmlocal357_my_ptr, bmlocal358_my_bitoff );\
	BMI_GENERIC_32BIT_LITTLE_GET( bmlocal357_my_ptr, bmlocal358_my_bitoff, 16, UINT16, out_val, 0xFFFFFFFF );\
}

BMI_INLINE UINT16 BM_INLINE_DilloRunTimeMsgData_timeStampOpt_timeStamp_mostSignificant_GET(PVOID base_ptr)
{
	/*lint --e{*} */
	UINT16 bmlocal359_tmp_var;
	BM_DilloRunTimeMsgData_timeStampOpt_timeStamp_mostSignificant_GET( base_ptr, bmlocal359_tmp_var );
	return bmlocal359_tmp_var;
}

#define BM_DilloRunTimeMsgData_timeStampOpt_timeStamp_mostSignificant_SET( base_ptr, in_val )\
{\
	/*lint --e{*} */\
	PVOID bmlocal360_my_ptr;\
	UINT bmlocal361_my_bitoff;\
	BM_DilloRunTimeMsgData_timeStampOpt_timeStamp_mostSignificant_GET_POS( base_ptr, bmlocal360_my_ptr, bmlocal361_my_bitoff );\
	BMI_GENERIC_32BIT_LITTLE_SET( bmlocal360_my_ptr, bmlocal361_my_bitoff, 16, in_val, 0xFFFFFFFF );\
}

// DilloRunTimeMsgData_timeStampOpt_timeStamp_mostSignificant: IS_DEFAULT accessor is not defined because no default value was specified.
// DilloRunTimeMsgData_timeStampOpt_timeStamp_mostSignificant: SET_DEFAULT accessor is not defined because no default value was specified.
// DilloRunTimeMsgData_timeStampOpt_timeStamp_mostSignificant: IS_RESET accessor is not defined because no reset value was specified.
// DilloRunTimeMsgData_timeStampOpt_timeStamp_mostSignificant: SET_RESET accessor is not defined because no reset value was specified.
// DilloRunTimeMsgData_timeStampOpt_timeStamp_mostSignificant: CLEAR accessor is not defined because of incompatible access rights. Specified: RW Required: W1C, WO1C.
// DilloRunTimeMsgData_timeStampOpt_timeStamp_mostSignificant: SET(W1S) accessor is not defined because of incompatible access rights. Specified: RW Required: W1S, WO1S.
#define BM_DilloRunTimeMsgData_timeStampOpt_timeStamp_mostSignificant_DUMP_DEPTH( base_ptr, depth )\
{\
	/*lint --e{*} */\
	UINT16 bmlocal362_out_val;\
	BM_DilloRunTimeMsgData_timeStampOpt_timeStamp_mostSignificant_GET( base_ptr, bmlocal362_out_val );\
	/*lint -e(571) */\
	BMI_FORMAT_DUMP(depth, "mostSignificant", 16, (UINT)(bmlocal362_out_val), "%d", 1);\
}

#define BM_DilloRunTimeMsgData_timeStampOpt_timeStamp_mostSignificant_DUMP( base_ptr )\
{\
	/*lint --e{*} */\
	BM_DilloRunTimeMsgData_timeStampOpt_timeStamp_mostSignificant_DUMP_DEPTH( base_ptr, 0 );\
}

#define BM_DilloRunTimeMsgData_timeStampOpt_timeStamp_mostSignificant_INCREMENT( base_ptr )\
{\
	/*lint --e{*} */\
	UINT16 bmlocal363_val;\
	BM_DilloRunTimeMsgData_timeStampOpt_timeStamp_mostSignificant_GET( base_ptr, bmlocal363_val );\
	(bmlocal363_val)++;\
	BM_DilloRunTimeMsgData_timeStampOpt_timeStamp_mostSignificant_SET( base_ptr, bmlocal363_val );\
}

// DilloRunTimeMsgData_timeStampOpt_timeStamp_mostSignificant: Validation accessors are not defined because validation condition was not specified.
#define BM_DilloRunTimeMsgData_timeStampOpt_timeStamp_mostSignificant_GET_BYTES_SIZE( base_ptr, out_bytes )\
{\
	/*lint --e{*} */\
	UINT bmlocal364_tmp_bits;\
	BM_DilloRunTimeMsgData_timeStampOpt_timeStamp_mostSignificant_GET_SIZE( base_ptr, out_bytes, bmlocal364_tmp_bits );\
	BMI_ROUND_UP_1BYTES( out_bytes, bmlocal364_tmp_bits );\
}

#define BM_DilloRunTimeMsgData_timeStampOpt_timeStamp_mostSignificant_BYTES_SIZE 2

#define BM_DilloRunTimeMsgData_timeStampOpt_timeStamp_GET_NON_CONDITIONAL_SIZE( base_ptr, out_bytes, out_bits )\
{\
	/*lint --e{*} */\
	out_bytes = 4;\
	out_bits = 0;\
	BMI_UNUSED_VAR( base_ptr );\
}

#define BM_DilloRunTimeMsgData_timeStampOpt_timeStamp_GET_BYTES_NON_CONDITIONAL_SIZE( base_ptr, out_bytes )\
{\
	/*lint --e{*} */\
	UINT bmlocal367_tmp_bits;\
	BM_DilloRunTimeMsgData_timeStampOpt_timeStamp_GET_NON_CONDITIONAL_SIZE( base_ptr, out_bytes, bmlocal367_tmp_bits );\
	BMI_ROUND_UP_1BYTES( out_bytes, bmlocal367_tmp_bits );\
}

#define BM_DilloRunTimeMsgData_timeStampOpt_timeStamp_BYTES_SIZE 4

#define BM_DilloRunTimeMsgData_timeStampOpt_timeStamp_DUMP_DEPTH( base_ptr, depth )\
{\
	/*lint --e{*} */\
	BMI_FORMAT_NONVALUE_DUMP(depth, "timeStamp", 1);\
	BM_DilloRunTimeMsgData_timeStampOpt_timeStamp_leastSignificant_DUMP_DEPTH( base_ptr, (depth + 1) );\
	BM_DilloRunTimeMsgData_timeStampOpt_timeStamp_mostSignificant_DUMP_DEPTH( base_ptr, (depth + 1) );\
	BMI_UNUSED_VAR( base_ptr );\
}

#define BM_DilloRunTimeMsgData_timeStampOpt_timeStamp_DUMP( base_ptr )\
{\
	/*lint --e{*} */\
	BM_DilloRunTimeMsgData_timeStampOpt_timeStamp_DUMP_DEPTH( base_ptr, 0 );\
}

#define BM_DilloRunTimeMsgData_timeStampOpt_timeStamp_GET_SIZE( base_ptr, out_bytes, out_bits )\
{\
	/*lint --e{*} */\
	{\
		UINT16 bmlocal368_var0;\
		BM_DilloRunTimeMsgData_status_timeStampPresent_GET( base_ptr, bmlocal368_var0 );\
		if( bmlocal368_var0 != 0 )\
		{\
			out_bytes = 4;\
			out_bits = 0;\
		}\
		else\
		{\
			out_bytes = 0;\
			out_bits = 0;\
		}\
	}\
	BMI_UNUSED_VAR( base_ptr );\
}

#define BM_DilloRunTimeMsgData_timeStampOpt_timeStamp_EVALUATE( base_ptr, out_flag )\
{\
	/*lint --e{*} */\
	{\
		UINT16 bmlocal369_var0;\
		BM_DilloRunTimeMsgData_status_timeStampPresent_GET( base_ptr, bmlocal369_var0 );\
		out_flag = (bmlocal369_var0 != 0);\
	}\
	BMI_UNUSED_VAR( base_ptr );\
}


#define BM_DilloRunTimeMsgData_timeStampOpt_GET_SIZE( base_ptr, out_bytes, out_bits )\
{\
	/*lint --e{*} */\
	UINT bmlocal370_tmp_bytes = 0;\
	UINT bmlocal371_tmp_bits = 0;\
	out_bytes = 0;\
	out_bits = 0;\
	BM_DilloRunTimeMsgData_timeStampOpt_timeStamp_GET_SIZE( base_ptr, bmlocal370_tmp_bytes, bmlocal371_tmp_bits );\
	out_bytes += bmlocal370_tmp_bytes;\
	out_bits += bmlocal371_tmp_bits;\
}

#define BM_DilloRunTimeMsgData_timeStampOpt_GET_BYTES_SIZE( base_ptr, out_bytes )\
{\
	/*lint --e{*} */\
	UINT bmlocal372_tmp_bits;\
	BM_DilloRunTimeMsgData_timeStampOpt_GET_SIZE( base_ptr, out_bytes, bmlocal372_tmp_bits );\
	BMI_ROUND_UP_1BYTES( out_bytes, bmlocal372_tmp_bits );\
}

#define BM_DilloRunTimeMsgData_timeStampOpt_DUMP_DEPTH( base_ptr, depth )\
{\
	/*lint --e{*} */\
	BOOL bmlocal373_out_flag;\
	BMI_FORMAT_NONVALUE_DUMP(depth, "timeStampOpt", 1);\
	do\
	{\
		BM_DilloRunTimeMsgData_timeStampOpt_timeStamp_EVALUATE( base_ptr, bmlocal373_out_flag );\
		if( bmlocal373_out_flag == 1 )\
		{\
			BM_DilloRunTimeMsgData_timeStampOpt_timeStamp_DUMP_DEPTH( base_ptr, (depth + 1) );\
		}\
	}\
	while( /*lint -e(717) */ /*do ... while(0)*/ 0 );\
}

#define BM_DilloRunTimeMsgData_timeStampOpt_DUMP( base_ptr )\
{\
	/*lint --e{*} */\
	BM_DilloRunTimeMsgData_timeStampOpt_DUMP_DEPTH( base_ptr, 0 );\
}


#define BM_DilloRunTimeMsgData_GET_SIZE( base_ptr, out_bytes, out_bits )\
{\
	/*lint --e{*} */\
	UINT bmlocal374_tmp_bytes = 0;\
	UINT bmlocal375_tmp_bits = 0;\
	out_bytes = 2;\
	out_bits = 0;\
	BM_DilloRunTimeMsgData_params_GET_SIZE( base_ptr, bmlocal374_tmp_bytes, bmlocal375_tmp_bits );\
	out_bytes += bmlocal374_tmp_bytes;\
	out_bits += bmlocal375_tmp_bits;\
	BM_DilloRunTimeMsgData_timeStampOpt_GET_SIZE( base_ptr, bmlocal374_tmp_bytes, bmlocal375_tmp_bits );\
	out_bytes += bmlocal374_tmp_bytes;\
	out_bits += bmlocal375_tmp_bits;\
}

#define BM_DilloRunTimeMsgData_GET_BYTES_SIZE( base_ptr, out_bytes )\
{\
	/*lint --e{*} */\
	UINT bmlocal376_tmp_bits;\
	BM_DilloRunTimeMsgData_GET_SIZE( base_ptr, out_bytes, bmlocal376_tmp_bits );\
	BMI_ROUND_UP_1BYTES( out_bytes, bmlocal376_tmp_bits );\
}

#define BM_DilloRunTimeMsgData_DUMP_DEPTH( base_ptr, depth )\
{\
	/*lint --e{*} */\
	BMI_FORMAT_NONVALUE_DUMP(depth, "DilloRunTimeMsgData", 1);\
	BM_DilloRunTimeMsgData_status_DUMP_DEPTH( base_ptr, (depth + 1) );\
	BM_DilloRunTimeMsgData_params_DUMP_DEPTH( base_ptr, (depth + 1) );\
	BM_DilloRunTimeMsgData_timeStampOpt_DUMP_DEPTH( base_ptr, (depth + 1) );\
	BMI_UNUSED_VAR( base_ptr );\
}

#define BM_DilloRunTimeMsgData_DUMP( base_ptr )\
{\
	/*lint --e{*} */\
	BM_DilloRunTimeMsgData_DUMP_DEPTH( base_ptr, 0 );\
}


/*lint --flb */

#endif /* _BITMAN_TRACEMESSAGEDILLO_H_ */

