/*****************************************************************************
 * Automatically generated by Bitman2Base V4.2.5.0 (5.0) Bitman2 (exe) V4.2.5.0 (5.0) - DO NOT EDIT!
 * Generated at 11/19/2009 12:56:06 AM
 *
 * Project : Ofer
 * Module  : Trace
 * Author  : Igor Brainman
 * Date    : 23/07/2006
 * Purpose : Traces
 *****************************************************************************/

#if !defined(_BITMAN_TRACEMESSAGEDILLO_H_)
#define _BITMAN_TRACEMESSAGEDILLO_H_


/*lint ++flb */
// Include the Bitman common header file
#include "BitmanCommon.h"

// Include headers generated from XMLs (the source is both XMLs and the command-line)
#include "BasicBitmanTypes.h"

// Include user C header files

// Include user C header files (supplied in the command-line)


// Bitman version Accessor...
#ifndef BM_BITMAN_VERSION
#define BM_BITMAN_VERSION 	"Bitman2Base V4.2.5.0 (5.0) Bitman2 (exe) V4.2.5.0 (5.0)"
#endif 

// Definitions

#define BM_DilloMsgStatus_msgID_MASK (0x0FFF)

#define BM_DilloMsgStatus_msgID_OFFSET (0)

#define BM_DilloMsgStatus_msgID_SHIFTED_MASK (0x0FFF)

#define BM_DilloMsgStatus_numOfParams_MASK (0x0003)

#define BM_DilloMsgStatus_numOfParams_OFFSET (12)

#define BM_DilloMsgStatus_numOfParams_SHIFTED_MASK (0x3000)

#define BM_DilloMsgStatus_bufferOverrun_MASK (0x0001)

#define BM_DilloMsgStatus_bufferOverrun_OFFSET (14)

#define BM_DilloMsgStatus_bufferOverrun_SHIFTED_MASK (0x4000)

#define BM_DilloMsgStatus_timeStampPresent_MASK (0x0001)

#define BM_DilloMsgStatus_timeStampPresent_OFFSET (15)

#define BM_DilloMsgStatus_timeStampPresent_SHIFTED_MASK (0x8000)

// Maximal length of user string
#define USER_STR_MAX_LEN (1024)

// Maximal length of file name path
#define FILE_NAME_MAX_LEN (1024)

typedef UINT8 DilloCompileTimeMsgData[2056];

/*lint -save -e806 */ /* Small bit field is signed rather than unsigned*/
#ifdef BMI_ENDIANNESS_LITTLE
#if (!defined __arm && !defined __arc)
#pragma pack( push, 1 )
#endif
#ifdef __arm
typedef __packed struct
#elif defined __arc
typedef _Packed struct
#else
typedef struct
#endif
{
	UINT8 _severity : 8; //Trace severity, may be 0..7
	UINT8 _moduleID : 8; //Module ID, should be on of defined in TraceModules.bm
	BMS_LittleEndianness_Char _userString[1024]; //format string (zero terminated!) - like printf
	BMS_LittleEndianness_Char _fileName[1024]; //full file name path (zero terminated!)
	UINT16 _reserved : 16; //Reserved - to align to word boundaries
	UINT32 _lineNumber; //file line number
} BMS_DilloCompileTimeMsgData;

#if (!defined __arm && !defined __arc)
#pragma pack( pop )
#endif

#else /* BMI_ENDIANNESS_BIG */
#if (!defined __arm && !defined __arc)
#pragma pack( push, 1 )
#endif
#ifdef __arm
typedef __packed struct
#elif defined __arc
typedef _Packed struct
#else
typedef struct
#endif
{
	UINT32 _lineNumber; //file line number
	UINT16 _reserved : 16; //Reserved - to align to word boundaries
	BMS_LittleEndianness_Char _fileName[1024]; //full file name path (zero terminated!)
	BMS_LittleEndianness_Char _userString[1024]; //format string (zero terminated!) - like printf
	UINT8 _moduleID : 8; //Module ID, should be on of defined in TraceModules.bm
	UINT8 _severity : 8; //Trace severity, may be 0..7
} BMS_DilloCompileTimeMsgData;

#if (!defined __arm && !defined __arc)
#pragma pack( pop )
#endif

#endif	/*#ifdef BMI_ENDIANNESS_LITTLE*/
/*lint -restore */

// COMPOSITE: Full name: 'DilloCompileTimeMsgData' Type: 'DilloCompileTimeMsgData', Top-level, Non-instance, No bitoff root
#define BM_DilloCompileTimeMsgData_severity_GET_POS( base_ptr, out_ptr, out_bitoff )\
{\
	/*lint --e{*} */\
	out_ptr = base_ptr;\
	out_bitoff = 0;\
}

#define BM_DilloCompileTimeMsgData_severity_GET_POS_ALIGNED( base_ptr, out_ptr )\
{\
	/*lint --e{*} */\
	UINT bmlocal79_tmp_bitoff;\
	BM_DilloCompileTimeMsgData_severity_GET_POS( base_ptr, out_ptr, bmlocal79_tmp_bitoff );\
	BMI_NORMALIZE_BITOFF(out_ptr, bmlocal79_tmp_bitoff);\
}

#define BM_DilloCompileTimeMsgData_severity_POS_ALIGNED 0

// Alignment of DilloCompileTimeMsgData_severity: accumulated=(0,0, ABA=4), parent.base=(0,0, ABA=4)
#define BM_DilloCompileTimeMsgData_severity_GET_SIZE( base_ptr, out_bytes, out_bits )\
{\
	/*lint --e{*} */\
	out_bytes = 1;\
	out_bits = 0;\
	BMI_UNUSED_VAR( base_ptr );\
}

#define BM_DilloCompileTimeMsgData_severity_GET( base_ptr, out_val )\
{\
	/*lint --e{*} */\
	PVOID bmlocal80_my_ptr;\
	UINT bmlocal81_my_bitoff;\
	BM_DilloCompileTimeMsgData_severity_GET_POS( base_ptr, bmlocal80_my_ptr, bmlocal81_my_bitoff );\
	if( BMI_MACHINE_ARM_LITTLE == BMI_MACHINE_VALUE )\
	{\
		(out_val) = (UINT8)BMI_32BIT_EXTRACT( (BMI_GET_8BIT_PTR_CONTENTS( BMI_PTR_TO_NUMERIC_CAST(bmlocal80_my_ptr)) ), 0, 8, 0);\
	}\
	else if( BMI_MACHINE_INTEL_LITTLE == BMI_MACHINE_VALUE )\
	{\
		(out_val) = (UINT8)BMI_32BIT_EXTRACT( (BMI_GET_8BIT_PTR_CONTENTS( BMI_PTR_TO_NUMERIC_CAST(bmlocal80_my_ptr)) ), 0, 8, 0);\
	}\
	else\
	{\
		BMI_GENERIC_32BIT_LITTLE_GET( bmlocal80_my_ptr, bmlocal81_my_bitoff, 8, UINT8, out_val, 0x00000000 );\
	}\
}

BMI_INLINE UINT8 BM_INLINE_DilloCompileTimeMsgData_severity_GET(PVOID base_ptr)
{
	/*lint --e{*} */
	UINT8 bmlocal82_tmp_var;
	BM_DilloCompileTimeMsgData_severity_GET( base_ptr, bmlocal82_tmp_var );
	return bmlocal82_tmp_var;
}

#define BM_DilloCompileTimeMsgData_severity_SET( base_ptr, in_val )\
{\
	/*lint --e{*} */\
	PVOID bmlocal83_my_ptr;\
	UINT bmlocal84_my_bitoff;\
	BM_DilloCompileTimeMsgData_severity_GET_POS( base_ptr, bmlocal83_my_ptr, bmlocal84_my_bitoff );\
	if( BMI_MACHINE_ARM_LITTLE == BMI_MACHINE_VALUE )\
	{\
		BMI_32BIT_CLEAR_ASSIGN_TYPE( BMI_GET_8BIT_PTR_CONTENTS( BMI_PTR_TO_NUMERIC_CAST(bmlocal83_my_ptr) ), (in_val), 0, 0, 8, UINT8 );\
	}\
	else if( BMI_MACHINE_INTEL_LITTLE == BMI_MACHINE_VALUE )\
	{\
		BMI_32BIT_CLEAR_ASSIGN_TYPE( BMI_GET_8BIT_PTR_CONTENTS( BMI_PTR_TO_NUMERIC_CAST(bmlocal83_my_ptr) ), (in_val), 0, 0, 8, UINT8 );\
	}\
	else\
	{\
		BMI_GENERIC_32BIT_LITTLE_SET( bmlocal83_my_ptr, bmlocal84_my_bitoff, 8, in_val, 0x00000000 );\
	}\
}

// DilloCompileTimeMsgData_severity: IS_DEFAULT accessor is not defined because no default value was specified.
// DilloCompileTimeMsgData_severity: SET_DEFAULT accessor is not defined because no default value was specified.
// DilloCompileTimeMsgData_severity: IS_RESET accessor is not defined because no reset value was specified.
// DilloCompileTimeMsgData_severity: SET_RESET accessor is not defined because no reset value was specified.
// DilloCompileTimeMsgData_severity: CLEAR accessor is not defined because of incompatible access rights. Specified: RW Required: W1C, WO1C.
// DilloCompileTimeMsgData_severity: SET(W1S) accessor is not defined because of incompatible access rights. Specified: RW Required: W1S, WO1S.
#define BM_DilloCompileTimeMsgData_severity_DUMP_DEPTH( base_ptr, depth )\
{\
	/*lint --e{*} */\
	UINT8 bmlocal85_out_val;\
	BM_DilloCompileTimeMsgData_severity_GET( base_ptr, bmlocal85_out_val );\
	/*lint -e(571) */\
	BMI_FORMAT_DUMP(depth, "severity", 8, (UINT)(bmlocal85_out_val), "%d", 1);\
}

#define BM_DilloCompileTimeMsgData_severity_DUMP( base_ptr )\
{\
	/*lint --e{*} */\
	BM_DilloCompileTimeMsgData_severity_DUMP_DEPTH( base_ptr, 0 );\
}

#define BM_DilloCompileTimeMsgData_severity_INCREMENT( base_ptr )\
{\
	/*lint --e{*} */\
	PVOID bmlocal86_my_ptr;\
	UINT bmlocal87_my_bitoff;\
	BM_DilloCompileTimeMsgData_severity_GET_POS( base_ptr, bmlocal86_my_ptr, bmlocal87_my_bitoff );\
	(*((UINT8*)bmlocal86_my_ptr))++;\
	BMI_UNUSED_VAR( bmlocal87_my_bitoff );\
}

// DilloCompileTimeMsgData_severity: Validation accessors are not defined because validation condition was not specified.
#define BM_DilloCompileTimeMsgData_severity_GET_BYTES_SIZE( base_ptr, out_bytes )\
{\
	/*lint --e{*} */\
	UINT bmlocal88_tmp_bits;\
	BM_DilloCompileTimeMsgData_severity_GET_SIZE( base_ptr, out_bytes, bmlocal88_tmp_bits );\
	BMI_ROUND_UP_1BYTES( out_bytes, bmlocal88_tmp_bits );\
}

#define BM_DilloCompileTimeMsgData_severity_BYTES_SIZE 1

#define BM_DilloCompileTimeMsgData_moduleID_GET_POS( base_ptr, out_ptr, out_bitoff )\
{\
	/*lint --e{*} */\
	UINT bmlocal91_acc_bytes;\
	UINT bmlocal92_acc_bits;\
	out_ptr = base_ptr;\
	out_bitoff = 0;\
	bmlocal91_acc_bytes = 1;\
	bmlocal92_acc_bits = 0;\
	BMI_ADD_ASSIGN_PTR( out_ptr, bmlocal91_acc_bytes );\
	out_bitoff += bmlocal92_acc_bits;\
}

#define BM_DilloCompileTimeMsgData_moduleID_GET_POS_ALIGNED( base_ptr, out_ptr )\
{\
	/*lint --e{*} */\
	UINT bmlocal93_tmp_bitoff;\
	BM_DilloCompileTimeMsgData_moduleID_GET_POS( base_ptr, out_ptr, bmlocal93_tmp_bitoff );\
	BMI_NORMALIZE_BITOFF(out_ptr, bmlocal93_tmp_bitoff);\
}

#define BM_DilloCompileTimeMsgData_moduleID_POS_ALIGNED 1

// Alignment of DilloCompileTimeMsgData_moduleID: accumulated=(1,0, ABA=4), parent.base=(0,0, ABA=4)
#define BM_DilloCompileTimeMsgData_moduleID_GET_SIZE( base_ptr, out_bytes, out_bits )\
{\
	/*lint --e{*} */\
	out_bytes = 1;\
	out_bits = 0;\
	BMI_UNUSED_VAR( base_ptr );\
}

#define BM_DilloCompileTimeMsgData_moduleID_GET( base_ptr, out_val )\
{\
	/*lint --e{*} */\
	PVOID bmlocal94_my_ptr;\
	UINT bmlocal95_my_bitoff;\
	BM_DilloCompileTimeMsgData_moduleID_GET_POS( base_ptr, bmlocal94_my_ptr, bmlocal95_my_bitoff );\
	if( BMI_MACHINE_ARM_LITTLE == BMI_MACHINE_VALUE )\
	{\
		(out_val) = (UINT8)BMI_32BIT_EXTRACT( (BMI_GET_8BIT_PTR_CONTENTS( BMI_PTR_TO_NUMERIC_CAST(bmlocal94_my_ptr)) ), 0, 8, 0);\
	}\
	else if( BMI_MACHINE_INTEL_LITTLE == BMI_MACHINE_VALUE )\
	{\
		(out_val) = (UINT8)BMI_32BIT_EXTRACT( (BMI_GET_8BIT_PTR_CONTENTS( BMI_PTR_TO_NUMERIC_CAST(bmlocal94_my_ptr)) ), 0, 8, 0);\
	}\
	else\
	{\
		BMI_GENERIC_32BIT_LITTLE_GET( bmlocal94_my_ptr, bmlocal95_my_bitoff, 8, UINT8, out_val, 0x00000001 );\
	}\
}

BMI_INLINE UINT8 BM_INLINE_DilloCompileTimeMsgData_moduleID_GET(PVOID base_ptr)
{
	/*lint --e{*} */
	UINT8 bmlocal96_tmp_var;
	BM_DilloCompileTimeMsgData_moduleID_GET( base_ptr, bmlocal96_tmp_var );
	return bmlocal96_tmp_var;
}

#define BM_DilloCompileTimeMsgData_moduleID_SET( base_ptr, in_val )\
{\
	/*lint --e{*} */\
	PVOID bmlocal97_my_ptr;\
	UINT bmlocal98_my_bitoff;\
	BM_DilloCompileTimeMsgData_moduleID_GET_POS( base_ptr, bmlocal97_my_ptr, bmlocal98_my_bitoff );\
	if( BMI_MACHINE_ARM_LITTLE == BMI_MACHINE_VALUE )\
	{\
		BMI_32BIT_CLEAR_ASSIGN_TYPE( BMI_GET_8BIT_PTR_CONTENTS( BMI_PTR_TO_NUMERIC_CAST(bmlocal97_my_ptr) ), (in_val), 0, 0, 8, UINT8 );\
	}\
	else if( BMI_MACHINE_INTEL_LITTLE == BMI_MACHINE_VALUE )\
	{\
		BMI_32BIT_CLEAR_ASSIGN_TYPE( BMI_GET_8BIT_PTR_CONTENTS( BMI_PTR_TO_NUMERIC_CAST(bmlocal97_my_ptr) ), (in_val), 0, 0, 8, UINT8 );\
	}\
	else\
	{\
		BMI_GENERIC_32BIT_LITTLE_SET( bmlocal97_my_ptr, bmlocal98_my_bitoff, 8, in_val, 0x00000001 );\
	}\
}

// DilloCompileTimeMsgData_moduleID: IS_DEFAULT accessor is not defined because no default value was specified.
// DilloCompileTimeMsgData_moduleID: SET_DEFAULT accessor is not defined because no default value was specified.
// DilloCompileTimeMsgData_moduleID: IS_RESET accessor is not defined because no reset value was specified.
// DilloCompileTimeMsgData_moduleID: SET_RESET accessor is not defined because no reset value was specified.
// DilloCompileTimeMsgData_moduleID: CLEAR accessor is not defined because of incompatible access rights. Specified: RW Required: W1C, WO1C.
// DilloCompileTimeMsgData_moduleID: SET(W1S) accessor is not defined because of incompatible access rights. Specified: RW Required: W1S, WO1S.
#define BM_DilloCompileTimeMsgData_moduleID_DUMP_DEPTH( base_ptr, depth )\
{\
	/*lint --e{*} */\
	UINT8 bmlocal99_out_val;\
	BM_DilloCompileTimeMsgData_moduleID_GET( base_ptr, bmlocal99_out_val );\
	/*lint -e(571) */\
	BMI_FORMAT_DUMP(depth, "moduleID", 8, (UINT)(bmlocal99_out_val), "%d", 1);\
}

#define BM_DilloCompileTimeMsgData_moduleID_DUMP( base_ptr )\
{\
	/*lint --e{*} */\
	BM_DilloCompileTimeMsgData_moduleID_DUMP_DEPTH( base_ptr, 0 );\
}

#define BM_DilloCompileTimeMsgData_moduleID_INCREMENT( base_ptr )\
{\
	/*lint --e{*} */\
	PVOID bmlocal100_my_ptr;\
	UINT bmlocal101_my_bitoff;\
	BM_DilloCompileTimeMsgData_moduleID_GET_POS( base_ptr, bmlocal100_my_ptr, bmlocal101_my_bitoff );\
	(*((UINT8*)bmlocal100_my_ptr))++;\
	BMI_UNUSED_VAR( bmlocal101_my_bitoff );\
}

// DilloCompileTimeMsgData_moduleID: Validation accessors are not defined because validation condition was not specified.
#define BM_DilloCompileTimeMsgData_moduleID_GET_BYTES_SIZE( base_ptr, out_bytes )\
{\
	/*lint --e{*} */\
	UINT bmlocal102_tmp_bits;\
	BM_DilloCompileTimeMsgData_moduleID_GET_SIZE( base_ptr, out_bytes, bmlocal102_tmp_bits );\
	BMI_ROUND_UP_1BYTES( out_bytes, bmlocal102_tmp_bits );\
}

#define BM_DilloCompileTimeMsgData_moduleID_BYTES_SIZE 1

#define BM_DilloCompileTimeMsgData_userString_GET_POS( base_ptr, out_ptr, out_bitoff )\
{\
	/*lint --e{*} */\
	UINT bmlocal105_acc_bytes;\
	UINT bmlocal106_acc_bits;\
	out_ptr = base_ptr;\
	out_bitoff = 0;\
	bmlocal105_acc_bytes = 2;\
	bmlocal106_acc_bits = 0;\
	BMI_ADD_ASSIGN_PTR( out_ptr, bmlocal105_acc_bytes );\
	out_bitoff += bmlocal106_acc_bits;\
}

#define BM_DilloCompileTimeMsgData_userString_GET_POS_ALIGNED( base_ptr, out_ptr )\
{\
	/*lint --e{*} */\
	UINT bmlocal107_tmp_bitoff;\
	BM_DilloCompileTimeMsgData_userString_GET_POS( base_ptr, out_ptr, bmlocal107_tmp_bitoff );\
	BMI_NORMALIZE_BITOFF(out_ptr, bmlocal107_tmp_bitoff);\
}

#define BM_DilloCompileTimeMsgData_userString_POS_ALIGNED 2

// ARRAY: DilloCompileTimeMsgData_userString
#define BM_DilloCompileTimeMsgData_userString_GET_SIZE( base_ptr, out_bytes, out_bits )\
{\
	/*lint --e{*} */\
	out_bytes = 1024;\
	out_bits = 0;\
	BMI_UNUSED_VAR( base_ptr );\
}

BMI_INLINE UINT BM_INLINE_DilloCompileTimeMsgData_userString_GET_SIZE()
{
	/*lint --e{*} */
	return 1024;
}

#define BM_DilloCompileTimeMsgData_userString_GET_DIMENSION_ELEMENT_COUNT( base_ptr, index, out_element_count )\
{\
	/*lint --e{*} */\
	switch( index )\
	{\
		case (0):\
		out_element_count = 1024;\
		break;\
		default:\
		out_element_count = 0;\
		break;\
	}\
	BMI_UNUSED_VAR( base_ptr );\
}

#define BM_DilloCompileTimeMsgData_userString_GET_ELEMENT_POS( base_ptr, idx0, out_ptr, out_bitoff )\
{\
	/*lint --e{*} */\
	PVOID bmlocal108_out_ptr;\
	UINT bmlocal109_out_bitoff;\
	UINT bmlocal110_element_size_bytes;\
	UINT bmlocal111_element_size_bits;\
	BM_DilloCompileTimeMsgData_userString_GET_POS( base_ptr, bmlocal108_out_ptr, bmlocal109_out_bitoff );\
	bmlocal110_element_size_bytes = 1;\
	bmlocal111_element_size_bits = 0;\
	out_ptr = BMI_NUMBER_TO_PTR_CAST( BMI_PTR_TO_NUMERIC_CAST(bmlocal108_out_ptr) + (idx0) * bmlocal110_element_size_bytes );\
	out_bitoff = bmlocal109_out_bitoff;\
	BMI_UNUSED_VAR( bmlocal111_element_size_bits );\
}

// COMPOSITE: Full name: 'DilloCompileTimeMsgData_userString' Type: 'Char', Inner, Non-instance, No bitoff root
#define BM_DilloCompileTimeMsgData_userString_value_GET_POS( base_ptr, idx0, out_ptr, out_bitoff )\
{\
	/*lint --e{*} */\
	PVOID bmlocal112_parent_out_ptr;\
	BM_DilloCompileTimeMsgData_userString_GET_ELEMENT_POS( base_ptr, idx0, bmlocal112_parent_out_ptr, out_bitoff );\
	out_ptr = bmlocal112_parent_out_ptr;\
}

// Alignment of DilloCompileTimeMsgData_userString_value: accumulated=(0,0, ABA=1), parent.base=(0,0, ABA=1)
#define BM_DilloCompileTimeMsgData_userString_value_GET_SIZE( base_ptr, idx0, out_bytes, out_bits )\
{\
	/*lint --e{*} */\
	out_bytes = 1;\
	out_bits = 0;\
	BMI_UNUSED_VAR( base_ptr );\
	BMI_UNUSED_VAR( idx0 );\
}

#define BM_DilloCompileTimeMsgData_userString_value_GET( base_ptr, idx0, out_val )\
{\
	/*lint --e{*} */\
	PVOID bmlocal113_my_ptr;\
	UINT bmlocal114_my_bitoff;\
	BM_DilloCompileTimeMsgData_userString_value_GET_POS( base_ptr, idx0, bmlocal113_my_ptr, bmlocal114_my_bitoff );\
	if( BMI_MACHINE_ARM_LITTLE == BMI_MACHINE_VALUE )\
	{\
		(out_val) = (char)BMI_32BIT_EXTRACT( (BMI_GET_8BIT_PTR_CONTENTS( BMI_PTR_TO_NUMERIC_CAST(bmlocal113_my_ptr)) ), 0, 8, 0);\
	}\
	else if( BMI_MACHINE_INTEL_LITTLE == BMI_MACHINE_VALUE )\
	{\
		(out_val) = (char)BMI_32BIT_EXTRACT( (BMI_GET_8BIT_PTR_CONTENTS( BMI_PTR_TO_NUMERIC_CAST(bmlocal113_my_ptr)) ), 0, 8, 0);\
	}\
	else\
	{\
		BMI_GENERIC_32BIT_LITTLE_GET( bmlocal113_my_ptr, bmlocal114_my_bitoff, 8, char, out_val, 0xFFFFFFFF );\
	}\
}

BMI_INLINE char BM_INLINE_DilloCompileTimeMsgData_userString_value_GET(PVOID base_ptr, UINT idx0)
{
	/*lint --e{*} */
	char bmlocal115_tmp_var;
	BM_DilloCompileTimeMsgData_userString_value_GET( base_ptr, idx0, bmlocal115_tmp_var );
	return bmlocal115_tmp_var;
}

#define BM_DilloCompileTimeMsgData_userString_value_SET( base_ptr, idx0, in_val )\
{\
	/*lint --e{*} */\
	PVOID bmlocal116_my_ptr;\
	UINT bmlocal117_my_bitoff;\
	BM_DilloCompileTimeMsgData_userString_value_GET_POS( base_ptr, idx0, bmlocal116_my_ptr, bmlocal117_my_bitoff );\
	if( BMI_MACHINE_ARM_LITTLE == BMI_MACHINE_VALUE )\
	{\
		BMI_32BIT_CLEAR_ASSIGN_TYPE( BMI_GET_8BIT_PTR_CONTENTS( BMI_PTR_TO_NUMERIC_CAST(bmlocal116_my_ptr) ), (in_val), 0, 0, 8, UINT8 );\
	}\
	else if( BMI_MACHINE_INTEL_LITTLE == BMI_MACHINE_VALUE )\
	{\
		BMI_32BIT_CLEAR_ASSIGN_TYPE( BMI_GET_8BIT_PTR_CONTENTS( BMI_PTR_TO_NUMERIC_CAST(bmlocal116_my_ptr) ), (in_val), 0, 0, 8, UINT8 );\
	}\
	else\
	{\
		BMI_GENERIC_32BIT_LITTLE_SET( bmlocal116_my_ptr, bmlocal117_my_bitoff, 8, in_val, 0xFFFFFFFF );\
	}\
}

// DilloCompileTimeMsgData_userString_value: IS_DEFAULT accessor is not defined because no default value was specified.
// DilloCompileTimeMsgData_userString_value: SET_DEFAULT accessor is not defined because no default value was specified.
// DilloCompileTimeMsgData_userString_value: IS_RESET accessor is not defined because no reset value was specified.
// DilloCompileTimeMsgData_userString_value: SET_RESET accessor is not defined because no reset value was specified.
// DilloCompileTimeMsgData_userString_value: CLEAR accessor is not defined because of incompatible access rights. Specified: RW Required: W1C, WO1C.
// DilloCompileTimeMsgData_userString_value: SET(W1S) accessor is not defined because of incompatible access rights. Specified: RW Required: W1S, WO1S.
#define BM_DilloCompileTimeMsgData_userString_value_DUMP_DEPTH( base_ptr, idx0, depth )\
{\
	/*lint --e{*} */\
	char bmlocal118_out_val;\
	BM_DilloCompileTimeMsgData_userString_value_GET( base_ptr, idx0, bmlocal118_out_val );\
	/*lint -e(571) */\
	BMI_FORMAT_DUMP(depth, "value", 8, (UINT)(bmlocal118_out_val), "%d", 1);\
}

#define BM_DilloCompileTimeMsgData_userString_value_DUMP( base_ptr, idx0 )\
{\
	/*lint --e{*} */\
	BM_DilloCompileTimeMsgData_userString_value_DUMP_DEPTH( base_ptr, idx0, 0 );\
}

#define BM_DilloCompileTimeMsgData_userString_value_INCREMENT( base_ptr, idx0 )\
{\
	/*lint --e{*} */\
	PVOID bmlocal119_my_ptr;\
	UINT bmlocal120_my_bitoff;\
	BM_DilloCompileTimeMsgData_userString_value_GET_POS( base_ptr, idx0, bmlocal119_my_ptr, bmlocal120_my_bitoff );\
	(*((UINT8*)bmlocal119_my_ptr))++;\
	BMI_UNUSED_VAR( bmlocal120_my_bitoff );\
}

// DilloCompileTimeMsgData_userString_value: Validation accessors are not defined because validation condition was not specified.
#define BM_DilloCompileTimeMsgData_userString_value_GET_BYTES_SIZE( base_ptr, idx0, out_bytes )\
{\
	/*lint --e{*} */\
	UINT bmlocal121_tmp_bits;\
	BM_DilloCompileTimeMsgData_userString_value_GET_SIZE( base_ptr, idx0, out_bytes, bmlocal121_tmp_bits );\
	BMI_ROUND_UP_1BYTES( out_bytes, bmlocal121_tmp_bits );\
}

#define BM_DilloCompileTimeMsgData_userString_value_BYTES_SIZE 1

#define BM_DilloCompileTimeMsgData_userString_GET_CELL_SIZE( base_ptr, idx0, out_bytes, out_bits )\
{\
	/*lint --e{*} */\
	out_bytes = 1;\
	out_bits = 0;\
	BMI_UNUSED_VAR( base_ptr );\
	BMI_UNUSED_VAR( idx0 );\
}

#define BM_DilloCompileTimeMsgData_userString_GET_BYTES_CELL_SIZE( base_ptr, idx0, out_bytes )\
{\
	/*lint --e{*} */\
	UINT bmlocal124_tmp_bits;\
	BM_DilloCompileTimeMsgData_userString_GET_CELL_SIZE( base_ptr, idx0, out_bytes, bmlocal124_tmp_bits );\
	BMI_ROUND_UP_1BYTES( out_bytes, bmlocal124_tmp_bits );\
}

#define BM_DilloCompileTimeMsgData_userString_BYTES_CELL_SIZE 1

BMI_INLINE UINT BM_INLINE_DilloCompileTimeMsgData_userString_GET_CELL_SIZE()
{
	/*lint --e{*} */
	return 1;
}

#define BM_DilloCompileTimeMsgData_userString_DUMP_DEPTH_IDX( base_ptr, idx0, depth )\
{\
	/*lint --e{*} */\
	BM_DilloCompileTimeMsgData_userString_value_DUMP_DEPTH( base_ptr, idx0, (depth + 1) );\
	BMI_UNUSED_VAR( base_ptr );\
	BMI_UNUSED_VAR( idx0 );\
}

#define BM_DilloCompileTimeMsgData_userString_DUMP_IDX( base_ptr, idx0 )\
{\
	/*lint --e{*} */\
	BM_DilloCompileTimeMsgData_userString_DUMP_DEPTH_IDX( base_ptr, idx0, 0 );\
}

#define BM_DilloCompileTimeMsgData_userString_DUMP_DEPTH( base_ptr, depth )\
{\
	/*lint --e{*} */\
	UINT bmlocal125_dim_size0;\
	UINT bmlocal126_idx0;\
	bmlocal125_dim_size0 = 1024;\
	BMI_FORMAT_NONVALUE_DUMP(depth, "userString", 1);\
	for( bmlocal126_idx0=0; bmlocal126_idx0<bmlocal125_dim_size0; bmlocal126_idx0++ )\
	{\
		BMI_FORMAT_NONVALUE_DUMP((depth + 1), "(", 0);\
		/*lint -e(571) */\
		BMI_FORMAT_DUMP(0, "", 32, (UINT)(bmlocal126_idx0), "%d", 0);\
		BMI_FORMAT_NONVALUE_DUMP(0, ")", 1);\
		BM_DilloCompileTimeMsgData_userString_DUMP_DEPTH_IDX( base_ptr, bmlocal126_idx0, depth );\
	}\
	BMI_UNUSED_VAR( base_ptr );\
}

#define BM_DilloCompileTimeMsgData_userString_DUMP( base_ptr )\
{\
	/*lint --e{*} */\
	BM_DilloCompileTimeMsgData_userString_DUMP_DEPTH( base_ptr, 0 );\
}

#define BM_DilloCompileTimeMsgData_userString_GET_BYTES_SIZE( base_ptr, out_bytes )\
{\
	/*lint --e{*} */\
	UINT bmlocal127_tmp_bits;\
	BM_DilloCompileTimeMsgData_userString_GET_SIZE( base_ptr, out_bytes, bmlocal127_tmp_bits );\
	BMI_ROUND_UP_1BYTES( out_bytes, bmlocal127_tmp_bits );\
}

#define BM_DilloCompileTimeMsgData_userString_BYTES_SIZE 1024

#define BM_DilloCompileTimeMsgData_fileName_GET_POS( base_ptr, out_ptr, out_bitoff )\
{\
	/*lint --e{*} */\
	UINT bmlocal128_tmp_bytes = 0;\
	UINT bmlocal129_tmp_bits = 0;\
	UINT bmlocal130_acc_bytes;\
	UINT bmlocal131_acc_bits;\
	out_ptr = base_ptr;\
	out_bitoff = 0;\
	bmlocal130_acc_bytes = 2;\
	bmlocal131_acc_bits = 0;\
	BM_DilloCompileTimeMsgData_userString_GET_SIZE( base_ptr, bmlocal128_tmp_bytes, bmlocal129_tmp_bits );\
	bmlocal130_acc_bytes += bmlocal128_tmp_bytes;\
	bmlocal131_acc_bits += bmlocal129_tmp_bits;\
	BMI_ADD_ASSIGN_PTR( out_ptr, bmlocal130_acc_bytes );\
	out_bitoff += bmlocal131_acc_bits;\
}

#define BM_DilloCompileTimeMsgData_fileName_GET_POS_ALIGNED( base_ptr, out_ptr )\
{\
	/*lint --e{*} */\
	UINT bmlocal132_tmp_bitoff;\
	BM_DilloCompileTimeMsgData_fileName_GET_POS( base_ptr, out_ptr, bmlocal132_tmp_bitoff );\
	BMI_NORMALIZE_BITOFF(out_ptr, bmlocal132_tmp_bitoff);\
}

#define BM_DilloCompileTimeMsgData_fileName_POS_ALIGNED 1026

// ARRAY: DilloCompileTimeMsgData_fileName
#define BM_DilloCompileTimeMsgData_fileName_GET_SIZE( base_ptr, out_bytes, out_bits )\
{\
	/*lint --e{*} */\
	out_bytes = 1024;\
	out_bits = 0;\
	BMI_UNUSED_VAR( base_ptr );\
}

BMI_INLINE UINT BM_INLINE_DilloCompileTimeMsgData_fileName_GET_SIZE()
{
	/*lint --e{*} */
	return 1024;
}

#define BM_DilloCompileTimeMsgData_fileName_GET_DIMENSION_ELEMENT_COUNT( base_ptr, index, out_element_count )\
{\
	/*lint --e{*} */\
	switch( index )\
	{\
		case (0):\
		out_element_count = 1024;\
		break;\
		default:\
		out_element_count = 0;\
		break;\
	}\
	BMI_UNUSED_VAR( base_ptr );\
}

#define BM_DilloCompileTimeMsgData_fileName_GET_ELEMENT_POS( base_ptr, idx0, out_ptr, out_bitoff )\
{\
	/*lint --e{*} */\
	PVOID bmlocal133_out_ptr;\
	UINT bmlocal134_out_bitoff;\
	UINT bmlocal135_element_size_bytes;\
	UINT bmlocal136_element_size_bits;\
	BM_DilloCompileTimeMsgData_fileName_GET_POS( base_ptr, bmlocal133_out_ptr, bmlocal134_out_bitoff );\
	bmlocal135_element_size_bytes = 1;\
	bmlocal136_element_size_bits = 0;\
	out_ptr = BMI_NUMBER_TO_PTR_CAST( BMI_PTR_TO_NUMERIC_CAST(bmlocal133_out_ptr) + (idx0) * bmlocal135_element_size_bytes );\
	out_bitoff = bmlocal134_out_bitoff;\
	BMI_UNUSED_VAR( bmlocal136_element_size_bits );\
}

// COMPOSITE: Full name: 'DilloCompileTimeMsgData_fileName' Type: 'Char', Inner, Non-instance, No bitoff root
#define BM_DilloCompileTimeMsgData_fileName_value_GET_POS( base_ptr, idx0, out_ptr, out_bitoff )\
{\
	/*lint --e{*} */\
	PVOID bmlocal137_parent_out_ptr;\
	BM_DilloCompileTimeMsgData_fileName_GET_ELEMENT_POS( base_ptr, idx0, bmlocal137_parent_out_ptr, out_bitoff );\
	out_ptr = bmlocal137_parent_out_ptr;\
}

// Alignment of DilloCompileTimeMsgData_fileName_value: accumulated=(0,0, ABA=1), parent.base=(0,0, ABA=1)
#define BM_DilloCompileTimeMsgData_fileName_value_GET_SIZE( base_ptr, idx0, out_bytes, out_bits )\
{\
	/*lint --e{*} */\
	out_bytes = 1;\
	out_bits = 0;\
	BMI_UNUSED_VAR( base_ptr );\
	BMI_UNUSED_VAR( idx0 );\
}

#define BM_DilloCompileTimeMsgData_fileName_value_GET( base_ptr, idx0, out_val )\
{\
	/*lint --e{*} */\
	PVOID bmlocal138_my_ptr;\
	UINT bmlocal139_my_bitoff;\
	BM_DilloCompileTimeMsgData_fileName_value_GET_POS( base_ptr, idx0, bmlocal138_my_ptr, bmlocal139_my_bitoff );\
	if( BMI_MACHINE_ARM_LITTLE == BMI_MACHINE_VALUE )\
	{\
		(out_val) = (char)BMI_32BIT_EXTRACT( (BMI_GET_8BIT_PTR_CONTENTS( BMI_PTR_TO_NUMERIC_CAST(bmlocal138_my_ptr)) ), 0, 8, 0);\
	}\
	else if( BMI_MACHINE_INTEL_LITTLE == BMI_MACHINE_VALUE )\
	{\
		(out_val) = (char)BMI_32BIT_EXTRACT( (BMI_GET_8BIT_PTR_CONTENTS( BMI_PTR_TO_NUMERIC_CAST(bmlocal138_my_ptr)) ), 0, 8, 0);\
	}\
	else\
	{\
		BMI_GENERIC_32BIT_LITTLE_GET( bmlocal138_my_ptr, bmlocal139_my_bitoff, 8, char, out_val, 0xFFFFFFFF );\
	}\
}

BMI_INLINE char BM_INLINE_DilloCompileTimeMsgData_fileName_value_GET(PVOID base_ptr, UINT idx0)
{
	/*lint --e{*} */
	char bmlocal140_tmp_var;
	BM_DilloCompileTimeMsgData_fileName_value_GET( base_ptr, idx0, bmlocal140_tmp_var );
	return bmlocal140_tmp_var;
}

#define BM_DilloCompileTimeMsgData_fileName_value_SET( base_ptr, idx0, in_val )\
{\
	/*lint --e{*} */\
	PVOID bmlocal141_my_ptr;\
	UINT bmlocal142_my_bitoff;\
	BM_DilloCompileTimeMsgData_fileName_value_GET_POS( base_ptr, idx0, bmlocal141_my_ptr, bmlocal142_my_bitoff );\
	if( BMI_MACHINE_ARM_LITTLE == BMI_MACHINE_VALUE )\
	{\
		BMI_32BIT_CLEAR_ASSIGN_TYPE( BMI_GET_8BIT_PTR_CONTENTS( BMI_PTR_TO_NUMERIC_CAST(bmlocal141_my_ptr) ), (in_val), 0, 0, 8, UINT8 );\
	}\
	else if( BMI_MACHINE_INTEL_LITTLE == BMI_MACHINE_VALUE )\
	{\
		BMI_32BIT_CLEAR_ASSIGN_TYPE( BMI_GET_8BIT_PTR_CONTENTS( BMI_PTR_TO_NUMERIC_CAST(bmlocal141_my_ptr) ), (in_val), 0, 0, 8, UINT8 );\
	}\
	else\
	{\
		BMI_GENERIC_32BIT_LITTLE_SET( bmlocal141_my_ptr, bmlocal142_my_bitoff, 8, in_val, 0xFFFFFFFF );\
	}\
}

// DilloCompileTimeMsgData_fileName_value: IS_DEFAULT accessor is not defined because no default value was specified.
// DilloCompileTimeMsgData_fileName_value: SET_DEFAULT accessor is not defined because no default value was specified.
// DilloCompileTimeMsgData_fileName_value: IS_RESET accessor is not defined because no reset value was specified.
// DilloCompileTimeMsgData_fileName_value: SET_RESET accessor is not defined because no reset value was specified.
// DilloCompileTimeMsgData_fileName_value: CLEAR accessor is not defined because of incompatible access rights. Specified: RW Required: W1C, WO1C.
// DilloCompileTimeMsgData_fileName_value: SET(W1S) accessor is not defined because of incompatible access rights. Specified: RW Required: W1S, WO1S.
#define BM_DilloCompileTimeMsgData_fileName_value_DUMP_DEPTH( base_ptr, idx0, depth )\
{\
	/*lint --e{*} */\
	char bmlocal143_out_val;\
	BM_DilloCompileTimeMsgData_fileName_value_GET( base_ptr, idx0, bmlocal143_out_val );\
	/*lint -e(571) */\
	BMI_FORMAT_DUMP(depth, "value", 8, (UINT)(bmlocal143_out_val), "%d", 1);\
}

#define BM_DilloCompileTimeMsgData_fileName_value_DUMP( base_ptr, idx0 )\
{\
	/*lint --e{*} */\
	BM_DilloCompileTimeMsgData_fileName_value_DUMP_DEPTH( base_ptr, idx0, 0 );\
}

#define BM_DilloCompileTimeMsgData_fileName_value_INCREMENT( base_ptr, idx0 )\
{\
	/*lint --e{*} */\
	PVOID bmlocal144_my_ptr;\
	UINT bmlocal145_my_bitoff;\
	BM_DilloCompileTimeMsgData_fileName_value_GET_POS( base_ptr, idx0, bmlocal144_my_ptr, bmlocal145_my_bitoff );\
	(*((UINT8*)bmlocal144_my_ptr))++;\
	BMI_UNUSED_VAR( bmlocal145_my_bitoff );\
}

// DilloCompileTimeMsgData_fileName_value: Validation accessors are not defined because validation condition was not specified.
#define BM_DilloCompileTimeMsgData_fileName_value_GET_BYTES_SIZE( base_ptr, idx0, out_bytes )\
{\
	/*lint --e{*} */\
	UINT bmlocal146_tmp_bits;\
	BM_DilloCompileTimeMsgData_fileName_value_GET_SIZE( base_ptr, idx0, out_bytes, bmlocal146_tmp_bits );\
	BMI_ROUND_UP_1BYTES( out_bytes, bmlocal146_tmp_bits );\
}

#define BM_DilloCompileTimeMsgData_fileName_value_BYTES_SIZE 1

#define BM_DilloCompileTimeMsgData_fileName_GET_CELL_SIZE( base_ptr, idx0, out_bytes, out_bits )\
{\
	/*lint --e{*} */\
	out_bytes = 1;\
	out_bits = 0;\
	BMI_UNUSED_VAR( base_ptr );\
	BMI_UNUSED_VAR( idx0 );\
}

#define BM_DilloCompileTimeMsgData_fileName_GET_BYTES_CELL_SIZE( base_ptr, idx0, out_bytes )\
{\
	/*lint --e{*} */\
	UINT bmlocal149_tmp_bits;\
	BM_DilloCompileTimeMsgData_fileName_GET_CELL_SIZE( base_ptr, idx0, out_bytes, bmlocal149_tmp_bits );\
	BMI_ROUND_UP_1BYTES( out_bytes, bmlocal149_tmp_bits );\
}

#define BM_DilloCompileTimeMsgData_fileName_BYTES_CELL_SIZE 1

BMI_INLINE UINT BM_INLINE_DilloCompileTimeMsgData_fileName_GET_CELL_SIZE()
{
	/*lint --e{*} */
	return 1;
}

#define BM_DilloCompileTimeMsgData_fileName_DUMP_DEPTH_IDX( base_ptr, idx0, depth )\
{\
	/*lint --e{*} */\
	BM_DilloCompileTimeMsgData_fileName_value_DUMP_DEPTH( base_ptr, idx0, (depth + 1) );\
	BMI_UNUSED_VAR( base_ptr );\
	BMI_UNUSED_VAR( idx0 );\
}

#define BM_DilloCompileTimeMsgData_fileName_DUMP_IDX( base_ptr, idx0 )\
{\
	/*lint --e{*} */\
	BM_DilloCompileTimeMsgData_fileName_DUMP_DEPTH_IDX( base_ptr, idx0, 0 );\
}

#define BM_DilloCompileTimeMsgData_fileName_DUMP_DEPTH( base_ptr, depth )\
{\
	/*lint --e{*} */\
	UINT bmlocal150_dim_size0;\
	UINT bmlocal151_idx0;\
	bmlocal150_dim_size0 = 1024;\
	BMI_FORMAT_NONVALUE_DUMP(depth, "fileName", 1);\
	for( bmlocal151_idx0=0; bmlocal151_idx0<bmlocal150_dim_size0; bmlocal151_idx0++ )\
	{\
		BMI_FORMAT_NONVALUE_DUMP((depth + 1), "(", 0);\
		/*lint -e(571) */\
		BMI_FORMAT_DUMP(0, "", 32, (UINT)(bmlocal151_idx0), "%d", 0);\
		BMI_FORMAT_NONVALUE_DUMP(0, ")", 1);\
		BM_DilloCompileTimeMsgData_fileName_DUMP_DEPTH_IDX( base_ptr, bmlocal151_idx0, depth );\
	}\
	BMI_UNUSED_VAR( base_ptr );\
}

#define BM_DilloCompileTimeMsgData_fileName_DUMP( base_ptr )\
{\
	/*lint --e{*} */\
	BM_DilloCompileTimeMsgData_fileName_DUMP_DEPTH( base_ptr, 0 );\
}

#define BM_DilloCompileTimeMsgData_fileName_GET_BYTES_SIZE( base_ptr, out_bytes )\
{\
	/*lint --e{*} */\
	UINT bmlocal152_tmp_bits;\
	BM_DilloCompileTimeMsgData_fileName_GET_SIZE( base_ptr, out_bytes, bmlocal152_tmp_bits );\
	BMI_ROUND_UP_1BYTES( out_bytes, bmlocal152_tmp_bits );\
}

#define BM_DilloCompileTimeMsgData_fileName_BYTES_SIZE 1024

#define BM_DilloCompileTimeMsgData_reserved_GET_POS( base_ptr, out_ptr, out_bitoff )\
{\
	/*lint --e{*} */\
	UINT bmlocal153_tmp_bytes = 0;\
	UINT bmlocal154_tmp_bits = 0;\
	UINT bmlocal155_acc_bytes;\
	UINT bmlocal156_acc_bits;\
	out_ptr = base_ptr;\
	out_bitoff = 0;\
	bmlocal155_acc_bytes = 2;\
	bmlocal156_acc_bits = 0;\
	BM_DilloCompileTimeMsgData_userString_GET_SIZE( base_ptr, bmlocal153_tmp_bytes, bmlocal154_tmp_bits );\
	bmlocal155_acc_bytes += bmlocal153_tmp_bytes;\
	bmlocal156_acc_bits += bmlocal154_tmp_bits;\
	BM_DilloCompileTimeMsgData_fileName_GET_SIZE( base_ptr, bmlocal153_tmp_bytes, bmlocal154_tmp_bits );\
	bmlocal155_acc_bytes += bmlocal153_tmp_bytes;\
	bmlocal156_acc_bits += bmlocal154_tmp_bits;\
	BMI_ADD_ASSIGN_PTR( out_ptr, bmlocal155_acc_bytes );\
	out_bitoff += bmlocal156_acc_bits;\
}

#define BM_DilloCompileTimeMsgData_reserved_GET_POS_ALIGNED( base_ptr, out_ptr )\
{\
	/*lint --e{*} */\
	UINT bmlocal157_tmp_bitoff;\
	BM_DilloCompileTimeMsgData_reserved_GET_POS( base_ptr, out_ptr, bmlocal157_tmp_bitoff );\
	BMI_NORMALIZE_BITOFF(out_ptr, bmlocal157_tmp_bitoff);\
}

#define BM_DilloCompileTimeMsgData_reserved_POS_ALIGNED 2050

// Alignment of DilloCompileTimeMsgData_reserved: accumulated=(2,0, ABA=4), parent.base=(0,0, ABA=4)
#define BM_DilloCompileTimeMsgData_reserved_GET_SIZE( base_ptr, out_bytes, out_bits )\
{\
	/*lint --e{*} */\
	out_bytes = 2;\
	out_bits = 0;\
	BMI_UNUSED_VAR( base_ptr );\
}

#define BM_DilloCompileTimeMsgData_reserved_GET( base_ptr, out_val )\
{\
	/*lint --e{*} */\
	PVOID bmlocal158_my_ptr;\
	UINT bmlocal159_my_bitoff;\
	BM_DilloCompileTimeMsgData_reserved_GET_POS( base_ptr, bmlocal158_my_ptr, bmlocal159_my_bitoff );\
	if( BMI_MACHINE_ARM_LITTLE == BMI_MACHINE_VALUE )\
	{\
		(out_val) = (UINT16)BMI_32BIT_EXTRACT( (BMI_GET_16BIT_PTR_CONTENTS( BMI_PTR_TO_NUMERIC_CAST(bmlocal158_my_ptr)) ), 0, 16, 0);\
	}\
	else if( BMI_MACHINE_INTEL_LITTLE == BMI_MACHINE_VALUE )\
	{\
		(out_val) = (UINT16)BMI_32BIT_EXTRACT( (BMI_GET_16BIT_PTR_CONTENTS( BMI_PTR_TO_NUMERIC_CAST(bmlocal158_my_ptr)) ), 0, 16, 0);\
	}\
	else\
	{\
		BMI_GENERIC_32BIT_LITTLE_GET( bmlocal158_my_ptr, bmlocal159_my_bitoff, 16, UINT16, out_val, 0x00000002 );\
	}\
}

BMI_INLINE UINT16 BM_INLINE_DilloCompileTimeMsgData_reserved_GET(PVOID base_ptr)
{
	/*lint --e{*} */
	UINT16 bmlocal160_tmp_var;
	BM_DilloCompileTimeMsgData_reserved_GET( base_ptr, bmlocal160_tmp_var );
	return bmlocal160_tmp_var;
}

#define BM_DilloCompileTimeMsgData_reserved_SET( base_ptr, in_val )\
{\
	/*lint --e{*} */\
	PVOID bmlocal161_my_ptr;\
	UINT bmlocal162_my_bitoff;\
	BM_DilloCompileTimeMsgData_reserved_GET_POS( base_ptr, bmlocal161_my_ptr, bmlocal162_my_bitoff );\
	if( BMI_MACHINE_ARM_LITTLE == BMI_MACHINE_VALUE )\
	{\
		BMI_32BIT_CLEAR_ASSIGN_TYPE( BMI_GET_16BIT_PTR_CONTENTS( BMI_PTR_TO_NUMERIC_CAST(bmlocal161_my_ptr) ), (in_val), 0, 0, 16, UINT16 );\
	}\
	else if( BMI_MACHINE_INTEL_LITTLE == BMI_MACHINE_VALUE )\
	{\
		BMI_32BIT_CLEAR_ASSIGN_TYPE( BMI_GET_16BIT_PTR_CONTENTS( BMI_PTR_TO_NUMERIC_CAST(bmlocal161_my_ptr) ), (in_val), 0, 0, 16, UINT16 );\
	}\
	else\
	{\
		BMI_GENERIC_32BIT_LITTLE_SET( bmlocal161_my_ptr, bmlocal162_my_bitoff, 16, in_val, 0x00000002 );\
	}\
}

// DilloCompileTimeMsgData_reserved: IS_DEFAULT accessor is not defined because no default value was specified.
// DilloCompileTimeMsgData_reserved: SET_DEFAULT accessor is not defined because no default value was specified.
// DilloCompileTimeMsgData_reserved: IS_RESET accessor is not defined because no reset value was specified.
// DilloCompileTimeMsgData_reserved: SET_RESET accessor is not defined because no reset value was specified.
// DilloCompileTimeMsgData_reserved: CLEAR accessor is not defined because of incompatible access rights. Specified: RW Required: W1C, WO1C.
// DilloCompileTimeMsgData_reserved: SET(W1S) accessor is not defined because of incompatible access rights. Specified: RW Required: W1S, WO1S.
#define BM_DilloCompileTimeMsgData_reserved_DUMP_DEPTH( base_ptr, depth )\
{\
	/*lint --e{*} */\
	UINT16 bmlocal163_out_val;\
	BM_DilloCompileTimeMsgData_reserved_GET( base_ptr, bmlocal163_out_val );\
	/*lint -e(571) */\
	BMI_FORMAT_DUMP(depth, "reserved", 16, (UINT)(bmlocal163_out_val), "%d", 1);\
}

#define BM_DilloCompileTimeMsgData_reserved_DUMP( base_ptr )\
{\
	/*lint --e{*} */\
	BM_DilloCompileTimeMsgData_reserved_DUMP_DEPTH( base_ptr, 0 );\
}

#define BM_DilloCompileTimeMsgData_reserved_INCREMENT( base_ptr )\
{\
	/*lint --e{*} */\
	PVOID bmlocal164_my_ptr;\
	UINT bmlocal165_my_bitoff;\
	BM_DilloCompileTimeMsgData_reserved_GET_POS( base_ptr, bmlocal164_my_ptr, bmlocal165_my_bitoff );\
	(*((UINT16*)bmlocal164_my_ptr))++;\
	BMI_UNUSED_VAR( bmlocal165_my_bitoff );\
}

// DilloCompileTimeMsgData_reserved: Validation accessors are not defined because validation condition was not specified.
#define BM_DilloCompileTimeMsgData_reserved_GET_BYTES_SIZE( base_ptr, out_bytes )\
{\
	/*lint --e{*} */\
	UINT bmlocal166_tmp_bits;\
	BM_DilloCompileTimeMsgData_reserved_GET_SIZE( base_ptr, out_bytes, bmlocal166_tmp_bits );\
	BMI_ROUND_UP_1BYTES( out_bytes, bmlocal166_tmp_bits );\
}

#define BM_DilloCompileTimeMsgData_reserved_BYTES_SIZE 2

#define BM_DilloCompileTimeMsgData_lineNumber_GET_POS( base_ptr, out_ptr, out_bitoff )\
{\
	/*lint --e{*} */\
	UINT bmlocal167_tmp_bytes = 0;\
	UINT bmlocal168_tmp_bits = 0;\
	UINT bmlocal169_acc_bytes;\
	UINT bmlocal170_acc_bits;\
	out_ptr = base_ptr;\
	out_bitoff = 0;\
	bmlocal169_acc_bytes = 4;\
	bmlocal170_acc_bits = 0;\
	BM_DilloCompileTimeMsgData_userString_GET_SIZE( base_ptr, bmlocal167_tmp_bytes, bmlocal168_tmp_bits );\
	bmlocal169_acc_bytes += bmlocal167_tmp_bytes;\
	bmlocal170_acc_bits += bmlocal168_tmp_bits;\
	BM_DilloCompileTimeMsgData_fileName_GET_SIZE( base_ptr, bmlocal167_tmp_bytes, bmlocal168_tmp_bits );\
	bmlocal169_acc_bytes += bmlocal167_tmp_bytes;\
	bmlocal170_acc_bits += bmlocal168_tmp_bits;\
	BMI_ADD_ASSIGN_PTR( out_ptr, bmlocal169_acc_bytes );\
	out_bitoff += bmlocal170_acc_bits;\
}

#define BM_DilloCompileTimeMsgData_lineNumber_GET_POS_ALIGNED( base_ptr, out_ptr )\
{\
	/*lint --e{*} */\
	UINT bmlocal171_tmp_bitoff;\
	BM_DilloCompileTimeMsgData_lineNumber_GET_POS( base_ptr, out_ptr, bmlocal171_tmp_bitoff );\
	BMI_NORMALIZE_BITOFF(out_ptr, bmlocal171_tmp_bitoff);\
}

#define BM_DilloCompileTimeMsgData_lineNumber_POS_ALIGNED 2052

// Alignment of DilloCompileTimeMsgData_lineNumber: accumulated=(0,0, ABA=4), parent.base=(0,0, ABA=4)
#define BM_DilloCompileTimeMsgData_lineNumber_GET_SIZE( base_ptr, out_bytes, out_bits )\
{\
	/*lint --e{*} */\
	out_bytes = 4;\
	out_bits = 0;\
	BMI_UNUSED_VAR( base_ptr );\
}

#define BM_DilloCompileTimeMsgData_lineNumber_GET( base_ptr, out_val )\
{\
	/*lint --e{*} */\
	PVOID bmlocal172_my_ptr;\
	UINT bmlocal173_my_bitoff;\
	BM_DilloCompileTimeMsgData_lineNumber_GET_POS( base_ptr, bmlocal172_my_ptr, bmlocal173_my_bitoff );\
	if( BMI_MACHINE_ARM_LITTLE == BMI_MACHINE_VALUE )\
	{\
		(out_val) = (UINT32)BMI_32BIT_EXTRACT( (BMI_GET_32BIT_PTR_CONTENTS( BMI_PTR_TO_NUMERIC_CAST(bmlocal172_my_ptr)) ), 0, 32, 0);\
	}\
	else if( BMI_MACHINE_INTEL_LITTLE == BMI_MACHINE_VALUE )\
	{\
		(out_val) = (UINT32)BMI_32BIT_EXTRACT( (BMI_GET_32BIT_PTR_CONTENTS( BMI_PTR_TO_NUMERIC_CAST(bmlocal172_my_ptr)) ), 0, 32, 0);\
	}\
	else\
	{\
		BMI_GENERIC_32BIT_LITTLE_GET( bmlocal172_my_ptr, bmlocal173_my_bitoff, 32, UINT32, out_val, 0x00000000 );\
	}\
}

BMI_INLINE UINT32 BM_INLINE_DilloCompileTimeMsgData_lineNumber_GET(PVOID base_ptr)
{
	/*lint --e{*} */
	UINT32 bmlocal174_tmp_var;
	BM_DilloCompileTimeMsgData_lineNumber_GET( base_ptr, bmlocal174_tmp_var );
	return bmlocal174_tmp_var;
}

#define BM_DilloCompileTimeMsgData_lineNumber_SET( base_ptr, in_val )\
{\
	/*lint --e{*} */\
	PVOID bmlocal175_my_ptr;\
	UINT bmlocal176_my_bitoff;\
	BM_DilloCompileTimeMsgData_lineNumber_GET_POS( base_ptr, bmlocal175_my_ptr, bmlocal176_my_bitoff );\
	if( BMI_MACHINE_ARM_LITTLE == BMI_MACHINE_VALUE )\
	{\
		BMI_32BIT_CLEAR_ASSIGN_TYPE( BMI_GET_32BIT_PTR_CONTENTS( BMI_PTR_TO_NUMERIC_CAST(bmlocal175_my_ptr) ), (in_val), 0, 0, 32, UINT32 );\
	}\
	else if( BMI_MACHINE_INTEL_LITTLE == BMI_MACHINE_VALUE )\
	{\
		BMI_32BIT_CLEAR_ASSIGN_TYPE( BMI_GET_32BIT_PTR_CONTENTS( BMI_PTR_TO_NUMERIC_CAST(bmlocal175_my_ptr) ), (in_val), 0, 0, 32, UINT32 );\
	}\
	else\
	{\
		BMI_GENERIC_32BIT_LITTLE_SET( bmlocal175_my_ptr, bmlocal176_my_bitoff, 32, in_val, 0x00000000 );\
	}\
}

// DilloCompileTimeMsgData_lineNumber: IS_DEFAULT accessor is not defined because no default value was specified.
// DilloCompileTimeMsgData_lineNumber: SET_DEFAULT accessor is not defined because no default value was specified.
// DilloCompileTimeMsgData_lineNumber: IS_RESET accessor is not defined because no reset value was specified.
// DilloCompileTimeMsgData_lineNumber: SET_RESET accessor is not defined because no reset value was specified.
// DilloCompileTimeMsgData_lineNumber: CLEAR accessor is not defined because of incompatible access rights. Specified: RW Required: W1C, WO1C.
// DilloCompileTimeMsgData_lineNumber: SET(W1S) accessor is not defined because of incompatible access rights. Specified: RW Required: W1S, WO1S.
#define BM_DilloCompileTimeMsgData_lineNumber_DUMP_DEPTH( base_ptr, depth )\
{\
	/*lint --e{*} */\
	UINT32 bmlocal177_out_val;\
	BM_DilloCompileTimeMsgData_lineNumber_GET( base_ptr, bmlocal177_out_val );\
	/*lint -e(571) */\
	BMI_FORMAT_DUMP(depth, "lineNumber", 32, (UINT)(bmlocal177_out_val), "%d", 1);\
}

#define BM_DilloCompileTimeMsgData_lineNumber_DUMP( base_ptr )\
{\
	/*lint --e{*} */\
	BM_DilloCompileTimeMsgData_lineNumber_DUMP_DEPTH( base_ptr, 0 );\
}

#define BM_DilloCompileTimeMsgData_lineNumber_INCREMENT( base_ptr )\
{\
	/*lint --e{*} */\
	PVOID bmlocal178_my_ptr;\
	UINT bmlocal179_my_bitoff;\
	BM_DilloCompileTimeMsgData_lineNumber_GET_POS( base_ptr, bmlocal178_my_ptr, bmlocal179_my_bitoff );\
	(*((UINT32*)bmlocal178_my_ptr))++;\
	BMI_UNUSED_VAR( bmlocal179_my_bitoff );\
}

// DilloCompileTimeMsgData_lineNumber: Validation accessors are not defined because validation condition was not specified.
#define BM_DilloCompileTimeMsgData_lineNumber_GET_BYTES_SIZE( base_ptr, out_bytes )\
{\
	/*lint --e{*} */\
	UINT bmlocal180_tmp_bits;\
	BM_DilloCompileTimeMsgData_lineNumber_GET_SIZE( base_ptr, out_bytes, bmlocal180_tmp_bits );\
	BMI_ROUND_UP_1BYTES( out_bytes, bmlocal180_tmp_bits );\
}

#define BM_DilloCompileTimeMsgData_lineNumber_BYTES_SIZE 4

#define BM_DilloCompileTimeMsgData_GET_SIZE( base_ptr, out_bytes, out_bits )\
{\
	/*lint --e{*} */\
	UINT bmlocal181_tmp_bytes = 0;\
	UINT bmlocal182_tmp_bits = 0;\
	out_bytes = 8;\
	out_bits = 0;\
	BM_DilloCompileTimeMsgData_userString_GET_SIZE( base_ptr, bmlocal181_tmp_bytes, bmlocal182_tmp_bits );\
	out_bytes += bmlocal181_tmp_bytes;\
	out_bits += bmlocal182_tmp_bits;\
	BM_DilloCompileTimeMsgData_fileName_GET_SIZE( base_ptr, bmlocal181_tmp_bytes, bmlocal182_tmp_bits );\
	out_bytes += bmlocal181_tmp_bytes;\
	out_bits += bmlocal182_tmp_bits;\
}

#define BM_DilloCompileTimeMsgData_GET_BYTES_SIZE( base_ptr, out_bytes )\
{\
	/*lint --e{*} */\
	UINT bmlocal183_tmp_bits;\
	BM_DilloCompileTimeMsgData_GET_SIZE( base_ptr, out_bytes, bmlocal183_tmp_bits );\
	BMI_ROUND_UP_1BYTES( out_bytes, bmlocal183_tmp_bits );\
}

#define BM_DilloCompileTimeMsgData_BYTES_SIZE 2056

#define BM_DilloCompileTimeMsgData_DUMP_DEPTH( base_ptr, depth )\
{\
	/*lint --e{*} */\
	BMI_FORMAT_NONVALUE_DUMP(depth, "DilloCompileTimeMsgData", 1);\
	BM_DilloCompileTimeMsgData_severity_DUMP_DEPTH( base_ptr, (depth + 1) );\
	BM_DilloCompileTimeMsgData_moduleID_DUMP_DEPTH( base_ptr, (depth + 1) );\
	BM_DilloCompileTimeMsgData_userString_DUMP_DEPTH( base_ptr, (depth + 1) );\
	BM_DilloCompileTimeMsgData_fileName_DUMP_DEPTH( base_ptr, (depth + 1) );\
	BM_DilloCompileTimeMsgData_reserved_DUMP_DEPTH( base_ptr, (depth + 1) );\
	BM_DilloCompileTimeMsgData_lineNumber_DUMP_DEPTH( base_ptr, (depth + 1) );\
	BMI_UNUSED_VAR( base_ptr );\
}

#define BM_DilloCompileTimeMsgData_DUMP( base_ptr )\
{\
	/*lint --e{*} */\
	BM_DilloCompileTimeMsgData_DUMP_DEPTH( base_ptr, 0 );\
}


typedef UINT8 DilloMsgStatus[2];

/*lint -save -e806 */ /* Small bit field is signed rather than unsigned*/
#ifdef BMI_ENDIANNESS_LITTLE
#if (!defined __arm && !defined __arc)
#pragma pack( push, 1 )
#endif
#ifdef __arm
typedef __packed union
#elif defined __arc
typedef _Packed union
#else
typedef union
#endif
{
	UINT16 reg;
#ifdef __arm
	__packed struct
#elif defined __arc
_Packed struct
#else
	struct
#endif
	{
		UINT16 _msgID : 12; //an index in trace string table file
		UINT16 _numOfParams : 2; //may be 0..3
		UINT16 _bufferOverrun : 1; //set to TRUE, if buffer overflow happened
		UINT16 _timeStampPresent : 1; //set to TRUE, if time stamp is attached
	} fields;
} BMS_DilloMsgStatus;

#if (!defined __arm && !defined __arc)
#pragma pack( pop )
#endif

#else /* BMI_ENDIANNESS_BIG */
#if (!defined __arm && !defined __arc)
#pragma pack( push, 1 )
#endif
#ifdef __arm
typedef __packed union
#elif defined __arc
typedef _Packed union
#else
typedef union
#endif
{
	UINT16 reg;
#ifdef __arm
	__packed struct
#elif defined __arc
_Packed struct
#else
	struct
#endif
	{
		UINT16 _timeStampPresent : 1; //set to TRUE, if time stamp is attached
		UINT16 _bufferOverrun : 1; //set to TRUE, if buffer overflow happened
		UINT16 _numOfParams : 2; //may be 0..3
		UINT16 _msgID : 12; //an index in trace string table file
	} fields;
} BMS_DilloMsgStatus;

#if (!defined __arm && !defined __arc)
#pragma pack( pop )
#endif

#endif	/*#ifdef BMI_ENDIANNESS_LITTLE*/
/*lint -restore */

// COMPOSITE: Full name: 'DilloMsgStatus' Type: 'DilloMsgStatus', Top-level, Non-instance, No bitoff root
#define BM_DilloMsgStatus_msgID_GET_POS( base_ptr, out_ptr, out_bitoff )\
{\
	/*lint --e{*} */\
	out_ptr = base_ptr;\
	out_bitoff = 0;\
}

#define BM_DilloMsgStatus_msgID_GET_POS_ALIGNED( base_ptr, out_ptr )\
{\
	/*lint --e{*} */\
	UINT bmlocal184_tmp_bitoff;\
	BM_DilloMsgStatus_msgID_GET_POS( base_ptr, out_ptr, bmlocal184_tmp_bitoff );\
	BMI_NORMALIZE_BITOFF(out_ptr, bmlocal184_tmp_bitoff);\
}

#define BM_DilloMsgStatus_msgID_POS_ALIGNED 0

// Alignment of DilloMsgStatus_msgID: accumulated=(0,0, ABA=2), parent.base=(0,0, ABA=2)
#define BM_DilloMsgStatus_msgID_GET_SIZE( base_ptr, out_bytes, out_bits )\
{\
	/*lint --e{*} */\
	out_bytes = 1;\
	out_bits = 4;\
	BMI_UNUSED_VAR( base_ptr );\
}

#define BM_DilloMsgStatus_msgID_GET( base_ptr, out_val )\
{\
	/*lint --e{*} */\
	PVOID bmlocal185_my_ptr;\
	UINT bmlocal186_my_bitoff;\
	BM_DilloMsgStatus_msgID_GET_POS( base_ptr, bmlocal185_my_ptr, bmlocal186_my_bitoff );\
	BMI_GENERIC_16BIT_LITTLE_GET_VOLATILE_NOSPAN( bmlocal185_my_ptr, bmlocal186_my_bitoff, 12, UINT16, out_val, 0x00000000 );\
}

BMI_INLINE UINT16 BM_INLINE_DilloMsgStatus_msgID_GET(PVOID base_ptr)
{
	/*lint --e{*} */
	UINT16 bmlocal187_tmp_var;
	BM_DilloMsgStatus_msgID_GET( base_ptr, bmlocal187_tmp_var );
	return bmlocal187_tmp_var;
}

#define BM_DilloMsgStatus_msgID_SET( base_ptr, in_val )\
{\
	/*lint --e{*} */\
	PVOID bmlocal188_my_ptr;\
	UINT bmlocal189_my_bitoff;\
	BM_DilloMsgStatus_msgID_GET_POS( base_ptr, bmlocal188_my_ptr, bmlocal189_my_bitoff );\
	BMI_GENERIC_16BIT_LITTLE_SET_VOLATILE_NOSPAN( bmlocal188_my_ptr, bmlocal189_my_bitoff, 12, in_val, 0x00000000 );\
}

// DilloMsgStatus_msgID: IS_DEFAULT accessor is not defined because no default value was specified.
// DilloMsgStatus_msgID: SET_DEFAULT accessor is not defined because no default value was specified.
// DilloMsgStatus_msgID: IS_RESET accessor is not defined because no reset value was specified.
// DilloMsgStatus_msgID: SET_RESET accessor is not defined because no reset value was specified.
// DilloMsgStatus_msgID: CLEAR accessor is not defined because of incompatible access rights. Specified: RW Required: W1C, WO1C.
// DilloMsgStatus_msgID: SET(W1S) accessor is not defined because of incompatible access rights. Specified: RW Required: W1S, WO1S.
#define BM_DilloMsgStatus_msgID_DUMP_DEPTH( base_ptr, depth )\
{\
	/*lint --e{*} */\
	UINT16 bmlocal190_out_val;\
	BM_DilloMsgStatus_msgID_GET( base_ptr, bmlocal190_out_val );\
	/*lint -e(571) */\
	BMI_FORMAT_DUMP(depth, "msgID", 12, (UINT)(bmlocal190_out_val), "%d", 1);\
}

#define BM_DilloMsgStatus_msgID_DUMP( base_ptr )\
{\
	/*lint --e{*} */\
	BM_DilloMsgStatus_msgID_DUMP_DEPTH( base_ptr, 0 );\
}

#define BM_DilloMsgStatus_msgID_INCREMENT( base_ptr )\
{\
	/*lint --e{*} */\
	UINT16 bmlocal191_val;\
	BM_DilloMsgStatus_msgID_GET( base_ptr, bmlocal191_val );\
	(bmlocal191_val)++;\
	BM_DilloMsgStatus_msgID_SET( base_ptr, bmlocal191_val );\
}

// DilloMsgStatus_msgID: Validation accessors are not defined because validation condition was not specified.
#define BM_DilloMsgStatus_msgID_GET_BYTES_SIZE( base_ptr, out_bytes )\
{\
	/*lint --e{*} */\
	UINT bmlocal192_tmp_bits;\
	BM_DilloMsgStatus_msgID_GET_SIZE( base_ptr, out_bytes, bmlocal192_tmp_bits );\
	BMI_ROUND_UP_1BYTES( out_bytes, bmlocal192_tmp_bits );\
}

#define BM_DilloMsgStatus_msgID_BYTES_SIZE 2

#define BM_DilloMsgStatus_numOfParams_GET_POS( base_ptr, out_ptr, out_bitoff )\
{\
	/*lint --e{*} */\
	UINT bmlocal195_acc_bytes;\
	UINT bmlocal196_acc_bits;\
	out_ptr = base_ptr;\
	out_bitoff = 0;\
	bmlocal195_acc_bytes = 1;\
	bmlocal196_acc_bits = 4;\
	BMI_ADD_ASSIGN_PTR( out_ptr, bmlocal195_acc_bytes );\
	out_bitoff += bmlocal196_acc_bits;\
}

// Alignment of DilloMsgStatus_numOfParams: accumulated=(1,4, ABA=2), parent.base=(0,0, ABA=2)
#define BM_DilloMsgStatus_numOfParams_GET_SIZE( base_ptr, out_bytes, out_bits )\
{\
	/*lint --e{*} */\
	out_bytes = 0;\
	out_bits = 2;\
	BMI_UNUSED_VAR( base_ptr );\
}

#define BM_DilloMsgStatus_numOfParams_GET( base_ptr, out_val )\
{\
	/*lint --e{*} */\
	PVOID bmlocal197_my_ptr;\
	UINT bmlocal198_my_bitoff;\
	BM_DilloMsgStatus_numOfParams_GET_POS( base_ptr, bmlocal197_my_ptr, bmlocal198_my_bitoff );\
	BMI_GENERIC_16BIT_LITTLE_GET_VOLATILE_NOSPAN( bmlocal197_my_ptr, bmlocal198_my_bitoff, 2, UINT16, out_val, 0x00000001 );\
}

BMI_INLINE UINT16 BM_INLINE_DilloMsgStatus_numOfParams_GET(PVOID base_ptr)
{
	/*lint --e{*} */
	UINT16 bmlocal199_tmp_var;
	BM_DilloMsgStatus_numOfParams_GET( base_ptr, bmlocal199_tmp_var );
	return bmlocal199_tmp_var;
}

#define BM_DilloMsgStatus_numOfParams_SET( base_ptr, in_val )\
{\
	/*lint --e{*} */\
	PVOID bmlocal200_my_ptr;\
	UINT bmlocal201_my_bitoff;\
	BM_DilloMsgStatus_numOfParams_GET_POS( base_ptr, bmlocal200_my_ptr, bmlocal201_my_bitoff );\
	BMI_GENERIC_16BIT_LITTLE_SET_VOLATILE_NOSPAN( bmlocal200_my_ptr, bmlocal201_my_bitoff, 2, in_val, 0x00000001 );\
}

// DilloMsgStatus_numOfParams: IS_DEFAULT accessor is not defined because no default value was specified.
// DilloMsgStatus_numOfParams: SET_DEFAULT accessor is not defined because no default value was specified.
// DilloMsgStatus_numOfParams: IS_RESET accessor is not defined because no reset value was specified.
// DilloMsgStatus_numOfParams: SET_RESET accessor is not defined because no reset value was specified.
// DilloMsgStatus_numOfParams: CLEAR accessor is not defined because of incompatible access rights. Specified: RW Required: W1C, WO1C.
// DilloMsgStatus_numOfParams: SET(W1S) accessor is not defined because of incompatible access rights. Specified: RW Required: W1S, WO1S.
#define BM_DilloMsgStatus_numOfParams_DUMP_DEPTH( base_ptr, depth )\
{\
	/*lint --e{*} */\
	UINT16 bmlocal202_out_val;\
	BM_DilloMsgStatus_numOfParams_GET( base_ptr, bmlocal202_out_val );\
	/*lint -e(571) */\
	BMI_FORMAT_DUMP(depth, "numOfParams", 2, (UINT)(bmlocal202_out_val), "%d", 1);\
}

#define BM_DilloMsgStatus_numOfParams_DUMP( base_ptr )\
{\
	/*lint --e{*} */\
	BM_DilloMsgStatus_numOfParams_DUMP_DEPTH( base_ptr, 0 );\
}

#define BM_DilloMsgStatus_numOfParams_INCREMENT( base_ptr )\
{\
	/*lint --e{*} */\
	UINT16 bmlocal203_val;\
	BM_DilloMsgStatus_numOfParams_GET( base_ptr, bmlocal203_val );\
	(bmlocal203_val)++;\
	BM_DilloMsgStatus_numOfParams_SET( base_ptr, bmlocal203_val );\
}

// DilloMsgStatus_numOfParams: Validation accessors are not defined because validation condition was not specified.
#define BM_DilloMsgStatus_numOfParams_GET_BYTES_SIZE( base_ptr, out_bytes )\
{\
	/*lint --e{*} */\
	UINT bmlocal204_tmp_bits;\
	BM_DilloMsgStatus_numOfParams_GET_SIZE( base_ptr, out_bytes, bmlocal204_tmp_bits );\
	BMI_ROUND_UP_1BYTES( out_bytes, bmlocal204_tmp_bits );\
}

#define BM_DilloMsgStatus_numOfParams_BYTES_SIZE 1

#define BM_DilloMsgStatus_bufferOverrun_GET_POS( base_ptr, out_ptr, out_bitoff )\
{\
	/*lint --e{*} */\
	UINT bmlocal207_acc_bytes;\
	UINT bmlocal208_acc_bits;\
	out_ptr = base_ptr;\
	out_bitoff = 0;\
	bmlocal207_acc_bytes = 1;\
	bmlocal208_acc_bits = 6;\
	BMI_ADD_ASSIGN_PTR( out_ptr, bmlocal207_acc_bytes );\
	out_bitoff += bmlocal208_acc_bits;\
}

// Alignment of DilloMsgStatus_bufferOverrun: accumulated=(1,6, ABA=2), parent.base=(0,0, ABA=2)
#define BM_DilloMsgStatus_bufferOverrun_GET_SIZE( base_ptr, out_bytes, out_bits )\
{\
	/*lint --e{*} */\
	out_bytes = 0;\
	out_bits = 1;\
	BMI_UNUSED_VAR( base_ptr );\
}

#define BM_DilloMsgStatus_bufferOverrun_GET( base_ptr, out_val )\
{\
	/*lint --e{*} */\
	PVOID bmlocal209_my_ptr;\
	UINT bmlocal210_my_bitoff;\
	BM_DilloMsgStatus_bufferOverrun_GET_POS( base_ptr, bmlocal209_my_ptr, bmlocal210_my_bitoff );\
	BMI_GENERIC_16BIT_LITTLE_GET_VOLATILE_NOSPAN( bmlocal209_my_ptr, bmlocal210_my_bitoff, 1, UINT16, out_val, 0x00000001 );\
}

BMI_INLINE UINT16 BM_INLINE_DilloMsgStatus_bufferOverrun_GET(PVOID base_ptr)
{
	/*lint --e{*} */
	UINT16 bmlocal211_tmp_var;
	BM_DilloMsgStatus_bufferOverrun_GET( base_ptr, bmlocal211_tmp_var );
	return bmlocal211_tmp_var;
}

#define BM_DilloMsgStatus_bufferOverrun_SET( base_ptr, in_val )\
{\
	/*lint --e{*} */\
	PVOID bmlocal212_my_ptr;\
	UINT bmlocal213_my_bitoff;\
	BM_DilloMsgStatus_bufferOverrun_GET_POS( base_ptr, bmlocal212_my_ptr, bmlocal213_my_bitoff );\
	BMI_GENERIC_16BIT_LITTLE_SET_VOLATILE_NOSPAN( bmlocal212_my_ptr, bmlocal213_my_bitoff, 1, in_val, 0x00000001 );\
}

// DilloMsgStatus_bufferOverrun: IS_DEFAULT accessor is not defined because no default value was specified.
// DilloMsgStatus_bufferOverrun: SET_DEFAULT accessor is not defined because no default value was specified.
// DilloMsgStatus_bufferOverrun: IS_RESET accessor is not defined because no reset value was specified.
// DilloMsgStatus_bufferOverrun: SET_RESET accessor is not defined because no reset value was specified.
// DilloMsgStatus_bufferOverrun: CLEAR accessor is not defined because of incompatible access rights. Specified: RW Required: W1C, WO1C.
// DilloMsgStatus_bufferOverrun: SET(W1S) accessor is not defined because of incompatible access rights. Specified: RW Required: W1S, WO1S.
#define BM_DilloMsgStatus_bufferOverrun_DUMP_DEPTH( base_ptr, depth )\
{\
	/*lint --e{*} */\
	UINT16 bmlocal214_out_val;\
	BM_DilloMsgStatus_bufferOverrun_GET( base_ptr, bmlocal214_out_val );\
	/*lint -e(571) */\
	BMI_FORMAT_DUMP(depth, "bufferOverrun", 1, (UINT)(bmlocal214_out_val), "%d", 1);\
}

#define BM_DilloMsgStatus_bufferOverrun_DUMP( base_ptr )\
{\
	/*lint --e{*} */\
	BM_DilloMsgStatus_bufferOverrun_DUMP_DEPTH( base_ptr, 0 );\
}

#define BM_DilloMsgStatus_bufferOverrun_INCREMENT( base_ptr )\
{\
	/*lint --e{*} */\
	UINT16 bmlocal215_val;\
	BM_DilloMsgStatus_bufferOverrun_GET( base_ptr, bmlocal215_val );\
	(bmlocal215_val)++;\
	BM_DilloMsgStatus_bufferOverrun_SET( base_ptr, bmlocal215_val );\
}

// DilloMsgStatus_bufferOverrun: Validation accessors are not defined because validation condition was not specified.
#define BM_DilloMsgStatus_bufferOverrun_GET_BYTES_SIZE( base_ptr, out_bytes )\
{\
	/*lint --e{*} */\
	UINT bmlocal216_tmp_bits;\
	BM_DilloMsgStatus_bufferOverrun_GET_SIZE( base_ptr, out_bytes, bmlocal216_tmp_bits );\
	BMI_ROUND_UP_1BYTES( out_bytes, bmlocal216_tmp_bits );\
}

#define BM_DilloMsgStatus_bufferOverrun_BYTES_SIZE 1

#define BM_DilloMsgStatus_timeStampPresent_GET_POS( base_ptr, out_ptr, out_bitoff )\
{\
	/*lint --e{*} */\
	UINT bmlocal219_acc_bytes;\
	UINT bmlocal220_acc_bits;\
	out_ptr = base_ptr;\
	out_bitoff = 0;\
	bmlocal219_acc_bytes = 1;\
	bmlocal220_acc_bits = 7;\
	BMI_ADD_ASSIGN_PTR( out_ptr, bmlocal219_acc_bytes );\
	out_bitoff += bmlocal220_acc_bits;\
}

// Alignment of DilloMsgStatus_timeStampPresent: accumulated=(1,7, ABA=2), parent.base=(0,0, ABA=2)
#define BM_DilloMsgStatus_timeStampPresent_GET_SIZE( base_ptr, out_bytes, out_bits )\
{\
	/*lint --e{*} */\
	out_bytes = 0;\
	out_bits = 1;\
	BMI_UNUSED_VAR( base_ptr );\
}

#define BM_DilloMsgStatus_timeStampPresent_GET( base_ptr, out_val )\
{\
	/*lint --e{*} */\
	PVOID bmlocal221_my_ptr;\
	UINT bmlocal222_my_bitoff;\
	BM_DilloMsgStatus_timeStampPresent_GET_POS( base_ptr, bmlocal221_my_ptr, bmlocal222_my_bitoff );\
	BMI_GENERIC_16BIT_LITTLE_GET_VOLATILE_NOSPAN( bmlocal221_my_ptr, bmlocal222_my_bitoff, 1, UINT16, out_val, 0x00000001 );\
}

BMI_INLINE UINT16 BM_INLINE_DilloMsgStatus_timeStampPresent_GET(PVOID base_ptr)
{
	/*lint --e{*} */
	UINT16 bmlocal223_tmp_var;
	BM_DilloMsgStatus_timeStampPresent_GET( base_ptr, bmlocal223_tmp_var );
	return bmlocal223_tmp_var;
}

#define BM_DilloMsgStatus_timeStampPresent_SET( base_ptr, in_val )\
{\
	/*lint --e{*} */\
	PVOID bmlocal224_my_ptr;\
	UINT bmlocal225_my_bitoff;\
	BM_DilloMsgStatus_timeStampPresent_GET_POS( base_ptr, bmlocal224_my_ptr, bmlocal225_my_bitoff );\
	BMI_GENERIC_16BIT_LITTLE_SET_VOLATILE_NOSPAN( bmlocal224_my_ptr, bmlocal225_my_bitoff, 1, in_val, 0x00000001 );\
}

// DilloMsgStatus_timeStampPresent: IS_DEFAULT accessor is not defined because no default value was specified.
// DilloMsgStatus_timeStampPresent: SET_DEFAULT accessor is not defined because no default value was specified.
// DilloMsgStatus_timeStampPresent: IS_RESET accessor is not defined because no reset value was specified.
// DilloMsgStatus_timeStampPresent: SET_RESET accessor is not defined because no reset value was specified.
// DilloMsgStatus_timeStampPresent: CLEAR accessor is not defined because of incompatible access rights. Specified: RW Required: W1C, WO1C.
// DilloMsgStatus_timeStampPresent: SET(W1S) accessor is not defined because of incompatible access rights. Specified: RW Required: W1S, WO1S.
#define BM_DilloMsgStatus_timeStampPresent_DUMP_DEPTH( base_ptr, depth )\
{\
	/*lint --e{*} */\
	UINT16 bmlocal226_out_val;\
	BM_DilloMsgStatus_timeStampPresent_GET( base_ptr, bmlocal226_out_val );\
	/*lint -e(571) */\
	BMI_FORMAT_DUMP(depth, "timeStampPresent", 1, (UINT)(bmlocal226_out_val), "%d", 1);\
}

#define BM_DilloMsgStatus_timeStampPresent_DUMP( base_ptr )\
{\
	/*lint --e{*} */\
	BM_DilloMsgStatus_timeStampPresent_DUMP_DEPTH( base_ptr, 0 );\
}

#define BM_DilloMsgStatus_timeStampPresent_INCREMENT( base_ptr )\
{\
	/*lint --e{*} */\
	UINT16 bmlocal227_val;\
	BM_DilloMsgStatus_timeStampPresent_GET( base_ptr, bmlocal227_val );\
	(bmlocal227_val)++;\
	BM_DilloMsgStatus_timeStampPresent_SET( base_ptr, bmlocal227_val );\
}

// DilloMsgStatus_timeStampPresent: Validation accessors are not defined because validation condition was not specified.
#define BM_DilloMsgStatus_timeStampPresent_GET_BYTES_SIZE( base_ptr, out_bytes )\
{\
	/*lint --e{*} */\
	UINT bmlocal228_tmp_bits;\
	BM_DilloMsgStatus_timeStampPresent_GET_SIZE( base_ptr, out_bytes, bmlocal228_tmp_bits );\
	BMI_ROUND_UP_1BYTES( out_bytes, bmlocal228_tmp_bits );\
}

#define BM_DilloMsgStatus_timeStampPresent_BYTES_SIZE 1

#define BM_DilloMsgStatus_GET_SIZE( base_ptr, out_bytes, out_bits )\
{\
	/*lint --e{*} */\
	out_bytes = 2;\
	out_bits = 0;\
	BMI_UNUSED_VAR( base_ptr );\
}

#define BM_DilloMsgStatus_GET_BYTES_SIZE( base_ptr, out_bytes )\
{\
	/*lint --e{*} */\
	UINT bmlocal231_tmp_bits;\
	BM_DilloMsgStatus_GET_SIZE( base_ptr, out_bytes, bmlocal231_tmp_bits );\
	BMI_ROUND_UP_1BYTES( out_bytes, bmlocal231_tmp_bits );\
}

#define BM_DilloMsgStatus_BYTES_SIZE 2

BMI_INLINE UINT BM_INLINE_DilloMsgStatus_GET_SIZE()
{
	/*lint --e{*} */
	return 2;
}

#define BM_DilloMsgStatus_GET( base_ptr, out_val )\
{\
	/*lint --e{*} */\
	PVOID bmlocal232_my_ptr;\
	UINT bmlocal233_my_bitoff;\
	BM_DilloMsgStatus_msgID_GET_POS( base_ptr, bmlocal232_my_ptr, bmlocal233_my_bitoff );\
	BMI_GENERIC_16BIT_LITTLE_GET_VOLATILE_NOSPAN( bmlocal232_my_ptr, bmlocal233_my_bitoff, 16, UINT16, out_val, 0x00000000 );\
}

BMI_INLINE UINT16 BM_INLINE_DilloMsgStatus_GET(PVOID base_ptr)
{
	/*lint --e{*} */
	UINT16 bmlocal234_tmp_var;
	BM_DilloMsgStatus_GET( base_ptr, bmlocal234_tmp_var );
	return bmlocal234_tmp_var;
}

#define BM_DilloMsgStatus_SET( base_ptr, in_val )\
{\
	/*lint --e{*} */\
	PVOID bmlocal235_my_ptr;\
	UINT bmlocal236_my_bitoff;\
	BM_DilloMsgStatus_msgID_GET_POS( base_ptr, bmlocal235_my_ptr, bmlocal236_my_bitoff );\
	BMI_GENERIC_16BIT_LITTLE_SET_VOLATILE_NOSPAN( bmlocal235_my_ptr, bmlocal236_my_bitoff, 16, in_val, 0x00000000 );\
}

// DilloMsgStatus: IS_DEFAULT accessor is not defined because no default value was specified.
// DilloMsgStatus: SET_DEFAULT accessor is not defined because no default value was specified.
// DilloMsgStatus: IS_RESET accessor is not defined because no reset value was specified.
// DilloMsgStatus: SET_RESET accessor is not defined because no reset value was specified.
#define BM_DilloMsgStatus_GET_ALL( base_ptr, param_msgID, param_numOfParams, param_bufferOverrun, param_timeStampPresent )\
{\
	/*lint --e{*} */\
	UINT16 bmlocal237_val;\
	BM_DilloMsgStatus_GET( base_ptr, bmlocal237_val );\
	param_msgID = (UINT16)(((bmlocal237_val&BM_DilloMsgStatus_msgID_SHIFTED_MASK) >> BM_DilloMsgStatus_msgID_OFFSET));\
	param_numOfParams = (UINT8)(((bmlocal237_val&BM_DilloMsgStatus_numOfParams_SHIFTED_MASK) >> BM_DilloMsgStatus_numOfParams_OFFSET));\
	param_bufferOverrun = (UINT8)(((bmlocal237_val&BM_DilloMsgStatus_bufferOverrun_SHIFTED_MASK) >> BM_DilloMsgStatus_bufferOverrun_OFFSET));\
	param_timeStampPresent = (UINT8)(((bmlocal237_val&BM_DilloMsgStatus_timeStampPresent_SHIFTED_MASK) >> BM_DilloMsgStatus_timeStampPresent_OFFSET));\
}

#define BM_DilloMsgStatus_SET_ALL( base_ptr, param_msgID, param_numOfParams, param_bufferOverrun, param_timeStampPresent )\
{\
	/*lint --e{*} */\
	UINT16 bmlocal238_varToWrite = (UINT16)(((param_msgID&BM_DilloMsgStatus_msgID_MASK) << BM_DilloMsgStatus_msgID_OFFSET) | ((param_numOfParams&BM_DilloMsgStatus_numOfParams_MASK) << BM_DilloMsgStatus_numOfParams_OFFSET) | ((param_bufferOverrun&BM_DilloMsgStatus_bufferOverrun_MASK) << BM_DilloMsgStatus_bufferOverrun_OFFSET) | ((param_timeStampPresent&BM_DilloMsgStatus_timeStampPresent_MASK) << BM_DilloMsgStatus_timeStampPresent_OFFSET));\
	BM_DilloMsgStatus_SET( base_ptr, bmlocal238_varToWrite );\
}

#define BM_DilloMsgStatus_STRICT_SET_ALL( base_ptr, param_msgID, param_numOfParams, param_bufferOverrun, param_timeStampPresent )\
{\
	/*lint --e{*} */\
	UINT16 bmlocal239_varToWrite = (UINT16)((param_msgID << BM_DilloMsgStatus_msgID_OFFSET) | (param_numOfParams << BM_DilloMsgStatus_numOfParams_OFFSET) | (param_bufferOverrun << BM_DilloMsgStatus_bufferOverrun_OFFSET) | (param_timeStampPresent << BM_DilloMsgStatus_timeStampPresent_OFFSET));\
	BM_DilloMsgStatus_SET( base_ptr, bmlocal239_varToWrite );\
}

#define BM_DilloMsgStatus_DUMP_DEPTH( base_ptr, depth )\
{\
	/*lint --e{*} */\
	BMI_FORMAT_NONVALUE_DUMP(depth, "DilloMsgStatus", 1);\
	BM_DilloMsgStatus_msgID_DUMP_DEPTH( base_ptr, (depth + 1) );\
	BM_DilloMsgStatus_numOfParams_DUMP_DEPTH( base_ptr, (depth + 1) );\
	BM_DilloMsgStatus_bufferOverrun_DUMP_DEPTH( base_ptr, (depth + 1) );\
	BM_DilloMsgStatus_timeStampPresent_DUMP_DEPTH( base_ptr, (depth + 1) );\
	BMI_UNUSED_VAR( base_ptr );\
}

#define BM_DilloMsgStatus_DUMP( base_ptr )\
{\
	/*lint --e{*} */\
	BM_DilloMsgStatus_DUMP_DEPTH( base_ptr, 0 );\
}


typedef UINT8 DilloTimeStamp[4];

/*lint -save -e806 */ /* Small bit field is signed rather than unsigned*/
#ifdef BMI_ENDIANNESS_LITTLE
#if (!defined __arm && !defined __arc)
#pragma pack( push, 1 )
#endif
#ifdef __arm
typedef __packed struct
#elif defined __arc
typedef _Packed struct
#else
typedef struct
#endif
{
	UINT16 _leastSignificant : 16; //Least Significant Word (16bits) of Timestamp
	UINT16 _mostSignificant : 16; //Most Significant Word (16bits) of Timestamp
} BMS_DilloTimeStamp;

#if (!defined __arm && !defined __arc)
#pragma pack( pop )
#endif

#else /* BMI_ENDIANNESS_BIG */
#if (!defined __arm && !defined __arc)
#pragma pack( push, 1 )
#endif
#ifdef __arm
typedef __packed struct
#elif defined __arc
typedef _Packed struct
#else
typedef struct
#endif
{
	UINT16 _mostSignificant : 16; //Most Significant Word (16bits) of Timestamp
	UINT16 _leastSignificant : 16; //Least Significant Word (16bits) of Timestamp
} BMS_DilloTimeStamp;

#if (!defined __arm && !defined __arc)
#pragma pack( pop )
#endif

#endif	/*#ifdef BMI_ENDIANNESS_LITTLE*/
/*lint -restore */

// COMPOSITE: Full name: 'DilloTimeStamp' Type: 'DilloTimeStamp', Top-level, Non-instance, No bitoff root
#define BM_DilloTimeStamp_leastSignificant_GET_POS( base_ptr, out_ptr, out_bitoff )\
{\
	/*lint --e{*} */\
	out_ptr = base_ptr;\
	out_bitoff = 0;\
}

#define BM_DilloTimeStamp_leastSignificant_GET_POS_ALIGNED( base_ptr, out_ptr )\
{\
	/*lint --e{*} */\
	UINT bmlocal240_tmp_bitoff;\
	BM_DilloTimeStamp_leastSignificant_GET_POS( base_ptr, out_ptr, bmlocal240_tmp_bitoff );\
	BMI_NORMALIZE_BITOFF(out_ptr, bmlocal240_tmp_bitoff);\
}

#define BM_DilloTimeStamp_leastSignificant_POS_ALIGNED 0

// Alignment of DilloTimeStamp_leastSignificant: accumulated=(0,0, ABA=2), parent.base=(0,0, ABA=2)
#define BM_DilloTimeStamp_leastSignificant_GET_SIZE( base_ptr, out_bytes, out_bits )\
{\
	/*lint --e{*} */\
	out_bytes = 2;\
	out_bits = 0;\
	BMI_UNUSED_VAR( base_ptr );\
}

#define BM_DilloTimeStamp_leastSignificant_GET( base_ptr, out_val )\
{\
	/*lint --e{*} */\
	PVOID bmlocal241_my_ptr;\
	UINT bmlocal242_my_bitoff;\
	BM_DilloTimeStamp_leastSignificant_GET_POS( base_ptr, bmlocal241_my_ptr, bmlocal242_my_bitoff );\
	if( BMI_MACHINE_ARM_LITTLE == BMI_MACHINE_VALUE )\
	{\
		(out_val) = (UINT16)BMI_32BIT_EXTRACT( (BMI_GET_16BIT_PTR_CONTENTS( BMI_PTR_TO_NUMERIC_CAST(bmlocal241_my_ptr)) ), 0, 16, 0);\
	}\
	else if( BMI_MACHINE_INTEL_LITTLE == BMI_MACHINE_VALUE )\
	{\
		(out_val) = (UINT16)BMI_32BIT_EXTRACT( (BMI_GET_16BIT_PTR_CONTENTS( BMI_PTR_TO_NUMERIC_CAST(bmlocal241_my_ptr)) ), 0, 16, 0);\
	}\
	else\
	{\
		BMI_GENERIC_32BIT_LITTLE_GET( bmlocal241_my_ptr, bmlocal242_my_bitoff, 16, UINT16, out_val, 0xFFFFFFFF );\
	}\
}

BMI_INLINE UINT16 BM_INLINE_DilloTimeStamp_leastSignificant_GET(PVOID base_ptr)
{
	/*lint --e{*} */
	UINT16 bmlocal243_tmp_var;
	BM_DilloTimeStamp_leastSignificant_GET( base_ptr, bmlocal243_tmp_var );
	return bmlocal243_tmp_var;
}

#define BM_DilloTimeStamp_leastSignificant_SET( base_ptr, in_val )\
{\
	/*lint --e{*} */\
	PVOID bmlocal244_my_ptr;\
	UINT bmlocal245_my_bitoff;\
	BM_DilloTimeStamp_leastSignificant_GET_POS( base_ptr, bmlocal244_my_ptr, bmlocal245_my_bitoff );\
	if( BMI_MACHINE_ARM_LITTLE == BMI_MACHINE_VALUE )\
	{\
		BMI_32BIT_CLEAR_ASSIGN_TYPE( BMI_GET_16BIT_PTR_CONTENTS( BMI_PTR_TO_NUMERIC_CAST(bmlocal244_my_ptr) ), (in_val), 0, 0, 16, UINT16 );\
	}\
	else if( BMI_MACHINE_INTEL_LITTLE == BMI_MACHINE_VALUE )\
	{\
		BMI_32BIT_CLEAR_ASSIGN_TYPE( BMI_GET_16BIT_PTR_CONTENTS( BMI_PTR_TO_NUMERIC_CAST(bmlocal244_my_ptr) ), (in_val), 0, 0, 16, UINT16 );\
	}\
	else\
	{\
		BMI_GENERIC_32BIT_LITTLE_SET( bmlocal244_my_ptr, bmlocal245_my_bitoff, 16, in_val, 0xFFFFFFFF );\
	}\
}

// DilloTimeStamp_leastSignificant: IS_DEFAULT accessor is not defined because no default value was specified.
// DilloTimeStamp_leastSignificant: SET_DEFAULT accessor is not defined because no default value was specified.
// DilloTimeStamp_leastSignificant: IS_RESET accessor is not defined because no reset value was specified.
// DilloTimeStamp_leastSignificant: SET_RESET accessor is not defined because no reset value was specified.
// DilloTimeStamp_leastSignificant: CLEAR accessor is not defined because of incompatible access rights. Specified: RW Required: W1C, WO1C.
// DilloTimeStamp_leastSignificant: SET(W1S) accessor is not defined because of incompatible access rights. Specified: RW Required: W1S, WO1S.
#define BM_DilloTimeStamp_leastSignificant_DUMP_DEPTH( base_ptr, depth )\
{\
	/*lint --e{*} */\
	UINT16 bmlocal246_out_val;\
	BM_DilloTimeStamp_leastSignificant_GET( base_ptr, bmlocal246_out_val );\
	/*lint -e(571) */\
	BMI_FORMAT_DUMP(depth, "leastSignificant", 16, (UINT)(bmlocal246_out_val), "%d", 1);\
}

#define BM_DilloTimeStamp_leastSignificant_DUMP( base_ptr )\
{\
	/*lint --e{*} */\
	BM_DilloTimeStamp_leastSignificant_DUMP_DEPTH( base_ptr, 0 );\
}

#define BM_DilloTimeStamp_leastSignificant_INCREMENT( base_ptr )\
{\
	/*lint --e{*} */\
	PVOID bmlocal247_my_ptr;\
	UINT bmlocal248_my_bitoff;\
	BM_DilloTimeStamp_leastSignificant_GET_POS( base_ptr, bmlocal247_my_ptr, bmlocal248_my_bitoff );\
	(*((UINT16*)bmlocal247_my_ptr))++;\
	BMI_UNUSED_VAR( bmlocal248_my_bitoff );\
}

// DilloTimeStamp_leastSignificant: Validation accessors are not defined because validation condition was not specified.
#define BM_DilloTimeStamp_leastSignificant_GET_BYTES_SIZE( base_ptr, out_bytes )\
{\
	/*lint --e{*} */\
	UINT bmlocal249_tmp_bits;\
	BM_DilloTimeStamp_leastSignificant_GET_SIZE( base_ptr, out_bytes, bmlocal249_tmp_bits );\
	BMI_ROUND_UP_1BYTES( out_bytes, bmlocal249_tmp_bits );\
}

#define BM_DilloTimeStamp_leastSignificant_BYTES_SIZE 2

#define BM_DilloTimeStamp_mostSignificant_GET_POS( base_ptr, out_ptr, out_bitoff )\
{\
	/*lint --e{*} */\
	UINT bmlocal252_acc_bytes;\
	UINT bmlocal253_acc_bits;\
	out_ptr = base_ptr;\
	out_bitoff = 0;\
	bmlocal252_acc_bytes = 2;\
	bmlocal253_acc_bits = 0;\
	BMI_ADD_ASSIGN_PTR( out_ptr, bmlocal252_acc_bytes );\
	out_bitoff += bmlocal253_acc_bits;\
}

#define BM_DilloTimeStamp_mostSignificant_GET_POS_ALIGNED( base_ptr, out_ptr )\
{\
	/*lint --e{*} */\
	UINT bmlocal254_tmp_bitoff;\
	BM_DilloTimeStamp_mostSignificant_GET_POS( base_ptr, out_ptr, bmlocal254_tmp_bitoff );\
	BMI_NORMALIZE_BITOFF(out_ptr, bmlocal254_tmp_bitoff);\
}

#define BM_DilloTimeStamp_mostSignificant_POS_ALIGNED 2

// Alignment of DilloTimeStamp_mostSignificant: accumulated=(0,0, ABA=2), parent.base=(0,0, ABA=2)
#define BM_DilloTimeStamp_mostSignificant_GET_SIZE( base_ptr, out_bytes, out_bits )\
{\
	/*lint --e{*} */\
	out_bytes = 2;\
	out_bits = 0;\
	BMI_UNUSED_VAR( base_ptr );\
}

#define BM_DilloTimeStamp_mostSignificant_GET( base_ptr, out_val )\
{\
	/*lint --e{*} */\
	PVOID bmlocal255_my_ptr;\
	UINT bmlocal256_my_bitoff;\
	BM_DilloTimeStamp_mostSignificant_GET_POS( base_ptr, bmlocal255_my_ptr, bmlocal256_my_bitoff );\
	if( BMI_MACHINE_ARM_LITTLE == BMI_MACHINE_VALUE )\
	{\
		(out_val) = (UINT16)BMI_32BIT_EXTRACT( (BMI_GET_16BIT_PTR_CONTENTS( BMI_PTR_TO_NUMERIC_CAST(bmlocal255_my_ptr)) ), 0, 16, 0);\
	}\
	else if( BMI_MACHINE_INTEL_LITTLE == BMI_MACHINE_VALUE )\
	{\
		(out_val) = (UINT16)BMI_32BIT_EXTRACT( (BMI_GET_16BIT_PTR_CONTENTS( BMI_PTR_TO_NUMERIC_CAST(bmlocal255_my_ptr)) ), 0, 16, 0);\
	}\
	else\
	{\
		BMI_GENERIC_32BIT_LITTLE_GET( bmlocal255_my_ptr, bmlocal256_my_bitoff, 16, UINT16, out_val, 0xFFFFFFFF );\
	}\
}

BMI_INLINE UINT16 BM_INLINE_DilloTimeStamp_mostSignificant_GET(PVOID base_ptr)
{
	/*lint --e{*} */
	UINT16 bmlocal257_tmp_var;
	BM_DilloTimeStamp_mostSignificant_GET( base_ptr, bmlocal257_tmp_var );
	return bmlocal257_tmp_var;
}

#define BM_DilloTimeStamp_mostSignificant_SET( base_ptr, in_val )\
{\
	/*lint --e{*} */\
	PVOID bmlocal258_my_ptr;\
	UINT bmlocal259_my_bitoff;\
	BM_DilloTimeStamp_mostSignificant_GET_POS( base_ptr, bmlocal258_my_ptr, bmlocal259_my_bitoff );\
	if( BMI_MACHINE_ARM_LITTLE == BMI_MACHINE_VALUE )\
	{\
		BMI_32BIT_CLEAR_ASSIGN_TYPE( BMI_GET_16BIT_PTR_CONTENTS( BMI_PTR_TO_NUMERIC_CAST(bmlocal258_my_ptr) ), (in_val), 0, 0, 16, UINT16 );\
	}\
	else if( BMI_MACHINE_INTEL_LITTLE == BMI_MACHINE_VALUE )\
	{\
		BMI_32BIT_CLEAR_ASSIGN_TYPE( BMI_GET_16BIT_PTR_CONTENTS( BMI_PTR_TO_NUMERIC_CAST(bmlocal258_my_ptr) ), (in_val), 0, 0, 16, UINT16 );\
	}\
	else\
	{\
		BMI_GENERIC_32BIT_LITTLE_SET( bmlocal258_my_ptr, bmlocal259_my_bitoff, 16, in_val, 0xFFFFFFFF );\
	}\
}

// DilloTimeStamp_mostSignificant: IS_DEFAULT accessor is not defined because no default value was specified.
// DilloTimeStamp_mostSignificant: SET_DEFAULT accessor is not defined because no default value was specified.
// DilloTimeStamp_mostSignificant: IS_RESET accessor is not defined because no reset value was specified.
// DilloTimeStamp_mostSignificant: SET_RESET accessor is not defined because no reset value was specified.
// DilloTimeStamp_mostSignificant: CLEAR accessor is not defined because of incompatible access rights. Specified: RW Required: W1C, WO1C.
// DilloTimeStamp_mostSignificant: SET(W1S) accessor is not defined because of incompatible access rights. Specified: RW Required: W1S, WO1S.
#define BM_DilloTimeStamp_mostSignificant_DUMP_DEPTH( base_ptr, depth )\
{\
	/*lint --e{*} */\
	UINT16 bmlocal260_out_val;\
	BM_DilloTimeStamp_mostSignificant_GET( base_ptr, bmlocal260_out_val );\
	/*lint -e(571) */\
	BMI_FORMAT_DUMP(depth, "mostSignificant", 16, (UINT)(bmlocal260_out_val), "%d", 1);\
}

#define BM_DilloTimeStamp_mostSignificant_DUMP( base_ptr )\
{\
	/*lint --e{*} */\
	BM_DilloTimeStamp_mostSignificant_DUMP_DEPTH( base_ptr, 0 );\
}

#define BM_DilloTimeStamp_mostSignificant_INCREMENT( base_ptr )\
{\
	/*lint --e{*} */\
	PVOID bmlocal261_my_ptr;\
	UINT bmlocal262_my_bitoff;\
	BM_DilloTimeStamp_mostSignificant_GET_POS( base_ptr, bmlocal261_my_ptr, bmlocal262_my_bitoff );\
	(*((UINT16*)bmlocal261_my_ptr))++;\
	BMI_UNUSED_VAR( bmlocal262_my_bitoff );\
}

// DilloTimeStamp_mostSignificant: Validation accessors are not defined because validation condition was not specified.
#define BM_DilloTimeStamp_mostSignificant_GET_BYTES_SIZE( base_ptr, out_bytes )\
{\
	/*lint --e{*} */\
	UINT bmlocal263_tmp_bits;\
	BM_DilloTimeStamp_mostSignificant_GET_SIZE( base_ptr, out_bytes, bmlocal263_tmp_bits );\
	BMI_ROUND_UP_1BYTES( out_bytes, bmlocal263_tmp_bits );\
}

#define BM_DilloTimeStamp_mostSignificant_BYTES_SIZE 2

#define BM_DilloTimeStamp_GET_SIZE( base_ptr, out_bytes, out_bits )\
{\
	/*lint --e{*} */\
	out_bytes = 4;\
	out_bits = 0;\
	BMI_UNUSED_VAR( base_ptr );\
}

#define BM_DilloTimeStamp_GET_BYTES_SIZE( base_ptr, out_bytes )\
{\
	/*lint --e{*} */\
	UINT bmlocal266_tmp_bits;\
	BM_DilloTimeStamp_GET_SIZE( base_ptr, out_bytes, bmlocal266_tmp_bits );\
	BMI_ROUND_UP_1BYTES( out_bytes, bmlocal266_tmp_bits );\
}

#define BM_DilloTimeStamp_BYTES_SIZE 4

#define BM_DilloTimeStamp_DUMP_DEPTH( base_ptr, depth )\
{\
	/*lint --e{*} */\
	BMI_FORMAT_NONVALUE_DUMP(depth, "DilloTimeStamp", 1);\
	BM_DilloTimeStamp_leastSignificant_DUMP_DEPTH( base_ptr, (depth + 1) );\
	BM_DilloTimeStamp_mostSignificant_DUMP_DEPTH( base_ptr, (depth + 1) );\
	BMI_UNUSED_VAR( base_ptr );\
}

#define BM_DilloTimeStamp_DUMP( base_ptr )\
{\
	/*lint --e{*} */\
	BM_DilloTimeStamp_DUMP_DEPTH( base_ptr, 0 );\
}


typedef UINT8 DilloRunTimeMsgData[2];

// COMPOSITE: Full name: 'DilloRunTimeMsgData' Type: 'DilloRunTimeMsgData', Top-level, Non-instance, No bitoff root
#define BM_DilloRunTimeMsgData_status_GET_POS( base_ptr, out_ptr, out_bitoff )\
{\
	/*lint --e{*} */\
	out_ptr = base_ptr;\
	out_bitoff = 0;\
}

#define BM_DilloRunTimeMsgData_status_GET_POS_ALIGNED( base_ptr, out_ptr )\
{\
	/*lint --e{*} */\
	UINT bmlocal267_tmp_bitoff;\
	BM_DilloRunTimeMsgData_status_GET_POS( base_ptr, out_ptr, bmlocal267_tmp_bitoff );\
	BMI_NORMALIZE_BITOFF(out_ptr, bmlocal267_tmp_bitoff);\
}

#define BM_DilloRunTimeMsgData_status_POS_ALIGNED 0

// COMPOSITE: Full name: 'DilloRunTimeMsgData_status' Type: 'DilloMsgStatus', Inner, Non-instance, No bitoff root
#define BM_DilloRunTimeMsgData_status_msgID_GET_POS( base_ptr, out_ptr, out_bitoff )\
{\
	/*lint --e{*} */\
	PVOID bmlocal268_parent_out_ptr;\
	BM_DilloRunTimeMsgData_status_GET_POS( base_ptr, bmlocal268_parent_out_ptr, out_bitoff );\
	out_ptr = bmlocal268_parent_out_ptr;\
}

#define BM_DilloRunTimeMsgData_status_msgID_GET_POS_ALIGNED( base_ptr, out_ptr )\
{\
	/*lint --e{*} */\
	UINT bmlocal269_tmp_bitoff;\
	BM_DilloRunTimeMsgData_status_msgID_GET_POS( base_ptr, out_ptr, bmlocal269_tmp_bitoff );\
	BMI_NORMALIZE_BITOFF(out_ptr, bmlocal269_tmp_bitoff);\
}

#define BM_DilloRunTimeMsgData_status_msgID_POS_ALIGNED 0

// Alignment of DilloRunTimeMsgData_status_msgID: accumulated=(0,0, ABA=2), parent.base=(0,0, ABA=2)
#define BM_DilloRunTimeMsgData_status_msgID_GET_SIZE( base_ptr, out_bytes, out_bits )\
{\
	/*lint --e{*} */\
	out_bytes = 1;\
	out_bits = 4;\
	BMI_UNUSED_VAR( base_ptr );\
}

#define BM_DilloRunTimeMsgData_status_msgID_GET( base_ptr, out_val )\
{\
	/*lint --e{*} */\
	PVOID bmlocal270_my_ptr;\
	UINT bmlocal271_my_bitoff;\
	BM_DilloRunTimeMsgData_status_msgID_GET_POS( base_ptr, bmlocal270_my_ptr, bmlocal271_my_bitoff );\
	BMI_GENERIC_16BIT_LITTLE_GET_VOLATILE_NOSPAN( bmlocal270_my_ptr, bmlocal271_my_bitoff, 12, UINT16, out_val, 0x00000000 );\
}

BMI_INLINE UINT16 BM_INLINE_DilloRunTimeMsgData_status_msgID_GET(PVOID base_ptr)
{
	/*lint --e{*} */
	UINT16 bmlocal272_tmp_var;
	BM_DilloRunTimeMsgData_status_msgID_GET( base_ptr, bmlocal272_tmp_var );
	return bmlocal272_tmp_var;
}

#define BM_DilloRunTimeMsgData_status_msgID_SET( base_ptr, in_val )\
{\
	/*lint --e{*} */\
	PVOID bmlocal273_my_ptr;\
	UINT bmlocal274_my_bitoff;\
	BM_DilloRunTimeMsgData_status_msgID_GET_POS( base_ptr, bmlocal273_my_ptr, bmlocal274_my_bitoff );\
	BMI_GENERIC_16BIT_LITTLE_SET_VOLATILE_NOSPAN( bmlocal273_my_ptr, bmlocal274_my_bitoff, 12, in_val, 0x00000000 );\
}

// DilloRunTimeMsgData_status_msgID: IS_DEFAULT accessor is not defined because no default value was specified.
// DilloRunTimeMsgData_status_msgID: SET_DEFAULT accessor is not defined because no default value was specified.
// DilloRunTimeMsgData_status_msgID: IS_RESET accessor is not defined because no reset value was specified.
// DilloRunTimeMsgData_status_msgID: SET_RESET accessor is not defined because no reset value was specified.
// DilloRunTimeMsgData_status_msgID: CLEAR accessor is not defined because of incompatible access rights. Specified: RW Required: W1C, WO1C.
// DilloRunTimeMsgData_status_msgID: SET(W1S) accessor is not defined because of incompatible access rights. Specified: RW Required: W1S, WO1S.
#define BM_DilloRunTimeMsgData_status_msgID_DUMP_DEPTH( base_ptr, depth )\
{\
	/*lint --e{*} */\
	UINT16 bmlocal275_out_val;\
	BM_DilloRunTimeMsgData_status_msgID_GET( base_ptr, bmlocal275_out_val );\
	/*lint -e(571) */\
	BMI_FORMAT_DUMP(depth, "msgID", 12, (UINT)(bmlocal275_out_val), "%d", 1);\
}

#define BM_DilloRunTimeMsgData_status_msgID_DUMP( base_ptr )\
{\
	/*lint --e{*} */\
	BM_DilloRunTimeMsgData_status_msgID_DUMP_DEPTH( base_ptr, 0 );\
}

#define BM_DilloRunTimeMsgData_status_msgID_INCREMENT( base_ptr )\
{\
	/*lint --e{*} */\
	UINT16 bmlocal276_val;\
	BM_DilloRunTimeMsgData_status_msgID_GET( base_ptr, bmlocal276_val );\
	(bmlocal276_val)++;\
	BM_DilloRunTimeMsgData_status_msgID_SET( base_ptr, bmlocal276_val );\
}

// DilloRunTimeMsgData_status_msgID: Validation accessors are not defined because validation condition was not specified.
#define BM_DilloRunTimeMsgData_status_msgID_GET_BYTES_SIZE( base_ptr, out_bytes )\
{\
	/*lint --e{*} */\
	UINT bmlocal277_tmp_bits;\
	BM_DilloRunTimeMsgData_status_msgID_GET_SIZE( base_ptr, out_bytes, bmlocal277_tmp_bits );\
	BMI_ROUND_UP_1BYTES( out_bytes, bmlocal277_tmp_bits );\
}

#define BM_DilloRunTimeMsgData_status_msgID_BYTES_SIZE 2

#define BM_DilloRunTimeMsgData_status_numOfParams_GET_POS( base_ptr, out_ptr, out_bitoff )\
{\
	/*lint --e{*} */\
	UINT bmlocal280_acc_bytes;\
	UINT bmlocal281_acc_bits;\
	PVOID bmlocal282_parent_out_ptr;\
	BM_DilloRunTimeMsgData_status_GET_POS( base_ptr, bmlocal282_parent_out_ptr, out_bitoff );\
	out_ptr = bmlocal282_parent_out_ptr;\
	bmlocal280_acc_bytes = 1;\
	bmlocal281_acc_bits = 4;\
	BMI_ADD_ASSIGN_PTR( out_ptr, bmlocal280_acc_bytes );\
	out_bitoff += bmlocal281_acc_bits;\
}

// Alignment of DilloRunTimeMsgData_status_numOfParams: accumulated=(1,4, ABA=2), parent.base=(0,0, ABA=2)
#define BM_DilloRunTimeMsgData_status_numOfParams_GET_SIZE( base_ptr, out_bytes, out_bits )\
{\
	/*lint --e{*} */\
	out_bytes = 0;\
	out_bits = 2;\
	BMI_UNUSED_VAR( base_ptr );\
}

#define BM_DilloRunTimeMsgData_status_numOfParams_GET( base_ptr, out_val )\
{\
	/*lint --e{*} */\
	PVOID bmlocal283_my_ptr;\
	UINT bmlocal284_my_bitoff;\
	BM_DilloRunTimeMsgData_status_numOfParams_GET_POS( base_ptr, bmlocal283_my_ptr, bmlocal284_my_bitoff );\
	BMI_GENERIC_16BIT_LITTLE_GET_VOLATILE_NOSPAN( bmlocal283_my_ptr, bmlocal284_my_bitoff, 2, UINT16, out_val, 0x00000001 );\
}

BMI_INLINE UINT16 BM_INLINE_DilloRunTimeMsgData_status_numOfParams_GET(PVOID base_ptr)
{
	/*lint --e{*} */
	UINT16 bmlocal285_tmp_var;
	BM_DilloRunTimeMsgData_status_numOfParams_GET( base_ptr, bmlocal285_tmp_var );
	return bmlocal285_tmp_var;
}

#define BM_DilloRunTimeMsgData_status_numOfParams_SET( base_ptr, in_val )\
{\
	/*lint --e{*} */\
	PVOID bmlocal286_my_ptr;\
	UINT bmlocal287_my_bitoff;\
	BM_DilloRunTimeMsgData_status_numOfParams_GET_POS( base_ptr, bmlocal286_my_ptr, bmlocal287_my_bitoff );\
	BMI_GENERIC_16BIT_LITTLE_SET_VOLATILE_NOSPAN( bmlocal286_my_ptr, bmlocal287_my_bitoff, 2, in_val, 0x00000001 );\
}

// DilloRunTimeMsgData_status_numOfParams: IS_DEFAULT accessor is not defined because no default value was specified.
// DilloRunTimeMsgData_status_numOfParams: SET_DEFAULT accessor is not defined because no default value was specified.
// DilloRunTimeMsgData_status_numOfParams: IS_RESET accessor is not defined because no reset value was specified.
// DilloRunTimeMsgData_status_numOfParams: SET_RESET accessor is not defined because no reset value was specified.
// DilloRunTimeMsgData_status_numOfParams: CLEAR accessor is not defined because of incompatible access rights. Specified: RW Required: W1C, WO1C.
// DilloRunTimeMsgData_status_numOfParams: SET(W1S) accessor is not defined because of incompatible access rights. Specified: RW Required: W1S, WO1S.
#define BM_DilloRunTimeMsgData_status_numOfParams_DUMP_DEPTH( base_ptr, depth )\
{\
	/*lint --e{*} */\
	UINT16 bmlocal288_out_val;\
	BM_DilloRunTimeMsgData_status_numOfParams_GET( base_ptr, bmlocal288_out_val );\
	/*lint -e(571) */\
	BMI_FORMAT_DUMP(depth, "numOfParams", 2, (UINT)(bmlocal288_out_val), "%d", 1);\
}

#define BM_DilloRunTimeMsgData_status_numOfParams_DUMP( base_ptr )\
{\
	/*lint --e{*} */\
	BM_DilloRunTimeMsgData_status_numOfParams_DUMP_DEPTH( base_ptr, 0 );\
}

#define BM_DilloRunTimeMsgData_status_numOfParams_INCREMENT( base_ptr )\
{\
	/*lint --e{*} */\
	UINT16 bmlocal289_val;\
	BM_DilloRunTimeMsgData_status_numOfParams_GET( base_ptr, bmlocal289_val );\
	(bmlocal289_val)++;\
	BM_DilloRunTimeMsgData_status_numOfParams_SET( base_ptr, bmlocal289_val );\
}

// DilloRunTimeMsgData_status_numOfParams: Validation accessors are not defined because validation condition was not specified.
#define BM_DilloRunTimeMsgData_status_numOfParams_GET_BYTES_SIZE( base_ptr, out_bytes )\
{\
	/*lint --e{*} */\
	UINT bmlocal290_tmp_bits;\
	BM_DilloRunTimeMsgData_status_numOfParams_GET_SIZE( base_ptr, out_bytes, bmlocal290_tmp_bits );\
	BMI_ROUND_UP_1BYTES( out_bytes, bmlocal290_tmp_bits );\
}

#define BM_DilloRunTimeMsgData_status_numOfParams_BYTES_SIZE 1

#define BM_DilloRunTimeMsgData_status_bufferOverrun_GET_POS( base_ptr, out_ptr, out_bitoff )\
{\
	/*lint --e{*} */\
	UINT bmlocal293_acc_bytes;\
	UINT bmlocal294_acc_bits;\
	PVOID bmlocal295_parent_out_ptr;\
	BM_DilloRunTimeMsgData_status_GET_POS( base_ptr, bmlocal295_parent_out_ptr, out_bitoff );\
	out_ptr = bmlocal295_parent_out_ptr;\
	bmlocal293_acc_bytes = 1;\
	bmlocal294_acc_bits = 6;\
	BMI_ADD_ASSIGN_PTR( out_ptr, bmlocal293_acc_bytes );\
	out_bitoff += bmlocal294_acc_bits;\
}

// Alignment of DilloRunTimeMsgData_status_bufferOverrun: accumulated=(1,6, ABA=2), parent.base=(0,0, ABA=2)
#define BM_DilloRunTimeMsgData_status_bufferOverrun_GET_SIZE( base_ptr, out_bytes, out_bits )\
{\
	/*lint --e{*} */\
	out_bytes = 0;\
	out_bits = 1;\
	BMI_UNUSED_VAR( base_ptr );\
}

#define BM_DilloRunTimeMsgData_status_bufferOverrun_GET( base_ptr, out_val )\
{\
	/*lint --e{*} */\
	PVOID bmlocal296_my_ptr;\
	UINT bmlocal297_my_bitoff;\
	BM_DilloRunTimeMsgData_status_bufferOverrun_GET_POS( base_ptr, bmlocal296_my_ptr, bmlocal297_my_bitoff );\
	BMI_GENERIC_16BIT_LITTLE_GET_VOLATILE_NOSPAN( bmlocal296_my_ptr, bmlocal297_my_bitoff, 1, UINT16, out_val, 0x00000001 );\
}

BMI_INLINE UINT16 BM_INLINE_DilloRunTimeMsgData_status_bufferOverrun_GET(PVOID base_ptr)
{
	/*lint --e{*} */
	UINT16 bmlocal298_tmp_var;
	BM_DilloRunTimeMsgData_status_bufferOverrun_GET( base_ptr, bmlocal298_tmp_var );
	return bmlocal298_tmp_var;
}

#define BM_DilloRunTimeMsgData_status_bufferOverrun_SET( base_ptr, in_val )\
{\
	/*lint --e{*} */\
	PVOID bmlocal299_my_ptr;\
	UINT bmlocal300_my_bitoff;\
	BM_DilloRunTimeMsgData_status_bufferOverrun_GET_POS( base_ptr, bmlocal299_my_ptr, bmlocal300_my_bitoff );\
	BMI_GENERIC_16BIT_LITTLE_SET_VOLATILE_NOSPAN( bmlocal299_my_ptr, bmlocal300_my_bitoff, 1, in_val, 0x00000001 );\
}

// DilloRunTimeMsgData_status_bufferOverrun: IS_DEFAULT accessor is not defined because no default value was specified.
// DilloRunTimeMsgData_status_bufferOverrun: SET_DEFAULT accessor is not defined because no default value was specified.
// DilloRunTimeMsgData_status_bufferOverrun: IS_RESET accessor is not defined because no reset value was specified.
// DilloRunTimeMsgData_status_bufferOverrun: SET_RESET accessor is not defined because no reset value was specified.
// DilloRunTimeMsgData_status_bufferOverrun: CLEAR accessor is not defined because of incompatible access rights. Specified: RW Required: W1C, WO1C.
// DilloRunTimeMsgData_status_bufferOverrun: SET(W1S) accessor is not defined because of incompatible access rights. Specified: RW Required: W1S, WO1S.
#define BM_DilloRunTimeMsgData_status_bufferOverrun_DUMP_DEPTH( base_ptr, depth )\
{\
	/*lint --e{*} */\
	UINT16 bmlocal301_out_val;\
	BM_DilloRunTimeMsgData_status_bufferOverrun_GET( base_ptr, bmlocal301_out_val );\
	/*lint -e(571) */\
	BMI_FORMAT_DUMP(depth, "bufferOverrun", 1, (UINT)(bmlocal301_out_val), "%d", 1);\
}

#define BM_DilloRunTimeMsgData_status_bufferOverrun_DUMP( base_ptr )\
{\
	/*lint --e{*} */\
	BM_DilloRunTimeMsgData_status_bufferOverrun_DUMP_DEPTH( base_ptr, 0 );\
}

#define BM_DilloRunTimeMsgData_status_bufferOverrun_INCREMENT( base_ptr )\
{\
	/*lint --e{*} */\
	UINT16 bmlocal302_val;\
	BM_DilloRunTimeMsgData_status_bufferOverrun_GET( base_ptr, bmlocal302_val );\
	(bmlocal302_val)++;\
	BM_DilloRunTimeMsgData_status_bufferOverrun_SET( base_ptr, bmlocal302_val );\
}

// DilloRunTimeMsgData_status_bufferOverrun: Validation accessors are not defined because validation condition was not specified.
#define BM_DilloRunTimeMsgData_status_bufferOverrun_GET_BYTES_SIZE( base_ptr, out_bytes )\
{\
	/*lint --e{*} */\
	UINT bmlocal303_tmp_bits;\
	BM_DilloRunTimeMsgData_status_bufferOverrun_GET_SIZE( base_ptr, out_bytes, bmlocal303_tmp_bits );\
	BMI_ROUND_UP_1BYTES( out_bytes, bmlocal303_tmp_bits );\
}

#define BM_DilloRunTimeMsgData_status_bufferOverrun_BYTES_SIZE 1

#define BM_DilloRunTimeMsgData_status_timeStampPresent_GET_POS( base_ptr, out_ptr, out_bitoff )\
{\
	/*lint --e{*} */\
	UINT bmlocal306_acc_bytes;\
	UINT bmlocal307_acc_bits;\
	PVOID bmlocal308_parent_out_ptr;\
	BM_DilloRunTimeMsgData_status_GET_POS( base_ptr, bmlocal308_parent_out_ptr, out_bitoff );\
	out_ptr = bmlocal308_parent_out_ptr;\
	bmlocal306_acc_bytes = 1;\
	bmlocal307_acc_bits = 7;\
	BMI_ADD_ASSIGN_PTR( out_ptr, bmlocal306_acc_bytes );\
	out_bitoff += bmlocal307_acc_bits;\
}

// Alignment of DilloRunTimeMsgData_status_timeStampPresent: accumulated=(1,7, ABA=2), parent.base=(0,0, ABA=2)
#define BM_DilloRunTimeMsgData_status_timeStampPresent_GET_SIZE( base_ptr, out_bytes, out_bits )\
{\
	/*lint --e{*} */\
	out_bytes = 0;\
	out_bits = 1;\
	BMI_UNUSED_VAR( base_ptr );\
}

#define BM_DilloRunTimeMsgData_status_timeStampPresent_GET( base_ptr, out_val )\
{\
	/*lint --e{*} */\
	PVOID bmlocal309_my_ptr;\
	UINT bmlocal310_my_bitoff;\
	BM_DilloRunTimeMsgData_status_timeStampPresent_GET_POS( base_ptr, bmlocal309_my_ptr, bmlocal310_my_bitoff );\
	BMI_GENERIC_16BIT_LITTLE_GET_VOLATILE_NOSPAN( bmlocal309_my_ptr, bmlocal310_my_bitoff, 1, UINT16, out_val, 0x00000001 );\
}

BMI_INLINE UINT16 BM_INLINE_DilloRunTimeMsgData_status_timeStampPresent_GET(PVOID base_ptr)
{
	/*lint --e{*} */
	UINT16 bmlocal311_tmp_var;
	BM_DilloRunTimeMsgData_status_timeStampPresent_GET( base_ptr, bmlocal311_tmp_var );
	return bmlocal311_tmp_var;
}

#define BM_DilloRunTimeMsgData_status_timeStampPresent_SET( base_ptr, in_val )\
{\
	/*lint --e{*} */\
	PVOID bmlocal312_my_ptr;\
	UINT bmlocal313_my_bitoff;\
	BM_DilloRunTimeMsgData_status_timeStampPresent_GET_POS( base_ptr, bmlocal312_my_ptr, bmlocal313_my_bitoff );\
	BMI_GENERIC_16BIT_LITTLE_SET_VOLATILE_NOSPAN( bmlocal312_my_ptr, bmlocal313_my_bitoff, 1, in_val, 0x00000001 );\
}

// DilloRunTimeMsgData_status_timeStampPresent: IS_DEFAULT accessor is not defined because no default value was specified.
// DilloRunTimeMsgData_status_timeStampPresent: SET_DEFAULT accessor is not defined because no default value was specified.
// DilloRunTimeMsgData_status_timeStampPresent: IS_RESET accessor is not defined because no reset value was specified.
// DilloRunTimeMsgData_status_timeStampPresent: SET_RESET accessor is not defined because no reset value was specified.
// DilloRunTimeMsgData_status_timeStampPresent: CLEAR accessor is not defined because of incompatible access rights. Specified: RW Required: W1C, WO1C.
// DilloRunTimeMsgData_status_timeStampPresent: SET(W1S) accessor is not defined because of incompatible access rights. Specified: RW Required: W1S, WO1S.
#define BM_DilloRunTimeMsgData_status_timeStampPresent_DUMP_DEPTH( base_ptr, depth )\
{\
	/*lint --e{*} */\
	UINT16 bmlocal314_out_val;\
	BM_DilloRunTimeMsgData_status_timeStampPresent_GET( base_ptr, bmlocal314_out_val );\
	/*lint -e(571) */\
	BMI_FORMAT_DUMP(depth, "timeStampPresent", 1, (UINT)(bmlocal314_out_val), "%d", 1);\
}

#define BM_DilloRunTimeMsgData_status_timeStampPresent_DUMP( base_ptr )\
{\
	/*lint --e{*} */\
	BM_DilloRunTimeMsgData_status_timeStampPresent_DUMP_DEPTH( base_ptr, 0 );\
}

#define BM_DilloRunTimeMsgData_status_timeStampPresent_INCREMENT( base_ptr )\
{\
	/*lint --e{*} */\
	UINT16 bmlocal315_val;\
	BM_DilloRunTimeMsgData_status_timeStampPresent_GET( base_ptr, bmlocal315_val );\
	(bmlocal315_val)++;\
	BM_DilloRunTimeMsgData_status_timeStampPresent_SET( base_ptr, bmlocal315_val );\
}

// DilloRunTimeMsgData_status_timeStampPresent: Validation accessors are not defined because validation condition was not specified.
#define BM_DilloRunTimeMsgData_status_timeStampPresent_GET_BYTES_SIZE( base_ptr, out_bytes )\
{\
	/*lint --e{*} */\
	UINT bmlocal316_tmp_bits;\
	BM_DilloRunTimeMsgData_status_timeStampPresent_GET_SIZE( base_ptr, out_bytes, bmlocal316_tmp_bits );\
	BMI_ROUND_UP_1BYTES( out_bytes, bmlocal316_tmp_bits );\
}

#define BM_DilloRunTimeMsgData_status_timeStampPresent_BYTES_SIZE 1

#define BM_DilloRunTimeMsgData_status_GET_SIZE( base_ptr, out_bytes, out_bits )\
{\
	/*lint --e{*} */\
	out_bytes = 2;\
	out_bits = 0;\
	BMI_UNUSED_VAR( base_ptr );\
}

#define BM_DilloRunTimeMsgData_status_GET_BYTES_SIZE( base_ptr, out_bytes )\
{\
	/*lint --e{*} */\
	UINT bmlocal319_tmp_bits;\
	BM_DilloRunTimeMsgData_status_GET_SIZE( base_ptr, out_bytes, bmlocal319_tmp_bits );\
	BMI_ROUND_UP_1BYTES( out_bytes, bmlocal319_tmp_bits );\
}

#define BM_DilloRunTimeMsgData_status_BYTES_SIZE 2

BMI_INLINE UINT BM_INLINE_DilloRunTimeMsgData_status_GET_SIZE()
{
	/*lint --e{*} */
	return 2;
}

#define BM_DilloRunTimeMsgData_status_GET( base_ptr, out_val )\
{\
	/*lint --e{*} */\
	PVOID bmlocal320_my_ptr;\
	UINT bmlocal321_my_bitoff;\
	BM_DilloRunTimeMsgData_status_msgID_GET_POS( base_ptr, bmlocal320_my_ptr, bmlocal321_my_bitoff );\
	BMI_GENERIC_16BIT_LITTLE_GET_VOLATILE_NOSPAN( bmlocal320_my_ptr, bmlocal321_my_bitoff, 16, UINT16, out_val, 0x00000000 );\
}

BMI_INLINE UINT16 BM_INLINE_DilloRunTimeMsgData_status_GET(PVOID base_ptr)
{
	/*lint --e{*} */
	UINT16 bmlocal322_tmp_var;
	BM_DilloRunTimeMsgData_status_GET( base_ptr, bmlocal322_tmp_var );
	return bmlocal322_tmp_var;
}

#define BM_DilloRunTimeMsgData_status_SET( base_ptr, in_val )\
{\
	/*lint --e{*} */\
	PVOID bmlocal323_my_ptr;\
	UINT bmlocal324_my_bitoff;\
	BM_DilloRunTimeMsgData_status_msgID_GET_POS( base_ptr, bmlocal323_my_ptr, bmlocal324_my_bitoff );\
	BMI_GENERIC_16BIT_LITTLE_SET_VOLATILE_NOSPAN( bmlocal323_my_ptr, bmlocal324_my_bitoff, 16, in_val, 0x00000000 );\
}

// DilloRunTimeMsgData_status: IS_DEFAULT accessor is not defined because no default value was specified.
// DilloRunTimeMsgData_status: SET_DEFAULT accessor is not defined because no default value was specified.
// DilloRunTimeMsgData_status: IS_RESET accessor is not defined because no reset value was specified.
// DilloRunTimeMsgData_status: SET_RESET accessor is not defined because no reset value was specified.
#define BM_DilloRunTimeMsgData_status_GET_ALL( base_ptr, param_msgID, param_numOfParams, param_bufferOverrun, param_timeStampPresent )\
{\
	/*lint --e{*} */\
	UINT16 bmlocal325_val;\
	BM_DilloRunTimeMsgData_status_GET( base_ptr, bmlocal325_val );\
	param_msgID = (UINT16)(((bmlocal325_val&BM_DilloMsgStatus_msgID_SHIFTED_MASK) >> BM_DilloMsgStatus_msgID_OFFSET));\
	param_numOfParams = (UINT8)(((bmlocal325_val&BM_DilloMsgStatus_numOfParams_SHIFTED_MASK) >> BM_DilloMsgStatus_numOfParams_OFFSET));\
	param_bufferOverrun = (UINT8)(((bmlocal325_val&BM_DilloMsgStatus_bufferOverrun_SHIFTED_MASK) >> BM_DilloMsgStatus_bufferOverrun_OFFSET));\
	param_timeStampPresent = (UINT8)(((bmlocal325_val&BM_DilloMsgStatus_timeStampPresent_SHIFTED_MASK) >> BM_DilloMsgStatus_timeStampPresent_OFFSET));\
}

#define BM_DilloRunTimeMsgData_status_SET_ALL( base_ptr, param_msgID, param_numOfParams, param_bufferOverrun, param_timeStampPresent )\
{\
	/*lint --e{*} */\
	UINT16 bmlocal326_varToWrite = (UINT16)(((param_msgID&BM_DilloMsgStatus_msgID_MASK) << BM_DilloMsgStatus_msgID_OFFSET) | ((param_numOfParams&BM_DilloMsgStatus_numOfParams_MASK) << BM_DilloMsgStatus_numOfParams_OFFSET) | ((param_bufferOverrun&BM_DilloMsgStatus_bufferOverrun_MASK) << BM_DilloMsgStatus_bufferOverrun_OFFSET) | ((param_timeStampPresent&BM_DilloMsgStatus_timeStampPresent_MASK) << BM_DilloMsgStatus_timeStampPresent_OFFSET));\
	BM_DilloRunTimeMsgData_status_SET( base_ptr, bmlocal326_varToWrite );\
}

#define BM_DilloRunTimeMsgData_status_STRICT_SET_ALL( base_ptr, param_msgID, param_numOfParams, param_bufferOverrun, param_timeStampPresent )\
{\
	/*lint --e{*} */\
	UINT16 bmlocal327_varToWrite = (UINT16)((param_msgID << BM_DilloMsgStatus_msgID_OFFSET) | (param_numOfParams << BM_DilloMsgStatus_numOfParams_OFFSET) | (param_bufferOverrun << BM_DilloMsgStatus_bufferOverrun_OFFSET) | (param_timeStampPresent << BM_DilloMsgStatus_timeStampPresent_OFFSET));\
	BM_DilloRunTimeMsgData_status_SET( base_ptr, bmlocal327_varToWrite );\
}

#define BM_DilloRunTimeMsgData_status_DUMP_DEPTH( base_ptr, depth )\
{\
	/*lint --e{*} */\
	BMI_FORMAT_NONVALUE_DUMP(depth, "status", 1);\
	BM_DilloRunTimeMsgData_status_msgID_DUMP_DEPTH( base_ptr, (depth + 1) );\
	BM_DilloRunTimeMsgData_status_numOfParams_DUMP_DEPTH( base_ptr, (depth + 1) );\
	BM_DilloRunTimeMsgData_status_bufferOverrun_DUMP_DEPTH( base_ptr, (depth + 1) );\
	BM_DilloRunTimeMsgData_status_timeStampPresent_DUMP_DEPTH( base_ptr, (depth + 1) );\
	BMI_UNUSED_VAR( base_ptr );\
}

#define BM_DilloRunTimeMsgData_status_DUMP( base_ptr )\
{\
	/*lint --e{*} */\
	BM_DilloRunTimeMsgData_status_DUMP_DEPTH( base_ptr, 0 );\
}


#define BM_DilloRunTimeMsgData_params_GET_POS( base_ptr, out_ptr, out_bitoff )\
{\
	/*lint --e{*} */\
	UINT bmlocal330_acc_bytes;\
	UINT bmlocal331_acc_bits;\
	out_ptr = base_ptr;\
	out_bitoff = 0;\
	bmlocal330_acc_bytes = 2;\
	bmlocal331_acc_bits = 0;\
	BMI_ADD_ASSIGN_PTR( out_ptr, bmlocal330_acc_bytes );\
	out_bitoff += bmlocal331_acc_bits;\
}

#define BM_DilloRunTimeMsgData_params_GET_POS_ALIGNED( base_ptr, out_ptr )\
{\
	/*lint --e{*} */\
	UINT bmlocal332_tmp_bitoff;\
	BM_DilloRunTimeMsgData_params_GET_POS( base_ptr, out_ptr, bmlocal332_tmp_bitoff );\
	BMI_NORMALIZE_BITOFF(out_ptr, bmlocal332_tmp_bitoff);\
}

#define BM_DilloRunTimeMsgData_params_POS_ALIGNED 2

// ARRAY: DilloRunTimeMsgData_params
#define BM_DilloRunTimeMsgData_params_GET_SIZE( base_ptr, out_bytes, out_bits )\
{\
	/*lint --e{*} */\
	{\
		UINT16 bmlocal333_var0;\
		BM_DilloRunTimeMsgData_status_numOfParams_GET( base_ptr, bmlocal333_var0 );\
		out_bytes = (UINT)(2*(1*bmlocal333_var0));\
	}\
	out_bits = 0;\
	BMI_UNUSED_VAR( base_ptr );\
}

BMI_INLINE UINT BM_INLINE_DilloRunTimeMsgData_params_GET_SIZE(PVOID base_ptr)
{
	/*lint --e{*} */
	UINT bmlocal334_my_bytes;
	UINT bmlocal335_my_bits;
	BM_DilloRunTimeMsgData_params_GET_SIZE( base_ptr, bmlocal334_my_bytes, bmlocal335_my_bits );
	BMI_NORMALIZE_BITSIZE(bmlocal334_my_bytes, bmlocal335_my_bits);
	BMI_UNUSED_VAR( bmlocal335_my_bits );
	return bmlocal334_my_bytes;
}

#define BM_DilloRunTimeMsgData_params_GET_DIMENSION_ELEMENT_COUNT( base_ptr, index, out_element_count )\
{\
	/*lint --e{*} */\
	switch( index )\
	{\
		case (0):\
		{\
			UINT16 bmlocal336_var0;\
			BM_DilloRunTimeMsgData_status_numOfParams_GET( base_ptr, bmlocal336_var0 );\
			out_element_count = (UINT)(bmlocal336_var0);\
		}\
		break;\
		default:\
		out_element_count = 0;\
		break;\
	}\
	BMI_UNUSED_VAR( base_ptr );\
}

#define BM_DilloRunTimeMsgData_params_GET_ELEMENT_POS( base_ptr, idx0, out_ptr, out_bitoff )\
{\
	/*lint --e{*} */\
	PVOID bmlocal337_out_ptr;\
	UINT bmlocal338_out_bitoff;\
	UINT bmlocal339_element_size_bytes;\
	UINT bmlocal340_element_size_bits;\
	BM_DilloRunTimeMsgData_params_GET_POS( base_ptr, bmlocal337_out_ptr, bmlocal338_out_bitoff );\
	bmlocal339_element_size_bytes = 2;\
	bmlocal340_element_size_bits = 0;\
	out_ptr = BMI_NUMBER_TO_PTR_CAST( BMI_PTR_TO_NUMERIC_CAST(bmlocal337_out_ptr) + (idx0) * bmlocal339_element_size_bytes );\
	out_bitoff = bmlocal338_out_bitoff;\
	BMI_UNUSED_VAR( bmlocal340_element_size_bits );\
}

// COMPOSITE: Full name: 'DilloRunTimeMsgData_params' Type: 'Uint16', Inner, Non-instance, No bitoff root
#define BM_DilloRunTimeMsgData_params_value_GET_POS( base_ptr, idx0, out_ptr, out_bitoff )\
{\
	/*lint --e{*} */\
	PVOID bmlocal341_parent_out_ptr;\
	BM_DilloRunTimeMsgData_params_GET_ELEMENT_POS( base_ptr, idx0, bmlocal341_parent_out_ptr, out_bitoff );\
	out_ptr = bmlocal341_parent_out_ptr;\
}

// Alignment of DilloRunTimeMsgData_params_value: accumulated=(0,0, ABA=2), parent.base=(0,0, ABA=2)
#define BM_DilloRunTimeMsgData_params_value_GET_SIZE( base_ptr, idx0, out_bytes, out_bits )\
{\
	/*lint --e{*} */\
	out_bytes = 2;\
	out_bits = 0;\
	BMI_UNUSED_VAR( base_ptr );\
	BMI_UNUSED_VAR( idx0 );\
}

#define BM_DilloRunTimeMsgData_params_value_GET( base_ptr, idx0, out_val )\
{\
	/*lint --e{*} */\
	PVOID bmlocal342_my_ptr;\
	UINT bmlocal343_my_bitoff;\
	BM_DilloRunTimeMsgData_params_value_GET_POS( base_ptr, idx0, bmlocal342_my_ptr, bmlocal343_my_bitoff );\
	if( BMI_MACHINE_ARM_LITTLE == BMI_MACHINE_VALUE )\
	{\
		(out_val) = (UINT16)BMI_32BIT_EXTRACT( (BMI_GET_16BIT_PTR_CONTENTS( BMI_PTR_TO_NUMERIC_CAST(bmlocal342_my_ptr)) ), 0, 16, 0);\
	}\
	else if( BMI_MACHINE_INTEL_LITTLE == BMI_MACHINE_VALUE )\
	{\
		(out_val) = (UINT16)BMI_32BIT_EXTRACT( (BMI_GET_16BIT_PTR_CONTENTS( BMI_PTR_TO_NUMERIC_CAST(bmlocal342_my_ptr)) ), 0, 16, 0);\
	}\
	else\
	{\
		BMI_GENERIC_32BIT_LITTLE_GET( bmlocal342_my_ptr, bmlocal343_my_bitoff, 16, UINT16, out_val, 0xFFFFFFFF );\
	}\
}

BMI_INLINE UINT16 BM_INLINE_DilloRunTimeMsgData_params_value_GET(PVOID base_ptr, UINT idx0)
{
	/*lint --e{*} */
	UINT16 bmlocal344_tmp_var;
	BM_DilloRunTimeMsgData_params_value_GET( base_ptr, idx0, bmlocal344_tmp_var );
	return bmlocal344_tmp_var;
}

#define BM_DilloRunTimeMsgData_params_value_SET( base_ptr, idx0, in_val )\
{\
	/*lint --e{*} */\
	PVOID bmlocal345_my_ptr;\
	UINT bmlocal346_my_bitoff;\
	BM_DilloRunTimeMsgData_params_value_GET_POS( base_ptr, idx0, bmlocal345_my_ptr, bmlocal346_my_bitoff );\
	if( BMI_MACHINE_ARM_LITTLE == BMI_MACHINE_VALUE )\
	{\
		BMI_32BIT_CLEAR_ASSIGN_TYPE( BMI_GET_16BIT_PTR_CONTENTS( BMI_PTR_TO_NUMERIC_CAST(bmlocal345_my_ptr) ), (in_val), 0, 0, 16, UINT16 );\
	}\
	else if( BMI_MACHINE_INTEL_LITTLE == BMI_MACHINE_VALUE )\
	{\
		BMI_32BIT_CLEAR_ASSIGN_TYPE( BMI_GET_16BIT_PTR_CONTENTS( BMI_PTR_TO_NUMERIC_CAST(bmlocal345_my_ptr) ), (in_val), 0, 0, 16, UINT16 );\
	}\
	else\
	{\
		BMI_GENERIC_32BIT_LITTLE_SET( bmlocal345_my_ptr, bmlocal346_my_bitoff, 16, in_val, 0xFFFFFFFF );\
	}\
}

// DilloRunTimeMsgData_params_value: IS_DEFAULT accessor is not defined because no default value was specified.
// DilloRunTimeMsgData_params_value: SET_DEFAULT accessor is not defined because no default value was specified.
// DilloRunTimeMsgData_params_value: IS_RESET accessor is not defined because no reset value was specified.
// DilloRunTimeMsgData_params_value: SET_RESET accessor is not defined because no reset value was specified.
// DilloRunTimeMsgData_params_value: CLEAR accessor is not defined because of incompatible access rights. Specified: RW Required: W1C, WO1C.
// DilloRunTimeMsgData_params_value: SET(W1S) accessor is not defined because of incompatible access rights. Specified: RW Required: W1S, WO1S.
#define BM_DilloRunTimeMsgData_params_value_DUMP_DEPTH( base_ptr, idx0, depth )\
{\
	/*lint --e{*} */\
	UINT16 bmlocal347_out_val;\
	BM_DilloRunTimeMsgData_params_value_GET( base_ptr, idx0, bmlocal347_out_val );\
	/*lint -e(571) */\
	BMI_FORMAT_DUMP(depth, "value", 16, (UINT)(bmlocal347_out_val), "%u", 1);\
}

#define BM_DilloRunTimeMsgData_params_value_DUMP( base_ptr, idx0 )\
{\
	/*lint --e{*} */\
	BM_DilloRunTimeMsgData_params_value_DUMP_DEPTH( base_ptr, idx0, 0 );\
}

#define BM_DilloRunTimeMsgData_params_value_INCREMENT( base_ptr, idx0 )\
{\
	/*lint --e{*} */\
	PVOID bmlocal348_my_ptr;\
	UINT bmlocal349_my_bitoff;\
	BM_DilloRunTimeMsgData_params_value_GET_POS( base_ptr, idx0, bmlocal348_my_ptr, bmlocal349_my_bitoff );\
	(*((UINT16*)bmlocal348_my_ptr))++;\
	BMI_UNUSED_VAR( bmlocal349_my_bitoff );\
}

// DilloRunTimeMsgData_params_value: Validation accessors are not defined because validation condition was not specified.
#define BM_DilloRunTimeMsgData_params_value_GET_BYTES_SIZE( base_ptr, idx0, out_bytes )\
{\
	/*lint --e{*} */\
	UINT bmlocal350_tmp_bits;\
	BM_DilloRunTimeMsgData_params_value_GET_SIZE( base_ptr, idx0, out_bytes, bmlocal350_tmp_bits );\
	BMI_ROUND_UP_1BYTES( out_bytes, bmlocal350_tmp_bits );\
}

#define BM_DilloRunTimeMsgData_params_value_BYTES_SIZE 2

#define BM_DilloRunTimeMsgData_params_GET_CELL_SIZE( base_ptr, idx0, out_bytes, out_bits )\
{\
	/*lint --e{*} */\
	out_bytes = 2;\
	out_bits = 0;\
	BMI_UNUSED_VAR( base_ptr );\
	BMI_UNUSED_VAR( idx0 );\
}

#define BM_DilloRunTimeMsgData_params_GET_BYTES_CELL_SIZE( base_ptr, idx0, out_bytes )\
{\
	/*lint --e{*} */\
	UINT bmlocal353_tmp_bits;\
	BM_DilloRunTimeMsgData_params_GET_CELL_SIZE( base_ptr, idx0, out_bytes, bmlocal353_tmp_bits );\
	BMI_ROUND_UP_1BYTES( out_bytes, bmlocal353_tmp_bits );\
}

#define BM_DilloRunTimeMsgData_params_BYTES_CELL_SIZE 2

BMI_INLINE UINT BM_INLINE_DilloRunTimeMsgData_params_GET_CELL_SIZE()
{
	/*lint --e{*} */
	return 2;
}

#define BM_DilloRunTimeMsgData_params_DUMP_DEPTH_IDX( base_ptr, idx0, depth )\
{\
	/*lint --e{*} */\
	BM_DilloRunTimeMsgData_params_value_DUMP_DEPTH( base_ptr, idx0, (depth + 1) );\
	BMI_UNUSED_VAR( base_ptr );\
	BMI_UNUSED_VAR( idx0 );\
}

#define BM_DilloRunTimeMsgData_params_DUMP_IDX( base_ptr, idx0 )\
{\
	/*lint --e{*} */\
	BM_DilloRunTimeMsgData_params_DUMP_DEPTH_IDX( base_ptr, idx0, 0 );\
}

#define BM_DilloRunTimeMsgData_params_DUMP_DEPTH( base_ptr, depth )\
{\
	/*lint --e{*} */\
	UINT bmlocal354_dim_size0;\
	UINT bmlocal355_idx0;\
	{\
		UINT16 bmlocal356_var0;\
		BM_DilloRunTimeMsgData_status_numOfParams_GET( base_ptr, bmlocal356_var0 );\
		bmlocal354_dim_size0 = (UINT)(bmlocal356_var0);\
	}\
	BMI_FORMAT_NONVALUE_DUMP(depth, "params", 1);\
	for( bmlocal355_idx0=0; bmlocal355_idx0<bmlocal354_dim_size0; bmlocal355_idx0++ )\
	{\
		BMI_FORMAT_NONVALUE_DUMP((depth + 1), "(", 0);\
		/*lint -e(571) */\
		BMI_FORMAT_DUMP(0, "", 32, (UINT)(bmlocal355_idx0), "%d", 0);\
		BMI_FORMAT_NONVALUE_DUMP(0, ")", 1);\
		BM_DilloRunTimeMsgData_params_DUMP_DEPTH_IDX( base_ptr, bmlocal355_idx0, depth );\
	}\
	BMI_UNUSED_VAR( base_ptr );\
}

#define BM_DilloRunTimeMsgData_params_DUMP( base_ptr )\
{\
	/*lint --e{*} */\
	BM_DilloRunTimeMsgData_params_DUMP_DEPTH( base_ptr, 0 );\
}

#define BM_DilloRunTimeMsgData_params_GET_BYTES_SIZE( base_ptr, out_bytes )\
{\
	/*lint --e{*} */\
	UINT bmlocal357_tmp_bits;\
	BM_DilloRunTimeMsgData_params_GET_SIZE( base_ptr, out_bytes, bmlocal357_tmp_bits );\
	BMI_ROUND_UP_1BYTES( out_bytes, bmlocal357_tmp_bits );\
}


#define BM_DilloRunTimeMsgData_timeStampOpt_GET_POS( base_ptr, out_ptr, out_bitoff )\
{\
	/*lint --e{*} */\
	UINT bmlocal358_tmp_bytes = 0;\
	UINT bmlocal359_tmp_bits = 0;\
	UINT bmlocal360_acc_bytes;\
	UINT bmlocal361_acc_bits;\
	out_ptr = base_ptr;\
	out_bitoff = 0;\
	bmlocal360_acc_bytes = 2;\
	bmlocal361_acc_bits = 0;\
	BM_DilloRunTimeMsgData_params_GET_SIZE( base_ptr, bmlocal358_tmp_bytes, bmlocal359_tmp_bits );\
	bmlocal360_acc_bytes += bmlocal358_tmp_bytes;\
	bmlocal361_acc_bits += bmlocal359_tmp_bits;\
	BMI_ADD_ASSIGN_PTR( out_ptr, bmlocal360_acc_bytes );\
	out_bitoff += bmlocal361_acc_bits;\
}

#define BM_DilloRunTimeMsgData_timeStampOpt_timeStamp_GET_POS( base_ptr, out_ptr, out_bitoff )\
{\
	/*lint --e{*} */\
	PVOID bmlocal362_parent_out_ptr;\
	BM_DilloRunTimeMsgData_timeStampOpt_GET_POS( base_ptr, bmlocal362_parent_out_ptr, out_bitoff );\
	out_ptr = bmlocal362_parent_out_ptr;\
}

// COMPOSITE: Full name: 'DilloRunTimeMsgData_timeStampOpt_timeStamp' Type: 'DilloTimeStamp', Inner, Non-instance, No bitoff root
#define BM_DilloRunTimeMsgData_timeStampOpt_timeStamp_leastSignificant_GET_POS( base_ptr, out_ptr, out_bitoff )\
{\
	/*lint --e{*} */\
	PVOID bmlocal363_parent_out_ptr;\
	BM_DilloRunTimeMsgData_timeStampOpt_timeStamp_GET_POS( base_ptr, bmlocal363_parent_out_ptr, out_bitoff );\
	out_ptr = bmlocal363_parent_out_ptr;\
}

#define BM_DilloRunTimeMsgData_timeStampOpt_timeStamp_leastSignificant_GET_POS_ALIGNED( base_ptr, out_ptr )\
{\
	/*lint --e{*} */\
	UINT bmlocal364_tmp_bitoff;\
	BM_DilloRunTimeMsgData_timeStampOpt_timeStamp_leastSignificant_GET_POS( base_ptr, out_ptr, bmlocal364_tmp_bitoff );\
	BMI_NORMALIZE_BITOFF(out_ptr, bmlocal364_tmp_bitoff);\
}

// Alignment of DilloRunTimeMsgData_timeStampOpt_timeStamp_leastSignificant: accumulated=(Variable), parent.base=(Variable)
#define BM_DilloRunTimeMsgData_timeStampOpt_timeStamp_leastSignificant_GET_SIZE( base_ptr, out_bytes, out_bits )\
{\
	/*lint --e{*} */\
	out_bytes = 2;\
	out_bits = 0;\
	BMI_UNUSED_VAR( base_ptr );\
}

#define BM_DilloRunTimeMsgData_timeStampOpt_timeStamp_leastSignificant_GET( base_ptr, out_val )\
{\
	/*lint --e{*} */\
	PVOID bmlocal365_my_ptr;\
	UINT bmlocal366_my_bitoff;\
	BM_DilloRunTimeMsgData_timeStampOpt_timeStamp_leastSignificant_GET_POS( base_ptr, bmlocal365_my_ptr, bmlocal366_my_bitoff );\
	BMI_GENERIC_32BIT_LITTLE_GET( bmlocal365_my_ptr, bmlocal366_my_bitoff, 16, UINT16, out_val, 0xFFFFFFFF );\
}

BMI_INLINE UINT16 BM_INLINE_DilloRunTimeMsgData_timeStampOpt_timeStamp_leastSignificant_GET(PVOID base_ptr)
{
	/*lint --e{*} */
	UINT16 bmlocal367_tmp_var;
	BM_DilloRunTimeMsgData_timeStampOpt_timeStamp_leastSignificant_GET( base_ptr, bmlocal367_tmp_var );
	return bmlocal367_tmp_var;
}

#define BM_DilloRunTimeMsgData_timeStampOpt_timeStamp_leastSignificant_SET( base_ptr, in_val )\
{\
	/*lint --e{*} */\
	PVOID bmlocal368_my_ptr;\
	UINT bmlocal369_my_bitoff;\
	BM_DilloRunTimeMsgData_timeStampOpt_timeStamp_leastSignificant_GET_POS( base_ptr, bmlocal368_my_ptr, bmlocal369_my_bitoff );\
	BMI_GENERIC_32BIT_LITTLE_SET( bmlocal368_my_ptr, bmlocal369_my_bitoff, 16, in_val, 0xFFFFFFFF );\
}

// DilloRunTimeMsgData_timeStampOpt_timeStamp_leastSignificant: IS_DEFAULT accessor is not defined because no default value was specified.
// DilloRunTimeMsgData_timeStampOpt_timeStamp_leastSignificant: SET_DEFAULT accessor is not defined because no default value was specified.
// DilloRunTimeMsgData_timeStampOpt_timeStamp_leastSignificant: IS_RESET accessor is not defined because no reset value was specified.
// DilloRunTimeMsgData_timeStampOpt_timeStamp_leastSignificant: SET_RESET accessor is not defined because no reset value was specified.
// DilloRunTimeMsgData_timeStampOpt_timeStamp_leastSignificant: CLEAR accessor is not defined because of incompatible access rights. Specified: RW Required: W1C, WO1C.
// DilloRunTimeMsgData_timeStampOpt_timeStamp_leastSignificant: SET(W1S) accessor is not defined because of incompatible access rights. Specified: RW Required: W1S, WO1S.
#define BM_DilloRunTimeMsgData_timeStampOpt_timeStamp_leastSignificant_DUMP_DEPTH( base_ptr, depth )\
{\
	/*lint --e{*} */\
	UINT16 bmlocal370_out_val;\
	BM_DilloRunTimeMsgData_timeStampOpt_timeStamp_leastSignificant_GET( base_ptr, bmlocal370_out_val );\
	/*lint -e(571) */\
	BMI_FORMAT_DUMP(depth, "leastSignificant", 16, (UINT)(bmlocal370_out_val), "%d", 1);\
}

#define BM_DilloRunTimeMsgData_timeStampOpt_timeStamp_leastSignificant_DUMP( base_ptr )\
{\
	/*lint --e{*} */\
	BM_DilloRunTimeMsgData_timeStampOpt_timeStamp_leastSignificant_DUMP_DEPTH( base_ptr, 0 );\
}

#define BM_DilloRunTimeMsgData_timeStampOpt_timeStamp_leastSignificant_INCREMENT( base_ptr )\
{\
	/*lint --e{*} */\
	UINT16 bmlocal371_val;\
	BM_DilloRunTimeMsgData_timeStampOpt_timeStamp_leastSignificant_GET( base_ptr, bmlocal371_val );\
	(bmlocal371_val)++;\
	BM_DilloRunTimeMsgData_timeStampOpt_timeStamp_leastSignificant_SET( base_ptr, bmlocal371_val );\
}

// DilloRunTimeMsgData_timeStampOpt_timeStamp_leastSignificant: Validation accessors are not defined because validation condition was not specified.
#define BM_DilloRunTimeMsgData_timeStampOpt_timeStamp_leastSignificant_GET_BYTES_SIZE( base_ptr, out_bytes )\
{\
	/*lint --e{*} */\
	UINT bmlocal372_tmp_bits;\
	BM_DilloRunTimeMsgData_timeStampOpt_timeStamp_leastSignificant_GET_SIZE( base_ptr, out_bytes, bmlocal372_tmp_bits );\
	BMI_ROUND_UP_1BYTES( out_bytes, bmlocal372_tmp_bits );\
}

#define BM_DilloRunTimeMsgData_timeStampOpt_timeStamp_leastSignificant_BYTES_SIZE 2

#define BM_DilloRunTimeMsgData_timeStampOpt_timeStamp_mostSignificant_GET_POS( base_ptr, out_ptr, out_bitoff )\
{\
	/*lint --e{*} */\
	UINT bmlocal375_acc_bytes;\
	UINT bmlocal376_acc_bits;\
	PVOID bmlocal377_parent_out_ptr;\
	BM_DilloRunTimeMsgData_timeStampOpt_timeStamp_GET_POS( base_ptr, bmlocal377_parent_out_ptr, out_bitoff );\
	out_ptr = bmlocal377_parent_out_ptr;\
	bmlocal375_acc_bytes = 2;\
	bmlocal376_acc_bits = 0;\
	BMI_ADD_ASSIGN_PTR( out_ptr, bmlocal375_acc_bytes );\
	out_bitoff += bmlocal376_acc_bits;\
}

#define BM_DilloRunTimeMsgData_timeStampOpt_timeStamp_mostSignificant_GET_POS_ALIGNED( base_ptr, out_ptr )\
{\
	/*lint --e{*} */\
	UINT bmlocal378_tmp_bitoff;\
	BM_DilloRunTimeMsgData_timeStampOpt_timeStamp_mostSignificant_GET_POS( base_ptr, out_ptr, bmlocal378_tmp_bitoff );\
	BMI_NORMALIZE_BITOFF(out_ptr, bmlocal378_tmp_bitoff);\
}

// Alignment of DilloRunTimeMsgData_timeStampOpt_timeStamp_mostSignificant: accumulated=(Variable), parent.base=(Variable)
#define BM_DilloRunTimeMsgData_timeStampOpt_timeStamp_mostSignificant_GET_SIZE( base_ptr, out_bytes, out_bits )\
{\
	/*lint --e{*} */\
	out_bytes = 2;\
	out_bits = 0;\
	BMI_UNUSED_VAR( base_ptr );\
}

#define BM_DilloRunTimeMsgData_timeStampOpt_timeStamp_mostSignificant_GET( base_ptr, out_val )\
{\
	/*lint --e{*} */\
	PVOID bmlocal379_my_ptr;\
	UINT bmlocal380_my_bitoff;\
	BM_DilloRunTimeMsgData_timeStampOpt_timeStamp_mostSignificant_GET_POS( base_ptr, bmlocal379_my_ptr, bmlocal380_my_bitoff );\
	BMI_GENERIC_32BIT_LITTLE_GET( bmlocal379_my_ptr, bmlocal380_my_bitoff, 16, UINT16, out_val, 0xFFFFFFFF );\
}

BMI_INLINE UINT16 BM_INLINE_DilloRunTimeMsgData_timeStampOpt_timeStamp_mostSignificant_GET(PVOID base_ptr)
{
	/*lint --e{*} */
	UINT16 bmlocal381_tmp_var;
	BM_DilloRunTimeMsgData_timeStampOpt_timeStamp_mostSignificant_GET( base_ptr, bmlocal381_tmp_var );
	return bmlocal381_tmp_var;
}

#define BM_DilloRunTimeMsgData_timeStampOpt_timeStamp_mostSignificant_SET( base_ptr, in_val )\
{\
	/*lint --e{*} */\
	PVOID bmlocal382_my_ptr;\
	UINT bmlocal383_my_bitoff;\
	BM_DilloRunTimeMsgData_timeStampOpt_timeStamp_mostSignificant_GET_POS( base_ptr, bmlocal382_my_ptr, bmlocal383_my_bitoff );\
	BMI_GENERIC_32BIT_LITTLE_SET( bmlocal382_my_ptr, bmlocal383_my_bitoff, 16, in_val, 0xFFFFFFFF );\
}

// DilloRunTimeMsgData_timeStampOpt_timeStamp_mostSignificant: IS_DEFAULT accessor is not defined because no default value was specified.
// DilloRunTimeMsgData_timeStampOpt_timeStamp_mostSignificant: SET_DEFAULT accessor is not defined because no default value was specified.
// DilloRunTimeMsgData_timeStampOpt_timeStamp_mostSignificant: IS_RESET accessor is not defined because no reset value was specified.
// DilloRunTimeMsgData_timeStampOpt_timeStamp_mostSignificant: SET_RESET accessor is not defined because no reset value was specified.
// DilloRunTimeMsgData_timeStampOpt_timeStamp_mostSignificant: CLEAR accessor is not defined because of incompatible access rights. Specified: RW Required: W1C, WO1C.
// DilloRunTimeMsgData_timeStampOpt_timeStamp_mostSignificant: SET(W1S) accessor is not defined because of incompatible access rights. Specified: RW Required: W1S, WO1S.
#define BM_DilloRunTimeMsgData_timeStampOpt_timeStamp_mostSignificant_DUMP_DEPTH( base_ptr, depth )\
{\
	/*lint --e{*} */\
	UINT16 bmlocal384_out_val;\
	BM_DilloRunTimeMsgData_timeStampOpt_timeStamp_mostSignificant_GET( base_ptr, bmlocal384_out_val );\
	/*lint -e(571) */\
	BMI_FORMAT_DUMP(depth, "mostSignificant", 16, (UINT)(bmlocal384_out_val), "%d", 1);\
}

#define BM_DilloRunTimeMsgData_timeStampOpt_timeStamp_mostSignificant_DUMP( base_ptr )\
{\
	/*lint --e{*} */\
	BM_DilloRunTimeMsgData_timeStampOpt_timeStamp_mostSignificant_DUMP_DEPTH( base_ptr, 0 );\
}

#define BM_DilloRunTimeMsgData_timeStampOpt_timeStamp_mostSignificant_INCREMENT( base_ptr )\
{\
	/*lint --e{*} */\
	UINT16 bmlocal385_val;\
	BM_DilloRunTimeMsgData_timeStampOpt_timeStamp_mostSignificant_GET( base_ptr, bmlocal385_val );\
	(bmlocal385_val)++;\
	BM_DilloRunTimeMsgData_timeStampOpt_timeStamp_mostSignificant_SET( base_ptr, bmlocal385_val );\
}

// DilloRunTimeMsgData_timeStampOpt_timeStamp_mostSignificant: Validation accessors are not defined because validation condition was not specified.
#define BM_DilloRunTimeMsgData_timeStampOpt_timeStamp_mostSignificant_GET_BYTES_SIZE( base_ptr, out_bytes )\
{\
	/*lint --e{*} */\
	UINT bmlocal386_tmp_bits;\
	BM_DilloRunTimeMsgData_timeStampOpt_timeStamp_mostSignificant_GET_SIZE( base_ptr, out_bytes, bmlocal386_tmp_bits );\
	BMI_ROUND_UP_1BYTES( out_bytes, bmlocal386_tmp_bits );\
}

#define BM_DilloRunTimeMsgData_timeStampOpt_timeStamp_mostSignificant_BYTES_SIZE 2

#define BM_DilloRunTimeMsgData_timeStampOpt_timeStamp_GET_NON_CONDITIONAL_SIZE( base_ptr, out_bytes, out_bits )\
{\
	/*lint --e{*} */\
	out_bytes = 4;\
	out_bits = 0;\
	BMI_UNUSED_VAR( base_ptr );\
}

#define BM_DilloRunTimeMsgData_timeStampOpt_timeStamp_GET_BYTES_NON_CONDITIONAL_SIZE( base_ptr, out_bytes )\
{\
	/*lint --e{*} */\
	UINT bmlocal389_tmp_bits;\
	BM_DilloRunTimeMsgData_timeStampOpt_timeStamp_GET_NON_CONDITIONAL_SIZE( base_ptr, out_bytes, bmlocal389_tmp_bits );\
	BMI_ROUND_UP_1BYTES( out_bytes, bmlocal389_tmp_bits );\
}

#define BM_DilloRunTimeMsgData_timeStampOpt_timeStamp_BYTES_SIZE 4

#define BM_DilloRunTimeMsgData_timeStampOpt_timeStamp_DUMP_DEPTH( base_ptr, depth )\
{\
	/*lint --e{*} */\
	BMI_FORMAT_NONVALUE_DUMP(depth, "timeStamp", 1);\
	BM_DilloRunTimeMsgData_timeStampOpt_timeStamp_leastSignificant_DUMP_DEPTH( base_ptr, (depth + 1) );\
	BM_DilloRunTimeMsgData_timeStampOpt_timeStamp_mostSignificant_DUMP_DEPTH( base_ptr, (depth + 1) );\
	BMI_UNUSED_VAR( base_ptr );\
}

#define BM_DilloRunTimeMsgData_timeStampOpt_timeStamp_DUMP( base_ptr )\
{\
	/*lint --e{*} */\
	BM_DilloRunTimeMsgData_timeStampOpt_timeStamp_DUMP_DEPTH( base_ptr, 0 );\
}

#define BM_DilloRunTimeMsgData_timeStampOpt_timeStamp_GET_SIZE( base_ptr, out_bytes, out_bits )\
{\
	/*lint --e{*} */\
	{\
		UINT16 bmlocal390_var0;\
		BM_DilloRunTimeMsgData_status_timeStampPresent_GET( base_ptr, bmlocal390_var0 );\
		if( bmlocal390_var0 != 0 )\
		{\
			out_bytes = 4;\
			out_bits = 0;\
		}\
		else\
		{\
			out_bytes = 0;\
			out_bits = 0;\
		}\
	}\
	BMI_UNUSED_VAR( base_ptr );\
}

#define BM_DilloRunTimeMsgData_timeStampOpt_timeStamp_EVALUATE( base_ptr, out_flag )\
{\
	/*lint --e{*} */\
	{\
		UINT16 bmlocal391_var0;\
		BM_DilloRunTimeMsgData_status_timeStampPresent_GET( base_ptr, bmlocal391_var0 );\
		out_flag = (bmlocal391_var0 != 0);\
	}\
	BMI_UNUSED_VAR( base_ptr );\
}


#define BM_DilloRunTimeMsgData_timeStampOpt_GET_SIZE( base_ptr, out_bytes, out_bits )\
{\
	/*lint --e{*} */\
	UINT bmlocal392_tmp_bytes = 0;\
	UINT bmlocal393_tmp_bits = 0;\
	out_bytes = 0;\
	out_bits = 0;\
	BM_DilloRunTimeMsgData_timeStampOpt_timeStamp_GET_SIZE( base_ptr, bmlocal392_tmp_bytes, bmlocal393_tmp_bits );\
	out_bytes += bmlocal392_tmp_bytes;\
	out_bits += bmlocal393_tmp_bits;\
}

#define BM_DilloRunTimeMsgData_timeStampOpt_GET_BYTES_SIZE( base_ptr, out_bytes )\
{\
	/*lint --e{*} */\
	UINT bmlocal394_tmp_bits;\
	BM_DilloRunTimeMsgData_timeStampOpt_GET_SIZE( base_ptr, out_bytes, bmlocal394_tmp_bits );\
	BMI_ROUND_UP_1BYTES( out_bytes, bmlocal394_tmp_bits );\
}

#define BM_DilloRunTimeMsgData_timeStampOpt_DUMP_DEPTH( base_ptr, depth )\
{\
	/*lint --e{*} */\
	BOOL bmlocal395_out_flag;\
	BMI_FORMAT_NONVALUE_DUMP(depth, "timeStampOpt", 1);\
	do\
	{\
		BM_DilloRunTimeMsgData_timeStampOpt_timeStamp_EVALUATE( base_ptr, bmlocal395_out_flag );\
		if( bmlocal395_out_flag == 1 )\
		{\
			BM_DilloRunTimeMsgData_timeStampOpt_timeStamp_DUMP_DEPTH( base_ptr, (depth + 1) );\
		}\
	}\
	while( /*lint -e(717) */ /*do ... while(0)*/ 0 );\
}

#define BM_DilloRunTimeMsgData_timeStampOpt_DUMP( base_ptr )\
{\
	/*lint --e{*} */\
	BM_DilloRunTimeMsgData_timeStampOpt_DUMP_DEPTH( base_ptr, 0 );\
}


#define BM_DilloRunTimeMsgData_GET_SIZE( base_ptr, out_bytes, out_bits )\
{\
	/*lint --e{*} */\
	UINT bmlocal396_tmp_bytes = 0;\
	UINT bmlocal397_tmp_bits = 0;\
	out_bytes = 2;\
	out_bits = 0;\
	BM_DilloRunTimeMsgData_params_GET_SIZE( base_ptr, bmlocal396_tmp_bytes, bmlocal397_tmp_bits );\
	out_bytes += bmlocal396_tmp_bytes;\
	out_bits += bmlocal397_tmp_bits;\
	BM_DilloRunTimeMsgData_timeStampOpt_GET_SIZE( base_ptr, bmlocal396_tmp_bytes, bmlocal397_tmp_bits );\
	out_bytes += bmlocal396_tmp_bytes;\
	out_bits += bmlocal397_tmp_bits;\
}

#define BM_DilloRunTimeMsgData_GET_BYTES_SIZE( base_ptr, out_bytes )\
{\
	/*lint --e{*} */\
	UINT bmlocal398_tmp_bits;\
	BM_DilloRunTimeMsgData_GET_SIZE( base_ptr, out_bytes, bmlocal398_tmp_bits );\
	BMI_ROUND_UP_1BYTES( out_bytes, bmlocal398_tmp_bits );\
}

#define BM_DilloRunTimeMsgData_DUMP_DEPTH( base_ptr, depth )\
{\
	/*lint --e{*} */\
	BMI_FORMAT_NONVALUE_DUMP(depth, "DilloRunTimeMsgData", 1);\
	BM_DilloRunTimeMsgData_status_DUMP_DEPTH( base_ptr, (depth + 1) );\
	BM_DilloRunTimeMsgData_params_DUMP_DEPTH( base_ptr, (depth + 1) );\
	BM_DilloRunTimeMsgData_timeStampOpt_DUMP_DEPTH( base_ptr, (depth + 1) );\
	BMI_UNUSED_VAR( base_ptr );\
}

#define BM_DilloRunTimeMsgData_DUMP( base_ptr )\
{\
	/*lint --e{*} */\
	BM_DilloRunTimeMsgData_DUMP_DEPTH( base_ptr, 0 );\
}


/*lint --flb */

#endif /* _BITMAN_TRACEMESSAGEDILLO_H_ */

